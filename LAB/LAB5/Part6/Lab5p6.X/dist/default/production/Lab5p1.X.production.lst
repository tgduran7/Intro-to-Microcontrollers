

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Wed Mar 02 18:50:11 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    34                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           	psect	idataCOMRAM
    37  001C24                     __pidataCOMRAM:
    38                           	opt stack 0
    39                           
    40                           ;initializer for _array
    41  001C24  40                 	db	64
    42  001C25  79                 	db	121
    43  001C26  24                 	db	36
    44  001C27  30                 	db	48
    45  001C28  19                 	db	25
    46  001C29  12                 	db	18
    47  001C2A  02                 	db	2
    48  001C2B  78                 	db	120
    49  001C2C  00                 	db	0
    50  001C2D  18                 	db	24
    51                           
    52                           	psect	smallconst
    53  001000                     __psmallconst:
    54                           	opt stack 0
    55  001000  00                 	db	0
    56  001001                     _dpowers:
    57                           	opt stack 0
    58  001001  0001               	dw	1
    59  001003  000A               	dw	10
    60  001005  0064               	dw	100
    61  001007  03E8               	dw	1000
    62  001009  2710               	dw	10000
    63  00100B                     __end_of_dpowers:
    64                           	opt stack 0
    65  0000                     _ADCON0	set	4034
    66  0000                     _ADCON0bits	set	4034
    67  0000                     _ADCON1	set	4033
    68  0000                     _ADCON2	set	4032
    69  0000                     _ADRESH	set	4036
    70  0000                     _ADRESL	set	4035
    71  0000                     _OSCCON	set	4051
    72  0000                     _PIE1bits	set	3997
    73  0000                     _PIR1bits	set	3998
    74  0000                     _PORTB	set	3969
    75  0000                     _PORTC	set	3970
    76  0000                     _PORTD	set	3971
    77  0000                     _PORTE	set	3972
    78  0000                     _RCSTA	set	4011
    79  0000                     _RCSTAbits	set	4011
    80  0000                     _SPBRG	set	4015
    81  0000                     _SPBRGH	set	4016
    82  0000                     _TRISA	set	3986
    83  0000                     _TRISB	set	3987
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISCbits	set	3988
    86  0000                     _TRISD	set	3989
    87  0000                     _TRISE	set	3990
    88  0000                     _TXREG	set	4013
    89  0000                     _TXSTA	set	4012
    90  0000                     _TXSTAbits	set	4012
    91  0000                     _TRMT	set	32097
    92  00100B                     STR_1:
    93  00100B  54                 	db	84	;'T'
    94  00100C  65                 	db	101	;'e'
    95  00100D  6D                 	db	109	;'m'
    96  00100E  70                 	db	112	;'p'
    97  00100F  65                 	db	101	;'e'
    98  001010  72                 	db	114	;'r'
    99  001011  61                 	db	97	;'a'
   100  001012  74                 	db	116	;'t'
   101  001013  75                 	db	117	;'u'
   102  001014  72                 	db	114	;'r'
   103  001015  65                 	db	101	;'e'
   104  001016  20                 	db	32
   105  001017  3D                 	db	61	;'='
   106  001018  20                 	db	32
   107  001019  25                 	db	37
   108  00101A  64                 	db	100	;'d'
   109  00101B  20                 	db	32
   110  00101C  6D                 	db	109	;'m'
   111  00101D  56                 	db	86	;'V'
   112  00101E  20                 	db	32
   113  00101F  0D                 	db	13
   114  001020  0A                 	db	10
   115  001021  0A                 	db	10
   116  001022  00                 	db	0
   117  001023                     STR_2:
   118  001023  4C                 	db	76	;'L'
   119  001024  69                 	db	105	;'i'
   120  001025  67                 	db	103	;'g'
   121  001026  68                 	db	104	;'h'
   122  001027  74                 	db	116	;'t'
   123  001028  20                 	db	32
   124  001029  56                 	db	86	;'V'
   125  00102A  6F                 	db	111	;'o'
   126  00102B  6C                 	db	108	;'l'
   127  00102C  74                 	db	116	;'t'
   128  00102D  20                 	db	32
   129  00102E  3D                 	db	61	;'='
   130  00102F  20                 	db	32
   131  001030  25                 	db	37
   132  001031  64                 	db	100	;'d'
   133  001032  20                 	db	32
   134  001033  46                 	db	70	;'F'
   135  001034  20                 	db	32
   136  001035  0D                 	db	13
   137  001036  0A                 	db	10
   138  001037  0A                 	db	10
   139  001038  00                 	db	0
   140                           
   141                           ; #config settings
   142  001039  00                 	db	0	; dummy byte at the end
   143  0000                     
   144                           	psect	cinit
   145  001B1E                     __pcinit:
   146                           	opt stack 0
   147  001B1E                     start_initialization:
   148                           	opt stack 0
   149  001B1E                     __initialization:
   150                           	opt stack 0
   151                           
   152                           ; Initialize objects allocated to COMRAM (10 bytes)
   153                           ; load TBLPTR registers with __pidataCOMRAM
   154  001B1E  0E24               	movlw	low __pidataCOMRAM
   155  001B20  6EF6               	movwf	tblptrl,c
   156  001B22  0E1C               	movlw	high __pidataCOMRAM
   157  001B24  6EF7               	movwf	tblptrh,c
   158  001B26  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   159  001B28  6EF8               	movwf	tblptru,c
   160  001B2A  EE00  F04A         	lfsr	0,__pdataCOMRAM
   161  001B2E  EE10 F00A          	lfsr	1,10
   162  001B32                     copy_data0:
   163  001B32  0009               	tblrd		*+
   164  001B34  CFF5 FFEE          	movff	tablat,postinc0
   165  001B38  50E5               	movf	postdec1,w,c
   166  001B3A  50E1               	movf	fsr1l,w,c
   167  001B3C  E1FA               	bnz	copy_data0
   168  001B3E                     end_of_initialization:
   169                           	opt stack 0
   170  001B3E                     __end_of__initialization:
   171                           	opt stack 0
   172  001B3E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  001B40  6EF8               	movwf	tblptru,c
   174  001B42  0100               	movlb	0
   175  001B44  EFFF  F008         	goto	_main	;jump to C main() function
   176                           tblptru	equ	0xFF8
   177                           tblptrh	equ	0xFF7
   178                           tblptrl	equ	0xFF6
   179                           tablat	equ	0xFF5
   180                           postinc0	equ	0xFEE
   181                           postdec1	equ	0xFE5
   182                           fsr1l	equ	0xFE1
   183                           
   184                           	psect	dataCOMRAM
   185  00004A                     __pdataCOMRAM:
   186                           	opt stack 0
   187  00004A                     _array:
   188                           	opt stack 0
   189  00004A                     	ds	10
   190                           tblptru	equ	0xFF8
   191                           tblptrh	equ	0xFF7
   192                           tblptrl	equ	0xFF6
   193                           tablat	equ	0xFF5
   194                           postinc0	equ	0xFEE
   195                           postdec1	equ	0xFE5
   196                           fsr1l	equ	0xFE1
   197                           
   198                           	psect	cstackCOMRAM
   199  000001                     __pcstackCOMRAM:
   200                           	opt stack 0
   201  000001                     ?_Get_Full_ADC:
   202                           	opt stack 0
   203  000001                     ?___awdiv:
   204                           	opt stack 0
   205  000001                     ?___awmod:
   206                           	opt stack 0
   207  000001                     ?___lwdiv:
   208                           	opt stack 0
   209  000001                     ?___ftpack:
   210                           	opt stack 0
   211  000001                     ?___ftneg:
   212                           	opt stack 0
   213  000001                     ?___fttol:
   214                           	opt stack 0
   215  000001                     putch@c:
   216                           	opt stack 0
   217  000001                     Select_ADC_Channel@channel:
   218                           	opt stack 0
   219  000001                     Display_Lower_Digit@digit:
   220                           	opt stack 0
   221  000001                     DO_DISPLAY_D1@temp:
   222                           	opt stack 0
   223  000001                     WAIT_1_SEC@j:
   224                           	opt stack 0
   225  000001                     OpenUSART@spbrg:
   226                           	opt stack 0
   227  000001                     ___awdiv@dividend:
   228                           	opt stack 0
   229  000001                     ___awmod@dividend:
   230                           	opt stack 0
   231  000001                     ___lwdiv@dividend:
   232                           	opt stack 0
   233  000001                     ___ftpack@arg:
   234                           	opt stack 0
   235  000001                     ___ftneg@f1:
   236                           	opt stack 0
   237  000001                     ___fttol@f1:
   238                           	opt stack 0
   239                           
   240                           ; 3 bytes @ 0x0
   241  000001                     	ds	1
   242  000002                     Display_Upper_Digit@digit:
   243                           	opt stack 0
   244                           
   245                           ; 1 bytes @ 0x1
   246  000002                     	ds	1
   247  000003                     ??_Get_Full_ADC:
   248  000003                     OpenUSART@config:
   249                           	opt stack 0
   250  000003                     ___awdiv@divisor:
   251                           	opt stack 0
   252  000003                     ___awmod@divisor:
   253                           	opt stack 0
   254  000003                     ___lwdiv@divisor:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x2
   258  000003                     	ds	1
   259  000004                     ___ftpack@exp:
   260                           	opt stack 0
   261                           
   262                           ; 1 bytes @ 0x3
   263  000004                     	ds	1
   264  000005                     ??___fttol:
   265  000005                     ___awdiv@counter:
   266                           	opt stack 0
   267  000005                     ___awmod@counter:
   268                           	opt stack 0
   269  000005                     ___ftpack@sign:
   270                           	opt stack 0
   271  000005                     Get_Full_ADC@result:
   272                           	opt stack 0
   273  000005                     ___lwdiv@quotient:
   274                           	opt stack 0
   275                           
   276                           ; 2 bytes @ 0x4
   277  000005                     	ds	1
   278  000006                     ??___ftpack:
   279  000006                     ___awdiv@sign:
   280                           	opt stack 0
   281  000006                     ___awmod@sign:
   282                           	opt stack 0
   283                           
   284                           ; 1 bytes @ 0x5
   285  000006                     	ds	1
   286  000007                     ___lwdiv@counter:
   287                           	opt stack 0
   288  000007                     ___awdiv@quotient:
   289                           	opt stack 0
   290                           
   291                           ; 2 bytes @ 0x6
   292  000007                     	ds	1
   293  000008                     ?___lwmod:
   294                           	opt stack 0
   295  000008                     ___lwmod@dividend:
   296                           	opt stack 0
   297                           
   298                           ; 2 bytes @ 0x7
   299  000008                     	ds	1
   300  000009                     ?___awtoft:
   301                           	opt stack 0
   302  000009                     ___awtoft@c:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x8
   306  000009                     	ds	1
   307  00000A                     ___fttol@sign1:
   308                           	opt stack 0
   309  00000A                     ___lwmod@divisor:
   310                           	opt stack 0
   311                           
   312                           ; 2 bytes @ 0x9
   313  00000A                     	ds	1
   314  00000B                     ___fttol@lval:
   315                           	opt stack 0
   316                           
   317                           ; 4 bytes @ 0xA
   318  00000B                     	ds	1
   319  00000C                     ___awtoft@sign:
   320                           	opt stack 0
   321  00000C                     ___lwmod@counter:
   322                           	opt stack 0
   323                           
   324                           ; 1 bytes @ 0xB
   325  00000C                     	ds	1
   326  00000D                     ?_printf:
   327                           	opt stack 0
   328  00000D                     ?___ftmul:
   329                           	opt stack 0
   330  00000D                     printf@f:
   331                           	opt stack 0
   332  00000D                     ___ftmul@f1:
   333                           	opt stack 0
   334                           
   335                           ; 3 bytes @ 0xC
   336  00000D                     	ds	2
   337  00000F                     ___fttol@exp1:
   338                           	opt stack 0
   339                           
   340                           ; 1 bytes @ 0xE
   341  00000F                     	ds	1
   342  000010                     ___ftmul@f2:
   343                           	opt stack 0
   344                           
   345                           ; 3 bytes @ 0xF
   346  000010                     	ds	1
   347  000011                     ??_printf:
   348                           
   349                           ; 0 bytes @ 0x10
   350  000011                     	ds	1
   351  000012                     printf@ap:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x11
   355  000012                     	ds	1
   356  000013                     ??___ftmul:
   357                           
   358                           ; 0 bytes @ 0x12
   359  000013                     	ds	1
   360  000014                     printf@flag:
   361                           	opt stack 0
   362                           
   363                           ; 1 bytes @ 0x13
   364  000014                     	ds	1
   365  000015                     printf@prec:
   366                           	opt stack 0
   367                           
   368                           ; 1 bytes @ 0x14
   369  000015                     	ds	1
   370  000016                     ___ftmul@exp:
   371                           	opt stack 0
   372  000016                     printf@val:
   373                           	opt stack 0
   374                           
   375                           ; 2 bytes @ 0x15
   376  000016                     	ds	1
   377  000017                     ___ftmul@f3_as_product:
   378                           	opt stack 0
   379                           
   380                           ; 3 bytes @ 0x16
   381  000017                     	ds	1
   382  000018                     printf@c:
   383                           	opt stack 0
   384                           
   385                           ; 1 bytes @ 0x17
   386  000018                     	ds	2
   387  00001A                     ___ftmul@cntr:
   388                           	opt stack 0
   389                           
   390                           ; 1 bytes @ 0x19
   391  00001A                     	ds	1
   392  00001B                     ___ftmul@sign:
   393                           	opt stack 0
   394                           
   395                           ; 1 bytes @ 0x1A
   396  00001B                     	ds	1
   397  00001C                     ?___ftadd:
   398                           	opt stack 0
   399  00001C                     ___ftadd@f1:
   400                           	opt stack 0
   401                           
   402                           ; 3 bytes @ 0x1B
   403  00001C                     	ds	3
   404  00001F                     ___ftadd@f2:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0x1E
   408  00001F                     	ds	3
   409  000022                     ??___ftadd:
   410                           
   411                           ; 0 bytes @ 0x21
   412  000022                     	ds	3
   413  000025                     ___ftadd@sign:
   414                           	opt stack 0
   415                           
   416                           ; 1 bytes @ 0x24
   417  000025                     	ds	1
   418  000026                     ___ftadd@exp2:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0x25
   422  000026                     	ds	1
   423  000027                     ___ftadd@exp1:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0x26
   427  000027                     	ds	1
   428  000028                     ?___ftdiv:
   429                           	opt stack 0
   430  000028                     ___ftdiv@f1:
   431                           	opt stack 0
   432                           
   433                           ; 3 bytes @ 0x27
   434  000028                     	ds	3
   435  00002B                     ___ftdiv@f2:
   436                           	opt stack 0
   437                           
   438                           ; 3 bytes @ 0x2A
   439  00002B                     	ds	3
   440  00002E                     ??___ftdiv:
   441                           
   442                           ; 0 bytes @ 0x2D
   443  00002E                     	ds	3
   444  000031                     ___ftdiv@cntr:
   445                           	opt stack 0
   446                           
   447                           ; 1 bytes @ 0x30
   448  000031                     	ds	1
   449  000032                     ___ftdiv@f3:
   450                           	opt stack 0
   451                           
   452                           ; 3 bytes @ 0x31
   453  000032                     	ds	3
   454  000035                     ___ftdiv@exp:
   455                           	opt stack 0
   456                           
   457                           ; 1 bytes @ 0x34
   458  000035                     	ds	1
   459  000036                     ___ftdiv@sign:
   460                           	opt stack 0
   461                           
   462                           ; 1 bytes @ 0x35
   463  000036                     	ds	1
   464  000037                     ??_main:
   465                           
   466                           ; 0 bytes @ 0x36
   467  000037                     	ds	2
   468  000039                     main@voltage_mv:
   469                           	opt stack 0
   470                           
   471                           ; 3 bytes @ 0x38
   472  000039                     	ds	3
   473  00003C                     main@temperature_C:
   474                           	opt stack 0
   475                           
   476                           ; 3 bytes @ 0x3B
   477  00003C                     	ds	3
   478  00003F                     main@temperature_F:
   479                           	opt stack 0
   480                           
   481                           ; 3 bytes @ 0x3E
   482  00003F                     	ds	3
   483  000042                     main@voltage_mv1:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x41
   487  000042                     	ds	2
   488  000044                     main@U:
   489                           	opt stack 0
   490                           
   491                           ; 1 bytes @ 0x43
   492  000044                     	ds	1
   493  000045                     main@L:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x44
   497  000045                     	ds	1
   498  000046                     main@num_step:
   499                           	opt stack 0
   500                           
   501                           ; 2 bytes @ 0x45
   502  000046                     	ds	2
   503  000048                     main@tempF:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x47
   507  000048                     	ds	2
   508                           tblptru	equ	0xFF8
   509                           tblptrh	equ	0xFF7
   510                           tblptrl	equ	0xFF6
   511                           tablat	equ	0xFF5
   512                           postinc0	equ	0xFEE
   513                           postdec1	equ	0xFE5
   514                           fsr1l	equ	0xFE1
   515                           
   516 ;;
   517 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   518 ;;
   519 ;; *************** function _main *****************
   520 ;; Defined at:
   521 ;;		line 46 in file "Lab5p1.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  temperature_    3   62[COMRAM] float 
   526 ;;  temperature_    3   59[COMRAM] float 
   527 ;;  voltage_mv      3   56[COMRAM] float 
   528 ;;  tempF           2   71[COMRAM] int 
   529 ;;  num_step        2   69[COMRAM] int 
   530 ;;  voltage_mv1     2   65[COMRAM] int 
   531 ;;  L               1   68[COMRAM] unsigned char 
   532 ;;  U               1   67[COMRAM] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;		None               void
   535 ;; Registers used:
   536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   546 ;;Total ram usage:       19 bytes
   547 ;; Hardware stack levels required when called:    2
   548 ;; This function calls:
   549 ;;		_DO_DISPLAY_D1
   550 ;;		_Display_Lower_Digit
   551 ;;		_Display_Upper_Digit
   552 ;;		_Get_Full_ADC
   553 ;;		_Init_ADC
   554 ;;		_Init_UART
   555 ;;		_Select_ADC_Channel
   556 ;;		_WAIT_1_SEC
   557 ;;		___awdiv
   558 ;;		___awmod
   559 ;;		___awtoft
   560 ;;		___ftadd
   561 ;;		___ftdiv
   562 ;;		___ftmul
   563 ;;		___ftneg
   564 ;;		___fttol
   565 ;;		_printf
   566 ;; This function is called by:
   567 ;;		Startup code after reset
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text0
   572  0011FE                     __ptext0:
   573                           	opt stack 0
   574  0011FE                     _main:
   575                           	opt stack 29
   576                           
   577                           ;Lab5p1.c: 48: Init_UART();
   578                           
   579                           ;incstack = 0
   580  0011FE  ECFB  F00D         	call	_Init_UART	;wreg free
   581                           
   582                           ;Lab5p1.c: 49: Init_ADC();
   583  001202  EC17  F00E         	call	_Init_ADC	;wreg free
   584                           
   585                           ;Lab5p1.c: 50: TRISA = 0x0F;
   586  001206  0E0F               	movlw	15
   587  001208  6E92               	movwf	3986,c	;volatile
   588                           
   589                           ;Lab5p1.c: 51: TRISB = 0x00;
   590  00120A  0E00               	movlw	0
   591  00120C  6E93               	movwf	3987,c	;volatile
   592                           
   593                           ;Lab5p1.c: 52: TRISC = 0x00;
   594  00120E  0E00               	movlw	0
   595  001210  6E94               	movwf	3988,c	;volatile
   596                           
   597                           ;Lab5p1.c: 53: TRISD = 0x00;
   598  001212  0E00               	movlw	0
   599  001214  6E95               	movwf	3989,c	;volatile
   600                           
   601                           ;Lab5p1.c: 54: TRISE = 0x00;
   602  001216  0E00               	movlw	0
   603  001218  6E96               	movwf	3990,c	;volatile
   604  00121A  D000               	goto	l1835
   605  00121C                     l1835:
   606                           
   607                           ;Lab5p1.c: 57: {
   608                           ;Lab5p1.c: 58: Select_ADC_Channel(0);
   609  00121C  0E00               	movlw	0
   610  00121E  EC0C  F00E         	call	_Select_ADC_Channel
   611                           
   612                           ;Lab5p1.c: 59: int num_step = Get_Full_ADC();
   613  001222  ECB8  F00D         	call	_Get_Full_ADC	;wreg free
   614  001226  C001  F046         	movff	?_Get_Full_ADC,main@num_step
   615  00122A  C002  F047         	movff	?_Get_Full_ADC+1,main@num_step+1
   616                           
   617                           ;Lab5p1.c: 60: float voltage_mv = num_step * 4.0;
   618  00122E  C046  F009         	movff	main@num_step,___awtoft@c
   619  001232  C047  F00A         	movff	main@num_step+1,___awtoft@c+1
   620  001236  EC54  F00D         	call	___awtoft	;wreg free
   621  00123A  C009  F00D         	movff	?___awtoft,___ftmul@f1
   622  00123E  C00A  F00E         	movff	?___awtoft+1,___ftmul@f1+1
   623  001242  C00B  F00F         	movff	?___awtoft+2,___ftmul@f1+2
   624  001246  0E00               	movlw	0
   625  001248  6E10               	movwf	___ftmul@f2,c
   626  00124A  0E80               	movlw	128
   627  00124C  6E11               	movwf	___ftmul@f2+1,c
   628  00124E  0E40               	movlw	64
   629  001250  6E12               	movwf	___ftmul@f2+2,c
   630  001252  EC79  F00A         	call	___ftmul	;wreg free
   631  001256  C00D  F039         	movff	?___ftmul,main@voltage_mv
   632  00125A  C00E  F03A         	movff	?___ftmul+1,main@voltage_mv+1
   633  00125E  C00F  F03B         	movff	?___ftmul+2,main@voltage_mv+2
   634                           
   635                           ;Lab5p1.c: 61: float temperature_C = (1035.0 - voltage_mv) / 5.50;
   636  001262  0E60               	movlw	96
   637  001264  6E1F               	movwf	___ftadd@f2,c
   638  001266  0E81               	movlw	129
   639  001268  6E20               	movwf	___ftadd@f2+1,c
   640  00126A  0E44               	movlw	68
   641  00126C  6E21               	movwf	___ftadd@f2+2,c
   642  00126E  C039  F001         	movff	main@voltage_mv,___ftneg@f1
   643  001272  C03A  F002         	movff	main@voltage_mv+1,___ftneg@f1+1
   644  001276  C03B  F003         	movff	main@voltage_mv+2,___ftneg@f1+2
   645  00127A  ECCB  F00D         	call	___ftneg	;wreg free
   646  00127E  C001  F01C         	movff	?___ftneg,___ftadd@f1
   647  001282  C002  F01D         	movff	?___ftneg+1,___ftadd@f1+1
   648  001286  C003  F01E         	movff	?___ftneg+2,___ftadd@f1+2
   649  00128A  EC1D  F008         	call	___ftadd	;wreg free
   650  00128E  C01C  F028         	movff	?___ftadd,___ftdiv@f1
   651  001292  C01D  F029         	movff	?___ftadd+1,___ftdiv@f1+1
   652  001296  C01E  F02A         	movff	?___ftadd+2,___ftdiv@f1+2
   653  00129A  0E00               	movlw	0
   654  00129C  6E2B               	movwf	___ftdiv@f2,c
   655  00129E  0EB0               	movlw	176
   656  0012A0  6E2C               	movwf	___ftdiv@f2+1,c
   657  0012A2  0E40               	movlw	64
   658  0012A4  6E2D               	movwf	___ftdiv@f2+2,c
   659  0012A6  EC68  F00B         	call	___ftdiv	;wreg free
   660  0012AA  C028  F03C         	movff	?___ftdiv,main@temperature_C
   661  0012AE  C029  F03D         	movff	?___ftdiv+1,main@temperature_C+1
   662  0012B2  C02A  F03E         	movff	?___ftdiv+2,main@temperature_C+2
   663                           
   664                           ;Lab5p1.c: 62: float temperature_F = 1.80 * temperature_C + 32.0;
   665  0012B6  0E66               	movlw	102
   666  0012B8  6E10               	movwf	___ftmul@f2,c
   667  0012BA  0EE6               	movlw	230
   668  0012BC  6E11               	movwf	___ftmul@f2+1,c
   669  0012BE  0E3F               	movlw	63
   670  0012C0  6E12               	movwf	___ftmul@f2+2,c
   671  0012C2  C03C  F00D         	movff	main@temperature_C,___ftmul@f1
   672  0012C6  C03D  F00E         	movff	main@temperature_C+1,___ftmul@f1+1
   673  0012CA  C03E  F00F         	movff	main@temperature_C+2,___ftmul@f1+2
   674  0012CE  EC79  F00A         	call	___ftmul	;wreg free
   675  0012D2  C00D  F01C         	movff	?___ftmul,___ftadd@f1
   676  0012D6  C00E  F01D         	movff	?___ftmul+1,___ftadd@f1+1
   677  0012DA  C00F  F01E         	movff	?___ftmul+2,___ftadd@f1+2
   678  0012DE  0E00               	movlw	0
   679  0012E0  6E1F               	movwf	___ftadd@f2,c
   680  0012E2  0E00               	movlw	0
   681  0012E4  6E20               	movwf	___ftadd@f2+1,c
   682  0012E6  0E42               	movlw	66
   683  0012E8  6E21               	movwf	___ftadd@f2+2,c
   684  0012EA  EC1D  F008         	call	___ftadd	;wreg free
   685  0012EE  C01C  F03F         	movff	?___ftadd,main@temperature_F
   686  0012F2  C01D  F040         	movff	?___ftadd+1,main@temperature_F+1
   687  0012F6  C01E  F041         	movff	?___ftadd+2,main@temperature_F+2
   688                           
   689                           ;Lab5p1.c: 63: int tempF = (int)temperature_F;
   690  0012FA  C03F  F001         	movff	main@temperature_F,___fttol@f1
   691  0012FE  C040  F002         	movff	main@temperature_F+1,___fttol@f1+1
   692  001302  C041  F003         	movff	main@temperature_F+2,___fttol@f1+2
   693  001306  ECF5  F00A         	call	___fttol	;wreg free
   694  00130A  C001  F048         	movff	?___fttol,main@tempF
   695  00130E  C002  F049         	movff	?___fttol+1,main@tempF+1
   696                           
   697                           ;Lab5p1.c: 64: char U = tempF / 10;
   698  001312  C048  F001         	movff	main@tempF,___awdiv@dividend
   699  001316  C049  F002         	movff	main@tempF+1,___awdiv@dividend+1
   700  00131A  0E00               	movlw	0
   701  00131C  6E04               	movwf	___awdiv@divisor+1,c
   702  00131E  0E0A               	movlw	10
   703  001320  6E03               	movwf	___awdiv@divisor,c
   704  001322  EC3C  F00C         	call	___awdiv	;wreg free
   705  001326  5001               	movf	?___awdiv,w,c
   706  001328  6E44               	movwf	main@U,c
   707                           
   708                           ;Lab5p1.c: 65: char L = tempF % 10;
   709  00132A  C048  F001         	movff	main@tempF,___awmod@dividend
   710  00132E  C049  F002         	movff	main@tempF+1,___awmod@dividend+1
   711  001332  0E00               	movlw	0
   712  001334  6E04               	movwf	___awmod@divisor+1,c
   713  001336  0E0A               	movlw	10
   714  001338  6E03               	movwf	___awmod@divisor,c
   715  00133A  EC87  F00C         	call	___awmod	;wreg free
   716  00133E  5001               	movf	?___awmod,w,c
   717  001340  6E45               	movwf	main@L,c
   718                           
   719                           ;Lab5p1.c: 66: Display_Upper_Digit(U);
   720  001342  5044               	movf	main@U,w,c
   721  001344  EC72  F00D         	call	_Display_Upper_Digit
   722                           
   723                           ;Lab5p1.c: 67: Display_Lower_Digit(L);
   724  001348  5045               	movf	main@L,w,c
   725  00134A  ECEF  F00D         	call	_Display_Lower_Digit
   726                           
   727                           ;Lab5p1.c: 69: printf("Temperature = %d mV \r\n\n", tempF);
   728  00134E  0E0B               	movlw	low STR_1
   729  001350  6E0D               	movwf	printf@f,c
   730  001352  0E10               	movlw	high STR_1
   731  001354  6E0E               	movwf	printf@f+1,c
   732  001356  C048  F00F         	movff	main@tempF,?_printf+2
   733  00135A  C049  F010         	movff	main@tempF+1,?_printf+3
   734  00135E  ECDA  F009         	call	_printf	;wreg free
   735                           
   736                           ;Lab5p1.c: 71: DO_DISPLAY_D1(tempF);
   737  001362  5048               	movf	main@tempF,w,c
   738  001364  ECA4  F00D         	call	_DO_DISPLAY_D1
   739                           
   740                           ;Lab5p1.c: 73: Select_ADC_Channel(1);
   741  001368  0E01               	movlw	1
   742  00136A  EC0C  F00E         	call	_Select_ADC_Channel
   743                           
   744                           ;Lab5p1.c: 74: int num_step = Get_Full_ADC();
   745  00136E  ECB8  F00D         	call	_Get_Full_ADC	;wreg free
   746  001372  C001  F046         	movff	?_Get_Full_ADC,main@num_step
   747  001376  C002  F047         	movff	?_Get_Full_ADC+1,main@num_step+1
   748                           
   749                           ;Lab5p1.c: 75: int voltage_mv1 = num_step * 4;
   750  00137A  C046  F037         	movff	main@num_step,??_main
   751  00137E  C047  F038         	movff	main@num_step+1,??_main+1
   752  001382  90D8               	bcf	status,0,c
   753  001384  3637               	rlcf	??_main,f,c
   754  001386  3638               	rlcf	??_main+1,f,c
   755  001388  90D8               	bcf	status,0,c
   756  00138A  3637               	rlcf	??_main,f,c
   757  00138C  3638               	rlcf	??_main+1,f,c
   758  00138E  C037  F042         	movff	??_main,main@voltage_mv1
   759  001392  C038  F043         	movff	??_main+1,main@voltage_mv1+1
   760                           
   761                           ;Lab5p1.c: 76: printf("Light Volt = %d F \r\n\n", voltage_mv1);
   762  001396  0E23               	movlw	low STR_2
   763  001398  6E0D               	movwf	printf@f,c
   764  00139A  0E10               	movlw	high STR_2
   765  00139C  6E0E               	movwf	printf@f+1,c
   766  00139E  C042  F00F         	movff	main@voltage_mv1,?_printf+2
   767  0013A2  C043  F010         	movff	main@voltage_mv1+1,?_printf+3
   768  0013A6  ECDA  F009         	call	_printf	;wreg free
   769                           
   770                           ;Lab5p1.c: 78: WAIT_1_SEC();
   771  0013AA  ECDD  F00D         	call	_WAIT_1_SEC	;wreg free
   772  0013AE  D736               	goto	l1835
   773  0013B0  EF00  F000         	goto	start
   774  0013B4                     __end_of_main:
   775                           	opt stack 0
   776                           tblptru	equ	0xFF8
   777                           tblptrh	equ	0xFF7
   778                           tblptrl	equ	0xFF6
   779                           tablat	equ	0xFF5
   780                           postinc0	equ	0xFEE
   781                           postdec1	equ	0xFE5
   782                           fsr1l	equ	0xFE1
   783                           status	equ	0xFD8
   784                           
   785 ;; *************** function _printf *****************
   786 ;; Defined at:
   787 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   788 ;; Parameters:    Size  Location     Type
   789 ;;  f               2   12[COMRAM] PTR const unsigned char 
   790 ;;		 -> STR_2(22), STR_1(24), 
   791 ;; Auto vars:     Size  Location     Type
   792 ;;  tmpval          4    0        struct .
   793 ;;  cp              3    0        PTR const unsigned char 
   794 ;;  val             2   21[COMRAM] unsigned int 
   795 ;;  ap              2   17[COMRAM] PTR void [1]
   796 ;;		 -> ?_printf(2), 
   797 ;;  len             2    0        unsigned int 
   798 ;;  c               1   23[COMRAM] char 
   799 ;;  prec            1   20[COMRAM] char 
   800 ;;  flag            1   19[COMRAM] unsigned char 
   801 ;; Return value:  Size  Location     Type
   802 ;;                  2   12[COMRAM] int 
   803 ;; Registers used:
   804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   805 ;; Tracked objects:
   806 ;;		On entry : 0/0
   807 ;;		On exit  : 0/0
   808 ;;		Unchanged: 0/0
   809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   811 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   812 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   813 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   814 ;;Total ram usage:       12 bytes
   815 ;; Hardware stack levels used:    1
   816 ;; Hardware stack levels required when called:    1
   817 ;; This function calls:
   818 ;;		___lwdiv
   819 ;;		___lwmod
   820 ;;		_putch
   821 ;; This function is called by:
   822 ;;		_main
   823 ;; This function uses a non-reentrant model
   824 ;;
   825                           
   826                           	psect	text1
   827  0013B4                     __ptext1:
   828                           	opt stack 0
   829  0013B4                     _printf:
   830                           	opt stack 29
   831                           
   832                           ;doprnt.c: 466: va_list ap;
   833                           ;doprnt.c: 499: signed char c;
   834                           ;doprnt.c: 506: signed char prec;
   835                           ;doprnt.c: 508: unsigned char flag;
   836                           ;doprnt.c: 523: union {
   837                           ;doprnt.c: 524: unsigned long vd;
   838                           ;doprnt.c: 525: double integ;
   839                           ;doprnt.c: 526: } tmpval;
   840                           ;doprnt.c: 528: unsigned int val;
   841                           ;doprnt.c: 529: unsigned len;
   842                           ;doprnt.c: 530: const char * cp;
   843                           ;doprnt.c: 533: *ap = __va_start();
   844                           
   845                           ;incstack = 0
   846  0013B4  0E0F               	movlw	low (?_printf+2)
   847  0013B6  6E12               	movwf	printf@ap,c
   848  0013B8  0E00               	movlw	high (?_printf+2)
   849  0013BA  6E13               	movwf	printf@ap+1,c
   850                           
   851                           ;doprnt.c: 536: while(c = *f++) {
   852  0013BC  D08B               	goto	l1515
   853  0013BE                     l1469:
   854                           
   855                           ;doprnt.c: 538: if(c != '%')
   856  0013BE  0E25               	movlw	37
   857  0013C0  1818               	xorwf	printf@c,w,c
   858  0013C2  B4D8               	btfsc	status,2,c
   859  0013C4  D004               	goto	l1473
   860                           
   861                           ;doprnt.c: 540: {
   862                           ;doprnt.c: 541: (putch(c) );
   863  0013C6  5018               	movf	printf@c,w,c
   864  0013C8  EC05  F00E         	call	_putch
   865                           
   866                           ;doprnt.c: 542: continue;
   867  0013CC  D083               	goto	l1515
   868  0013CE                     l1473:
   869                           
   870                           ;doprnt.c: 543: }
   871                           ;doprnt.c: 548: flag = 0;
   872  0013CE  0E00               	movlw	0
   873  0013D0  6E14               	movwf	printf@flag,c
   874                           
   875                           ;doprnt.c: 635: switch(c = *f++) {
   876  0013D2  D004               	goto	l1477
   877                           
   878                           ;doprnt.c: 638: goto alldone;
   879                           
   880                           ;doprnt.c: 637: case 0:
   881  0013D4  D08D               	goto	l136
   882                           
   883                           ;doprnt.c: 698: case 'i':
   884                           ;doprnt.c: 699: break;
   885                           
   886                           ;doprnt.c: 697: case 'd':
   887  0013D6  D015               	goto	l1479
   888                           
   889                           ;doprnt.c: 813: continue;
   890                           
   891                           ;doprnt.c: 802: default:
   892  0013D8  D07D               	goto	l1515
   893                           
   894                           ;doprnt.c: 822: }
   895  0013DA  D013               	goto	l1479
   896  0013DC                     l1477:
   897  0013DC  C00D  FFF6         	movff	printf@f,tblptrl
   898  0013E0  C00E  FFF7         	movff	printf@f+1,tblptrh
   899  0013E4  4A0D               	infsnz	printf@f,f,c
   900  0013E6  2A0E               	incf	printf@f+1,f,c
   901  0013E8                     	if	0	;tblptru may be non-zero
   902  0013E8                     	endif
   903  0013E8                     	if	0	;tblptru may be non-zero
   904  0013E8                     	endif
   905  0013E8  0008               	tblrd		*
   906  0013EA  CFF5 F018          	movff	tablat,printf@c
   907  0013EE  5018               	movf	printf@c,w,c
   908                           
   909                           ; Switch size 1, requested type "space"
   910                           ; Number of cases is 3, Range of values is 0 to 105
   911                           ; switch strategies available:
   912                           ; Name         Instructions Cycles
   913                           ; simple_byte           10     6 (average)
   914                           ;	Chosen strategy is simple_byte
   915  0013F0  0A00               	xorlw	0	; case 0
   916  0013F2  B4D8               	btfsc	status,2,c
   917  0013F4  D07D               	goto	l136
   918  0013F6  0A64               	xorlw	100	; case 100
   919  0013F8  B4D8               	btfsc	status,2,c
   920  0013FA  D003               	goto	l1479
   921  0013FC  0A0D               	xorlw	13	; case 105
   922  0013FE  A4D8               	btfss	status,2,c
   923  001400  D069               	goto	l1515
   924  001402                     l1479:
   925                           
   926                           ;doprnt.c: 1253: {
   927                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   928  001402  C012  FFD9         	movff	printf@ap,fsr2l
   929  001406  C013  FFDA         	movff	printf@ap+1,fsr2h
   930  00140A  CFDE F016          	movff	postinc2,printf@val
   931  00140E  CFDD F017          	movff	postdec2,printf@val+1
   932  001412  0E02               	movlw	2
   933  001414  2612               	addwf	printf@ap,f,c
   934  001416  0E00               	movlw	0
   935  001418  2213               	addwfc	printf@ap+1,f,c
   936                           
   937                           ;doprnt.c: 1261: if((int)val < 0) {
   938  00141A  AE17               	btfss	printf@val+1,7,c
   939  00141C  D007               	goto	l1489
   940                           
   941                           ;doprnt.c: 1262: flag |= 0x03;
   942  00141E  0E03               	movlw	3
   943  001420  1214               	iorwf	printf@flag,f,c
   944                           
   945                           ;doprnt.c: 1263: val = -val;
   946  001422  6C16               	negf	printf@val,c
   947  001424  1E17               	comf	printf@val+1,f,c
   948  001426  B0D8               	btfsc	status,0,c
   949  001428  2A17               	incf	printf@val+1,f,c
   950  00142A  D000               	goto	l1489
   951  00142C                     l1489:
   952                           
   953                           ;doprnt.c: 1264: }
   954                           ;doprnt.c: 1266: }
   955                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   956  00142C  0E01               	movlw	1
   957  00142E  6E18               	movwf	printf@c,c
   958  001430                     l1491:
   959  001430  0E05               	movlw	5
   960  001432  1818               	xorwf	printf@c,w,c
   961  001434  B4D8               	btfsc	status,2,c
   962  001436  D016               	goto	l1503
   963  001438  D001               	goto	l1495
   964  00143A  D014               	goto	l1503
   965  00143C                     l1495:
   966                           
   967                           ;doprnt.c: 1306: if(val < dpowers[c])
   968  00143C  5018               	movf	printf@c,w,c
   969  00143E  0D02               	mullw	2
   970  001440  0E01               	movlw	low _dpowers
   971  001442  24F3               	addwf	prodl,w,c
   972  001444  6EF6               	movwf	tblptrl,c
   973  001446  0E10               	movlw	high _dpowers
   974  001448  20F4               	addwfc	prodh,w,c
   975  00144A  6EF7               	movwf	tblptrh,c
   976  00144C                     	if	0	;There are less than 3 active tblptr bytes
   977  00144C                     	endif
   978  00144C  0009               	tblrd		*+
   979  00144E  50F5               	movf	tablat,w,c
   980  001450  5C16               	subwf	printf@val,w,c
   981  001452  0009               	tblrd		*+
   982  001454  50F5               	movf	tablat,w,c
   983  001456  5817               	subwfb	printf@val+1,w,c
   984  001458  A0D8               	btfss	status,0,c
   985  00145A  D004               	goto	l1503
   986  00145C  D001               	goto	l1499
   987                           
   988                           ;doprnt.c: 1307: break;
   989  00145E  D002               	goto	l1503
   990  001460                     l1499:
   991  001460  2A18               	incf	printf@c,f,c
   992  001462  D7E6               	goto	l1491
   993  001464                     l1503:
   994                           
   995                           ;doprnt.c: 1422: {
   996                           ;doprnt.c: 1438: if(flag & 0x03)
   997  001464  C014  F011         	movff	printf@flag,??_printf
   998  001468  0E03               	movlw	3
   999  00146A  1611               	andwf	??_printf,f,c
  1000  00146C  B4D8               	btfsc	status,2,c
  1001  00146E  D004               	goto	l1507
  1002                           
  1003                           ;doprnt.c: 1439: (putch('-') );
  1004  001470  0E2D               	movlw	45
  1005  001472  EC05  F00E         	call	_putch
  1006  001476  D000               	goto	l1507
  1007  001478                     l1507:
  1008                           
  1009                           ;doprnt.c: 1469: }
  1010                           ;doprnt.c: 1472: prec = c;
  1011  001478  C018  F015         	movff	printf@c,printf@prec
  1012                           
  1013                           ;doprnt.c: 1474: while(prec--) {
  1014  00147C  D025               	goto	l1513
  1015  00147E                     l1509:
  1016                           
  1017                           ;doprnt.c: 1478: {
  1018                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1019  00147E  5015               	movf	printf@prec,w,c
  1020  001480  0D02               	mullw	2
  1021  001482  0E01               	movlw	low _dpowers
  1022  001484  24F3               	addwf	prodl,w,c
  1023  001486  6EF6               	movwf	tblptrl,c
  1024  001488  0E10               	movlw	high _dpowers
  1025  00148A  20F4               	addwfc	prodh,w,c
  1026  00148C  6EF7               	movwf	tblptrh,c
  1027  00148E                     	if	0	;There are less than 3 active tblptr bytes
  1028  00148E                     	endif
  1029  00148E  0009               	tblrd		*+
  1030  001490  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1031  001494  000A               	tblrd		*-
  1032  001496  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1033  00149A  C016  F001         	movff	printf@val,___lwdiv@dividend
  1034  00149E  C017  F002         	movff	printf@val+1,___lwdiv@dividend+1
  1035  0014A2  EC00  F00D         	call	___lwdiv	;wreg free
  1036  0014A6  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1037  0014AA  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1038  0014AE  0E00               	movlw	0
  1039  0014B0  6E0B               	movwf	___lwmod@divisor+1,c
  1040  0014B2  0E0A               	movlw	10
  1041  0014B4  6E0A               	movwf	___lwmod@divisor,c
  1042  0014B6  EC2E  F00D         	call	___lwmod	;wreg free
  1043  0014BA  5008               	movf	?___lwmod,w,c
  1044  0014BC  0F30               	addlw	48
  1045  0014BE  6E18               	movwf	printf@c,c
  1046                           
  1047                           ;doprnt.c: 1523: }
  1048                           ;doprnt.c: 1524: (putch(c) );
  1049  0014C0  5018               	movf	printf@c,w,c
  1050  0014C2  EC05  F00E         	call	_putch
  1051  0014C6  D000               	goto	l1513
  1052  0014C8                     l1513:
  1053  0014C8  0615               	decf	printf@prec,f,c
  1054  0014CA  2815               	incf	printf@prec,w,c
  1055  0014CC  B4D8               	btfsc	status,2,c
  1056  0014CE  D002               	goto	l1515
  1057  0014D0  D7D6               	goto	l1509
  1058  0014D2  D000               	goto	l1515
  1059  0014D4                     l1515:
  1060  0014D4  C00D  FFF6         	movff	printf@f,tblptrl
  1061  0014D8  C00E  FFF7         	movff	printf@f+1,tblptrh
  1062  0014DC  4A0D               	infsnz	printf@f,f,c
  1063  0014DE  2A0E               	incf	printf@f+1,f,c
  1064  0014E0                     	if	0	;tblptru may be non-zero
  1065  0014E0                     	endif
  1066  0014E0                     	if	0	;tblptru may be non-zero
  1067  0014E0                     	endif
  1068  0014E0  0008               	tblrd		*
  1069  0014E2  CFF5 F018          	movff	tablat,printf@c
  1070  0014E6  5018               	movf	printf@c,w,c
  1071  0014E8  B4D8               	btfsc	status,2,c
  1072  0014EA  D002               	goto	l136
  1073  0014EC  D768               	goto	l1469
  1074  0014EE  D000               	goto	l136
  1075  0014F0                     l136:
  1076  0014F0  0012               	return		;funcret
  1077  0014F2                     __end_of_printf:
  1078                           	opt stack 0
  1079                           tblptru	equ	0xFF8
  1080                           tblptrh	equ	0xFF7
  1081                           tblptrl	equ	0xFF6
  1082                           tablat	equ	0xFF5
  1083                           prodh	equ	0xFF4
  1084                           prodl	equ	0xFF3
  1085                           postinc0	equ	0xFEE
  1086                           postdec1	equ	0xFE5
  1087                           fsr1l	equ	0xFE1
  1088                           postinc2	equ	0xFDE
  1089                           postdec2	equ	0xFDD
  1090                           fsr2h	equ	0xFDA
  1091                           fsr2l	equ	0xFD9
  1092                           status	equ	0xFD8
  1093                           
  1094 ;; *************** function _putch *****************
  1095 ;; Defined at:
  1096 ;;		line 21 in file "Lab5p1.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;  c               1    wreg     unsigned char 
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;  c               1    0[COMRAM] unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;		None               void
  1103 ;; Registers used:
  1104 ;;		wreg
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:        1 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_printf
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           	psect	text2
  1124  001C0A                     __ptext2:
  1125                           	opt stack 0
  1126  001C0A                     _putch:
  1127                           	opt stack 29
  1128                           
  1129                           ;incstack = 0
  1130                           ;putch@c stored from wreg
  1131  001C0A  6E01               	movwf	putch@c,c
  1132                           
  1133                           ;Lab5p1.c: 23: while (!TRMT);TXREG = c;
  1134  001C0C  D000               	goto	l53
  1135  001C0E                     l53:
  1136  001C0E  A2AC               	btfss	4012,1,c	;volatile
  1137  001C10  D7FE               	goto	l53
  1138  001C12  C001  FFAD         	movff	putch@c,4013	;volatile
  1139  001C16  0012               	return		;funcret
  1140  001C18                     __end_of_putch:
  1141                           	opt stack 0
  1142                           tblptru	equ	0xFF8
  1143                           tblptrh	equ	0xFF7
  1144                           tblptrl	equ	0xFF6
  1145                           tablat	equ	0xFF5
  1146                           prodh	equ	0xFF4
  1147                           prodl	equ	0xFF3
  1148                           postinc0	equ	0xFEE
  1149                           postdec1	equ	0xFE5
  1150                           fsr1l	equ	0xFE1
  1151                           postinc2	equ	0xFDE
  1152                           postdec2	equ	0xFDD
  1153                           fsr2h	equ	0xFDA
  1154                           fsr2l	equ	0xFD9
  1155                           status	equ	0xFD8
  1156                           
  1157 ;; *************** function ___lwmod *****************
  1158 ;; Defined at:
  1159 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwmod.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  dividend        2    7[COMRAM] unsigned int 
  1162 ;;  divisor         2    9[COMRAM] unsigned int 
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;  counter         1   11[COMRAM] unsigned char 
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  2    7[COMRAM] unsigned int 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1174 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1175 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1177 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1178 ;;Total ram usage:        5 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_printf
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187                           	psect	text3
  1188  001A5C                     __ptext3:
  1189                           	opt stack 0
  1190  001A5C                     ___lwmod:
  1191                           	opt stack 29
  1192                           
  1193                           ;incstack = 0
  1194  001A5C  500A               	movf	___lwmod@divisor,w,c
  1195  001A5E  100B               	iorwf	___lwmod@divisor+1,w,c
  1196  001A60  B4D8               	btfsc	status,2,c
  1197  001A62  D01D               	goto	l700
  1198  001A64  0E01               	movlw	1
  1199  001A66  6E0C               	movwf	___lwmod@counter,c
  1200  001A68  D005               	goto	l1445
  1201  001A6A                     l1443:
  1202  001A6A  90D8               	bcf	status,0,c
  1203  001A6C  360A               	rlcf	___lwmod@divisor,f,c
  1204  001A6E  360B               	rlcf	___lwmod@divisor+1,f,c
  1205  001A70  2A0C               	incf	___lwmod@counter,f,c
  1206  001A72  D000               	goto	l1445
  1207  001A74                     l1445:
  1208  001A74  BE0B               	btfsc	___lwmod@divisor+1,7,c
  1209  001A76  D002               	goto	l1447
  1210  001A78  D7F8               	goto	l1443
  1211  001A7A  D000               	goto	l1447
  1212  001A7C                     l1447:
  1213  001A7C  500A               	movf	___lwmod@divisor,w,c
  1214  001A7E  5C08               	subwf	___lwmod@dividend,w,c
  1215  001A80  500B               	movf	___lwmod@divisor+1,w,c
  1216  001A82  5809               	subwfb	___lwmod@dividend+1,w,c
  1217  001A84  A0D8               	btfss	status,0,c
  1218  001A86  D005               	goto	l1451
  1219  001A88  500A               	movf	___lwmod@divisor,w,c
  1220  001A8A  5E08               	subwf	___lwmod@dividend,f,c
  1221  001A8C  500B               	movf	___lwmod@divisor+1,w,c
  1222  001A8E  5A09               	subwfb	___lwmod@dividend+1,f,c
  1223  001A90  D000               	goto	l1451
  1224  001A92                     l1451:
  1225  001A92  90D8               	bcf	status,0,c
  1226  001A94  320B               	rrcf	___lwmod@divisor+1,f,c
  1227  001A96  320A               	rrcf	___lwmod@divisor,f,c
  1228  001A98  2E0C               	decfsz	___lwmod@counter,f,c
  1229  001A9A  D7F0               	goto	l1447
  1230  001A9C  D000               	goto	l700
  1231  001A9E                     l700:
  1232  001A9E  C008  F008         	movff	___lwmod@dividend,?___lwmod
  1233  001AA2  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  1234  001AA6  0012               	return		;funcret
  1235  001AA8                     __end_of___lwmod:
  1236                           	opt stack 0
  1237                           tblptru	equ	0xFF8
  1238                           tblptrh	equ	0xFF7
  1239                           tblptrl	equ	0xFF6
  1240                           tablat	equ	0xFF5
  1241                           prodh	equ	0xFF4
  1242                           prodl	equ	0xFF3
  1243                           postinc0	equ	0xFEE
  1244                           postdec1	equ	0xFE5
  1245                           fsr1l	equ	0xFE1
  1246                           postinc2	equ	0xFDE
  1247                           postdec2	equ	0xFDD
  1248                           fsr2h	equ	0xFDA
  1249                           fsr2l	equ	0xFD9
  1250                           status	equ	0xFD8
  1251                           
  1252 ;; *************** function ___lwdiv *****************
  1253 ;; Defined at:
  1254 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwdiv.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;  dividend        2    0[COMRAM] unsigned int 
  1257 ;;  divisor         2    2[COMRAM] unsigned int 
  1258 ;; Auto vars:     Size  Location     Type
  1259 ;;  quotient        2    4[COMRAM] unsigned int 
  1260 ;;  counter         1    6[COMRAM] unsigned char 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  2    0[COMRAM] unsigned int 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1271 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1273 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1274 ;;Total ram usage:        7 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; This function calls:
  1277 ;;		Nothing
  1278 ;; This function is called by:
  1279 ;;		_printf
  1280 ;; This function uses a non-reentrant model
  1281 ;;
  1282                           
  1283                           	psect	text4
  1284  001A00                     __ptext4:
  1285                           	opt stack 0
  1286  001A00                     ___lwdiv:
  1287                           	opt stack 29
  1288                           
  1289                           ;incstack = 0
  1290  001A00  0E00               	movlw	0
  1291  001A02  6E06               	movwf	___lwdiv@quotient+1,c
  1292  001A04  0E00               	movlw	0
  1293  001A06  6E05               	movwf	___lwdiv@quotient,c
  1294  001A08  5003               	movf	___lwdiv@divisor,w,c
  1295  001A0A  1004               	iorwf	___lwdiv@divisor+1,w,c
  1296  001A0C  B4D8               	btfsc	status,2,c
  1297  001A0E  D021               	goto	l690
  1298  001A10  0E01               	movlw	1
  1299  001A12  6E07               	movwf	___lwdiv@counter,c
  1300  001A14  D005               	goto	l1425
  1301  001A16                     l1423:
  1302  001A16  90D8               	bcf	status,0,c
  1303  001A18  3603               	rlcf	___lwdiv@divisor,f,c
  1304  001A1A  3604               	rlcf	___lwdiv@divisor+1,f,c
  1305  001A1C  2A07               	incf	___lwdiv@counter,f,c
  1306  001A1E  D000               	goto	l1425
  1307  001A20                     l1425:
  1308  001A20  BE04               	btfsc	___lwdiv@divisor+1,7,c
  1309  001A22  D002               	goto	l1427
  1310  001A24  D7F8               	goto	l1423
  1311  001A26  D000               	goto	l1427
  1312  001A28                     l1427:
  1313  001A28  90D8               	bcf	status,0,c
  1314  001A2A  3605               	rlcf	___lwdiv@quotient,f,c
  1315  001A2C  3606               	rlcf	___lwdiv@quotient+1,f,c
  1316  001A2E  5003               	movf	___lwdiv@divisor,w,c
  1317  001A30  5C01               	subwf	___lwdiv@dividend,w,c
  1318  001A32  5004               	movf	___lwdiv@divisor+1,w,c
  1319  001A34  5802               	subwfb	___lwdiv@dividend+1,w,c
  1320  001A36  A0D8               	btfss	status,0,c
  1321  001A38  D006               	goto	l1435
  1322  001A3A  5003               	movf	___lwdiv@divisor,w,c
  1323  001A3C  5E01               	subwf	___lwdiv@dividend,f,c
  1324  001A3E  5004               	movf	___lwdiv@divisor+1,w,c
  1325  001A40  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1326  001A42  8005               	bsf	___lwdiv@quotient,0,c
  1327  001A44  D000               	goto	l1435
  1328  001A46                     l1435:
  1329  001A46  90D8               	bcf	status,0,c
  1330  001A48  3204               	rrcf	___lwdiv@divisor+1,f,c
  1331  001A4A  3203               	rrcf	___lwdiv@divisor,f,c
  1332  001A4C  2E07               	decfsz	___lwdiv@counter,f,c
  1333  001A4E  D7EC               	goto	l1427
  1334  001A50  D000               	goto	l690
  1335  001A52                     l690:
  1336  001A52  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1337  001A56  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1338  001A5A  0012               	return		;funcret
  1339  001A5C                     __end_of___lwdiv:
  1340                           	opt stack 0
  1341                           tblptru	equ	0xFF8
  1342                           tblptrh	equ	0xFF7
  1343                           tblptrl	equ	0xFF6
  1344                           tablat	equ	0xFF5
  1345                           prodh	equ	0xFF4
  1346                           prodl	equ	0xFF3
  1347                           postinc0	equ	0xFEE
  1348                           postdec1	equ	0xFE5
  1349                           fsr1l	equ	0xFE1
  1350                           postinc2	equ	0xFDE
  1351                           postdec2	equ	0xFDD
  1352                           fsr2h	equ	0xFDA
  1353                           fsr2l	equ	0xFD9
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function ___fttol *****************
  1357 ;; Defined at:
  1358 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  f1              3    0[COMRAM] float 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  lval            4   10[COMRAM] unsigned long 
  1363 ;;  exp1            1   14[COMRAM] unsigned char 
  1364 ;;  sign1           1    9[COMRAM] unsigned char 
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  4    0[COMRAM] long 
  1367 ;; Registers used:
  1368 ;;		wreg, status,2, status,0
  1369 ;; Tracked objects:
  1370 ;;		On entry : 0/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1374 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1375 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1376 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1377 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1378 ;;Total ram usage:       15 bytes
  1379 ;; Hardware stack levels used:    1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_main
  1384 ;; This function uses a non-reentrant model
  1385 ;;
  1386                           
  1387                           	psect	text5
  1388  0015EA                     __ptext5:
  1389                           	opt stack 0
  1390  0015EA                     ___fttol:
  1391                           	opt stack 30
  1392                           
  1393                           ;incstack = 0
  1394  0015EA  C003  F005         	movff	___fttol@f1+2,??___fttol
  1395  0015EE  6A06               	clrf	(??___fttol+1)& (0+255),c
  1396  0015F0  6A07               	clrf	(??___fttol+2)& (0+255),c
  1397  0015F2  3402               	rlcf	___fttol@f1+1,w,c
  1398  0015F4  3605               	rlcf	??___fttol& (0+255),f,c
  1399  0015F6  E301               	bnc	u1731
  1400  0015F8  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1401  0015FA                     u1731:
  1402  0015FA  5005               	movf	??___fttol,w,c
  1403  0015FC  6E0F               	movwf	___fttol@exp1,c
  1404  0015FE  500F               	movf	___fttol@exp1,w,c
  1405  001600  A4D8               	btfss	status,2,c
  1406  001602  D002               	goto	l1783
  1407  001604  D039               	goto	l1807
  1408  001606  D063               	goto	l588
  1409  001608                     l1783:
  1410  001608  0E17               	movlw	23
  1411  00160A  6E05               	movwf	??___fttol& (0+255),c
  1412  00160C  C001  F006         	movff	___fttol@f1,??___fttol+1
  1413  001610  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1414  001614  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1415  001618  2805               	incf	??___fttol,w,c
  1416  00161A  6E09               	movwf	(??___fttol+4)& (0+255),c
  1417  00161C  D004               	goto	u1750
  1418  00161E                     u1755:
  1419  00161E  90D8               	bcf	status,0,c
  1420  001620  3208               	rrcf	??___fttol+3,f,c
  1421  001622  3207               	rrcf	??___fttol+2,f,c
  1422  001624  3206               	rrcf	??___fttol+1,f,c
  1423  001626                     u1750:
  1424  001626  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1425  001628  D7FA               	goto	u1755
  1426  00162A  5006               	movf	??___fttol+1,w,c
  1427  00162C  6E0A               	movwf	___fttol@sign1,c
  1428  00162E  8E02               	bsf	___fttol@f1+1,7,c
  1429  001630  0EFF               	movlw	255
  1430  001632  1601               	andwf	___fttol@f1,f,c
  1431  001634  0EFF               	movlw	255
  1432  001636  1602               	andwf	___fttol@f1+1,f,c
  1433  001638  0E00               	movlw	0
  1434  00163A  1603               	andwf	___fttol@f1+2,f,c
  1435  00163C  5001               	movf	___fttol@f1,w,c
  1436  00163E  6E0B               	movwf	___fttol@lval,c
  1437  001640  5002               	movf	___fttol@f1+1,w,c
  1438  001642  6E0C               	movwf	___fttol@lval+1,c
  1439  001644  5003               	movf	___fttol@f1+2,w,c
  1440  001646  6E0D               	movwf	___fttol@lval+2,c
  1441  001648  6A0E               	clrf	___fttol@lval+3,c
  1442  00164A  0E8E               	movlw	142
  1443  00164C  5E0F               	subwf	___fttol@exp1,f,c
  1444  00164E  AE0F               	btfss	___fttol@exp1,7,c
  1445  001650  D010               	goto	l1805
  1446  001652  500F               	movf	___fttol@exp1,w,c
  1447  001654  0A80               	xorlw	128
  1448  001656  0F8F               	addlw	143
  1449  001658  B0D8               	btfsc	status,0,c
  1450  00165A  D003               	goto	l1801
  1451  00165C  D00D               	goto	l1807
  1452  00165E  D037               	goto	l588
  1453  001660  D000               	goto	l1801
  1454  001662                     l1801:
  1455  001662  90D8               	bcf	status,0,c
  1456  001664  320E               	rrcf	___fttol@lval+3,f,c
  1457  001666  320D               	rrcf	___fttol@lval+2,f,c
  1458  001668  320C               	rrcf	___fttol@lval+1,f,c
  1459  00166A  320B               	rrcf	___fttol@lval,f,c
  1460  00166C  3E0F               	incfsz	___fttol@exp1,f,c
  1461  00166E  D7F9               	goto	l1801
  1462  001670  D019               	goto	l1815
  1463  001672                     l1805:
  1464  001672  0E17               	movlw	23
  1465  001674  640F               	cpfsgt	___fttol@exp1,c
  1466  001676  D011               	goto	l1813
  1467  001678                     l1807:
  1468  001678  0E00               	movlw	0
  1469  00167A  6E01               	movwf	?___fttol,c
  1470  00167C  0E00               	movlw	0
  1471  00167E  6E02               	movwf	?___fttol+1,c
  1472  001680  0E00               	movlw	0
  1473  001682  6E03               	movwf	?___fttol+2,c
  1474  001684  0E00               	movlw	0
  1475  001686  6E04               	movwf	?___fttol+3,c
  1476  001688  D022               	goto	l588
  1477  00168A  D007               	goto	l1813
  1478  00168C                     l1811:
  1479  00168C  90D8               	bcf	status,0,c
  1480  00168E  360B               	rlcf	___fttol@lval,f,c
  1481  001690  360C               	rlcf	___fttol@lval+1,f,c
  1482  001692  360D               	rlcf	___fttol@lval+2,f,c
  1483  001694  360E               	rlcf	___fttol@lval+3,f,c
  1484  001696  060F               	decf	___fttol@exp1,f,c
  1485  001698  D000               	goto	l1813
  1486  00169A                     l1813:
  1487  00169A  500F               	movf	___fttol@exp1,w,c
  1488  00169C  B4D8               	btfsc	status,2,c
  1489  00169E  D002               	goto	l1815
  1490  0016A0  D7F5               	goto	l1811
  1491  0016A2  D000               	goto	l1815
  1492  0016A4                     l1815:
  1493  0016A4  500A               	movf	___fttol@sign1,w,c
  1494  0016A6  B4D8               	btfsc	status,2,c
  1495  0016A8  D009               	goto	l1819
  1496  0016AA  1E0E               	comf	___fttol@lval+3,f,c
  1497  0016AC  1E0D               	comf	___fttol@lval+2,f,c
  1498  0016AE  1E0C               	comf	___fttol@lval+1,f,c
  1499  0016B0  6C0B               	negf	___fttol@lval,c
  1500  0016B2  0E00               	movlw	0
  1501  0016B4  220C               	addwfc	___fttol@lval+1,f,c
  1502  0016B6  220D               	addwfc	___fttol@lval+2,f,c
  1503  0016B8  220E               	addwfc	___fttol@lval+3,f,c
  1504  0016BA  D000               	goto	l1819
  1505  0016BC                     l1819:
  1506  0016BC  C00B  F001         	movff	___fttol@lval,?___fttol
  1507  0016C0  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1508  0016C4  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1509  0016C8  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1510  0016CC  D000               	goto	l588
  1511  0016CE                     l588:
  1512  0016CE  0012               	return		;funcret
  1513  0016D0                     __end_of___fttol:
  1514                           	opt stack 0
  1515                           tblptru	equ	0xFF8
  1516                           tblptrh	equ	0xFF7
  1517                           tblptrl	equ	0xFF6
  1518                           tablat	equ	0xFF5
  1519                           prodh	equ	0xFF4
  1520                           prodl	equ	0xFF3
  1521                           postinc0	equ	0xFEE
  1522                           postdec1	equ	0xFE5
  1523                           fsr1l	equ	0xFE1
  1524                           postinc2	equ	0xFDE
  1525                           postdec2	equ	0xFDD
  1526                           fsr2h	equ	0xFDA
  1527                           fsr2l	equ	0xFD9
  1528                           status	equ	0xFD8
  1529                           
  1530 ;; *************** function ___ftneg *****************
  1531 ;; Defined at:
  1532 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  1533 ;; Parameters:    Size  Location     Type
  1534 ;;  f1              3    0[COMRAM] float 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;		None
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  3    0[COMRAM] float 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1546 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1549 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1550 ;;Total ram usage:        3 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           	psect	text6
  1560  001B96                     __ptext6:
  1561                           	opt stack 0
  1562  001B96                     ___ftneg:
  1563                           	opt stack 30
  1564                           
  1565                           ;incstack = 0
  1566  001B96  5001               	movf	___ftneg@f1,w,c
  1567  001B98  1002               	iorwf	___ftneg@f1+1,w,c
  1568  001B9A  1003               	iorwf	___ftneg@f1+2,w,c
  1569  001B9C  B4D8               	btfsc	status,2,c
  1570  001B9E  D006               	goto	l577
  1571  001BA0  0E00               	movlw	0
  1572  001BA2  1A01               	xorwf	___ftneg@f1,f,c
  1573  001BA4  0E00               	movlw	0
  1574  001BA6  1A02               	xorwf	___ftneg@f1+1,f,c
  1575  001BA8  0E80               	movlw	128
  1576  001BAA  1A03               	xorwf	___ftneg@f1+2,f,c
  1577  001BAC                     l577:
  1578  001BAC  C001  F001         	movff	___ftneg@f1,?___ftneg
  1579  001BB0  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  1580  001BB4  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  1581  001BB8  0012               	return		;funcret
  1582  001BBA                     __end_of___ftneg:
  1583                           	opt stack 0
  1584                           tblptru	equ	0xFF8
  1585                           tblptrh	equ	0xFF7
  1586                           tblptrl	equ	0xFF6
  1587                           tablat	equ	0xFF5
  1588                           prodh	equ	0xFF4
  1589                           prodl	equ	0xFF3
  1590                           postinc0	equ	0xFEE
  1591                           postdec1	equ	0xFE5
  1592                           fsr1l	equ	0xFE1
  1593                           postinc2	equ	0xFDE
  1594                           postdec2	equ	0xFDD
  1595                           fsr2h	equ	0xFDA
  1596                           fsr2l	equ	0xFD9
  1597                           status	equ	0xFD8
  1598                           
  1599 ;; *************** function ___ftmul *****************
  1600 ;; Defined at:
  1601 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  f1              3   12[COMRAM] float 
  1604 ;;  f2              3   15[COMRAM] float 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  f3_as_produc    3   22[COMRAM] unsigned um
  1607 ;;  sign            1   26[COMRAM] unsigned char 
  1608 ;;  cntr            1   25[COMRAM] unsigned char 
  1609 ;;  exp             1   21[COMRAM] unsigned char 
  1610 ;; Return value:  Size  Location     Type
  1611 ;;                  3   12[COMRAM] float 
  1612 ;; Registers used:
  1613 ;;		wreg, status,2, status,0, cstack
  1614 ;; Tracked objects:
  1615 ;;		On entry : 0/0
  1616 ;;		On exit  : 0/0
  1617 ;;		Unchanged: 0/0
  1618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1619 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1620 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1621 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1622 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1623 ;;Total ram usage:       15 bytes
  1624 ;; Hardware stack levels used:    1
  1625 ;; Hardware stack levels required when called:    1
  1626 ;; This function calls:
  1627 ;;		___ftpack
  1628 ;; This function is called by:
  1629 ;;		_main
  1630 ;; This function uses a non-reentrant model
  1631 ;;
  1632                           
  1633                           	psect	text7
  1634  0014F2                     __ptext7:
  1635                           	opt stack 0
  1636  0014F2                     ___ftmul:
  1637                           	opt stack 29
  1638                           
  1639                           ;incstack = 0
  1640  0014F2  C00F  F013         	movff	___ftmul@f1+2,??___ftmul
  1641  0014F6  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1642  0014F8  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1643  0014FA  340E               	rlcf	___ftmul@f1+1,w,c
  1644  0014FC  3613               	rlcf	??___ftmul& (0+255),f,c
  1645  0014FE  E301               	bnc	u1531
  1646  001500  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1647  001502                     u1531:
  1648  001502  5013               	movf	??___ftmul,w,c
  1649  001504  6E16               	movwf	___ftmul@exp,c
  1650  001506  5016               	movf	___ftmul@exp,w,c
  1651  001508  A4D8               	btfss	status,2,c
  1652  00150A  D002               	goto	l1639
  1653  00150C  D00E               	goto	l1641
  1654  00150E  D06C               	goto	l567
  1655  001510                     l1639:
  1656  001510  C012  F013         	movff	___ftmul@f2+2,??___ftmul
  1657  001514  6A14               	clrf	(??___ftmul+1)& (0+255),c
  1658  001516  6A15               	clrf	(??___ftmul+2)& (0+255),c
  1659  001518  3411               	rlcf	___ftmul@f2+1,w,c
  1660  00151A  3613               	rlcf	??___ftmul& (0+255),f,c
  1661  00151C  E301               	bnc	u1551
  1662  00151E  8014               	bsf	(??___ftmul+1)& (0+255),0,c
  1663  001520                     u1551:
  1664  001520  5013               	movf	??___ftmul,w,c
  1665  001522  6E1B               	movwf	___ftmul@sign,c
  1666  001524  501B               	movf	___ftmul@sign,w,c
  1667  001526  A4D8               	btfss	status,2,c
  1668  001528  D007               	goto	l1645
  1669  00152A                     l1641:
  1670  00152A  0E00               	movlw	0
  1671  00152C  6E0D               	movwf	?___ftmul,c
  1672  00152E  0E00               	movlw	0
  1673  001530  6E0E               	movwf	?___ftmul+1,c
  1674  001532  0E00               	movlw	0
  1675  001534  6E0F               	movwf	?___ftmul+2,c
  1676  001536  D058               	goto	l567
  1677  001538                     l1645:
  1678  001538  501B               	movf	___ftmul@sign,w,c
  1679  00153A  0F7B               	addlw	123
  1680  00153C  2616               	addwf	___ftmul@exp,f,c
  1681  00153E  C00F  F01B         	movff	___ftmul@f1+2,___ftmul@sign
  1682  001542  5012               	movf	___ftmul@f2+2,w,c
  1683  001544  1A1B               	xorwf	___ftmul@sign,f,c
  1684  001546  0E80               	movlw	128
  1685  001548  161B               	andwf	___ftmul@sign,f,c
  1686  00154A  8E0E               	bsf	___ftmul@f1+1,7,c
  1687  00154C  8E11               	bsf	___ftmul@f2+1,7,c
  1688  00154E  0EFF               	movlw	255
  1689  001550  1610               	andwf	___ftmul@f2,f,c
  1690  001552  0EFF               	movlw	255
  1691  001554  1611               	andwf	___ftmul@f2+1,f,c
  1692  001556  0E00               	movlw	0
  1693  001558  1612               	andwf	___ftmul@f2+2,f,c
  1694  00155A  0E00               	movlw	0
  1695  00155C  6E17               	movwf	___ftmul@f3_as_product,c
  1696  00155E  0E00               	movlw	0
  1697  001560  6E18               	movwf	___ftmul@f3_as_product+1,c
  1698  001562  0E00               	movlw	0
  1699  001564  6E19               	movwf	___ftmul@f3_as_product+2,c
  1700  001566  0E07               	movlw	7
  1701  001568  6E1A               	movwf	___ftmul@cntr,c
  1702  00156A  D000               	goto	l1659
  1703  00156C                     l1659:
  1704  00156C  A00D               	btfss	___ftmul@f1,0,c
  1705  00156E  D007               	goto	l1663
  1706  001570  5010               	movf	___ftmul@f2,w,c
  1707  001572  2617               	addwf	___ftmul@f3_as_product,f,c
  1708  001574  5011               	movf	___ftmul@f2+1,w,c
  1709  001576  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1710  001578  5012               	movf	___ftmul@f2+2,w,c
  1711  00157A  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1712  00157C  D000               	goto	l1663
  1713  00157E                     l1663:
  1714  00157E  90D8               	bcf	status,0,c
  1715  001580  320F               	rrcf	___ftmul@f1+2,f,c
  1716  001582  320E               	rrcf	___ftmul@f1+1,f,c
  1717  001584  320D               	rrcf	___ftmul@f1,f,c
  1718  001586  90D8               	bcf	status,0,c
  1719  001588  3610               	rlcf	___ftmul@f2,f,c
  1720  00158A  3611               	rlcf	___ftmul@f2+1,f,c
  1721  00158C  3612               	rlcf	___ftmul@f2+2,f,c
  1722  00158E  2E1A               	decfsz	___ftmul@cntr,f,c
  1723  001590  D7ED               	goto	l1659
  1724  001592  D000               	goto	l1667
  1725  001594                     l1667:
  1726  001594  0E09               	movlw	9
  1727  001596  6E1A               	movwf	___ftmul@cntr,c
  1728  001598  D000               	goto	l1669
  1729  00159A                     l1669:
  1730  00159A  A00D               	btfss	___ftmul@f1,0,c
  1731  00159C  D007               	goto	l1673
  1732  00159E  5010               	movf	___ftmul@f2,w,c
  1733  0015A0  2617               	addwf	___ftmul@f3_as_product,f,c
  1734  0015A2  5011               	movf	___ftmul@f2+1,w,c
  1735  0015A4  2218               	addwfc	___ftmul@f3_as_product+1,f,c
  1736  0015A6  5012               	movf	___ftmul@f2+2,w,c
  1737  0015A8  2219               	addwfc	___ftmul@f3_as_product+2,f,c
  1738  0015AA  D000               	goto	l1673
  1739  0015AC                     l1673:
  1740  0015AC  90D8               	bcf	status,0,c
  1741  0015AE  320F               	rrcf	___ftmul@f1+2,f,c
  1742  0015B0  320E               	rrcf	___ftmul@f1+1,f,c
  1743  0015B2  320D               	rrcf	___ftmul@f1,f,c
  1744  0015B4  90D8               	bcf	status,0,c
  1745  0015B6  3219               	rrcf	___ftmul@f3_as_product+2,f,c
  1746  0015B8  3218               	rrcf	___ftmul@f3_as_product+1,f,c
  1747  0015BA  3217               	rrcf	___ftmul@f3_as_product,f,c
  1748  0015BC  2E1A               	decfsz	___ftmul@cntr,f,c
  1749  0015BE  D7ED               	goto	l1669
  1750  0015C0  D000               	goto	l1677
  1751  0015C2                     l1677:
  1752  0015C2  C017  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1753  0015C6  C018  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1754  0015CA  C019  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1755  0015CE  C016  F004         	movff	___ftmul@exp,___ftpack@exp
  1756  0015D2  C01B  F005         	movff	___ftmul@sign,___ftpack@sign
  1757  0015D6  ECD9  F00B         	call	___ftpack	;wreg free
  1758  0015DA  C001  F00D         	movff	?___ftpack,?___ftmul
  1759  0015DE  C002  F00E         	movff	?___ftpack+1,?___ftmul+1
  1760  0015E2  C003  F00F         	movff	?___ftpack+2,?___ftmul+2
  1761  0015E6  D000               	goto	l567
  1762  0015E8                     l567:
  1763  0015E8  0012               	return		;funcret
  1764  0015EA                     __end_of___ftmul:
  1765                           	opt stack 0
  1766                           tblptru	equ	0xFF8
  1767                           tblptrh	equ	0xFF7
  1768                           tblptrl	equ	0xFF6
  1769                           tablat	equ	0xFF5
  1770                           prodh	equ	0xFF4
  1771                           prodl	equ	0xFF3
  1772                           postinc0	equ	0xFEE
  1773                           postdec1	equ	0xFE5
  1774                           fsr1l	equ	0xFE1
  1775                           postinc2	equ	0xFDE
  1776                           postdec2	equ	0xFDD
  1777                           fsr2h	equ	0xFDA
  1778                           fsr2l	equ	0xFD9
  1779                           status	equ	0xFD8
  1780                           
  1781 ;; *************** function ___ftdiv *****************
  1782 ;; Defined at:
  1783 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;  f1              3   39[COMRAM] float 
  1786 ;;  f2              3   42[COMRAM] float 
  1787 ;; Auto vars:     Size  Location     Type
  1788 ;;  f3              3   49[COMRAM] float 
  1789 ;;  sign            1   53[COMRAM] unsigned char 
  1790 ;;  exp             1   52[COMRAM] unsigned char 
  1791 ;;  cntr            1   48[COMRAM] unsigned char 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;                  3   39[COMRAM] float 
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1801 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1805 ;;Total ram usage:       15 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    1
  1808 ;; This function calls:
  1809 ;;		___ftpack
  1810 ;; This function is called by:
  1811 ;;		_main
  1812 ;; This function uses a non-reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text8
  1816  0016D0                     __ptext8:
  1817                           	opt stack 0
  1818  0016D0                     ___ftdiv:
  1819                           	opt stack 29
  1820                           
  1821                           ;incstack = 0
  1822  0016D0  C02A  F02E         	movff	___ftdiv@f1+2,??___ftdiv
  1823  0016D4  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  1824  0016D6  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  1825  0016D8  3429               	rlcf	___ftdiv@f1+1,w,c
  1826  0016DA  362E               	rlcf	??___ftdiv& (0+255),f,c
  1827  0016DC  E301               	bnc	u1481
  1828  0016DE  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1829  0016E0                     u1481:
  1830  0016E0  502E               	movf	??___ftdiv,w,c
  1831  0016E2  6E35               	movwf	___ftdiv@exp,c
  1832  0016E4  5035               	movf	___ftdiv@exp,w,c
  1833  0016E6  A4D8               	btfss	status,2,c
  1834  0016E8  D002               	goto	l1593
  1835  0016EA  D00E               	goto	l1595
  1836  0016EC  D061               	goto	l552
  1837  0016EE                     l1593:
  1838  0016EE  C02D  F02E         	movff	___ftdiv@f2+2,??___ftdiv
  1839  0016F2  6A2F               	clrf	(??___ftdiv+1)& (0+255),c
  1840  0016F4  6A30               	clrf	(??___ftdiv+2)& (0+255),c
  1841  0016F6  342C               	rlcf	___ftdiv@f2+1,w,c
  1842  0016F8  362E               	rlcf	??___ftdiv& (0+255),f,c
  1843  0016FA  E301               	bnc	u1501
  1844  0016FC  802F               	bsf	(??___ftdiv+1)& (0+255),0,c
  1845  0016FE                     u1501:
  1846  0016FE  502E               	movf	??___ftdiv,w,c
  1847  001700  6E36               	movwf	___ftdiv@sign,c
  1848  001702  5036               	movf	___ftdiv@sign,w,c
  1849  001704  A4D8               	btfss	status,2,c
  1850  001706  D007               	goto	l1599
  1851  001708                     l1595:
  1852  001708  0E00               	movlw	0
  1853  00170A  6E28               	movwf	?___ftdiv,c
  1854  00170C  0E00               	movlw	0
  1855  00170E  6E29               	movwf	?___ftdiv+1,c
  1856  001710  0E00               	movlw	0
  1857  001712  6E2A               	movwf	?___ftdiv+2,c
  1858  001714  D04D               	goto	l552
  1859  001716                     l1599:
  1860  001716  0E00               	movlw	0
  1861  001718  6E32               	movwf	___ftdiv@f3,c
  1862  00171A  0E00               	movlw	0
  1863  00171C  6E33               	movwf	___ftdiv@f3+1,c
  1864  00171E  0E00               	movlw	0
  1865  001720  6E34               	movwf	___ftdiv@f3+2,c
  1866  001722  5036               	movf	___ftdiv@sign,w,c
  1867  001724  0F89               	addlw	137
  1868  001726  5E35               	subwf	___ftdiv@exp,f,c
  1869  001728  C02A  F036         	movff	___ftdiv@f1+2,___ftdiv@sign
  1870  00172C  502D               	movf	___ftdiv@f2+2,w,c
  1871  00172E  1A36               	xorwf	___ftdiv@sign,f,c
  1872  001730  0E80               	movlw	128
  1873  001732  1636               	andwf	___ftdiv@sign,f,c
  1874  001734  8E29               	bsf	___ftdiv@f1+1,7,c
  1875  001736  0EFF               	movlw	255
  1876  001738  1628               	andwf	___ftdiv@f1,f,c
  1877  00173A  0EFF               	movlw	255
  1878  00173C  1629               	andwf	___ftdiv@f1+1,f,c
  1879  00173E  0E00               	movlw	0
  1880  001740  162A               	andwf	___ftdiv@f1+2,f,c
  1881  001742  8E2C               	bsf	___ftdiv@f2+1,7,c
  1882  001744  0EFF               	movlw	255
  1883  001746  162B               	andwf	___ftdiv@f2,f,c
  1884  001748  0EFF               	movlw	255
  1885  00174A  162C               	andwf	___ftdiv@f2+1,f,c
  1886  00174C  0E00               	movlw	0
  1887  00174E  162D               	andwf	___ftdiv@f2+2,f,c
  1888  001750  0E18               	movlw	24
  1889  001752  6E31               	movwf	___ftdiv@cntr,c
  1890  001754  D000               	goto	l1619
  1891  001756                     l1619:
  1892  001756  90D8               	bcf	status,0,c
  1893  001758  3632               	rlcf	___ftdiv@f3,f,c
  1894  00175A  3633               	rlcf	___ftdiv@f3+1,f,c
  1895  00175C  3634               	rlcf	___ftdiv@f3+2,f,c
  1896  00175E  502B               	movf	___ftdiv@f2,w,c
  1897  001760  5C28               	subwf	___ftdiv@f1,w,c
  1898  001762  502C               	movf	___ftdiv@f2+1,w,c
  1899  001764  5829               	subwfb	___ftdiv@f1+1,w,c
  1900  001766  502D               	movf	___ftdiv@f2+2,w,c
  1901  001768  582A               	subwfb	___ftdiv@f1+2,w,c
  1902  00176A  A0D8               	btfss	status,0,c
  1903  00176C  D007               	goto	l555
  1904  00176E  502B               	movf	___ftdiv@f2,w,c
  1905  001770  5E28               	subwf	___ftdiv@f1,f,c
  1906  001772  502C               	movf	___ftdiv@f2+1,w,c
  1907  001774  5A29               	subwfb	___ftdiv@f1+1,f,c
  1908  001776  502D               	movf	___ftdiv@f2+2,w,c
  1909  001778  5A2A               	subwfb	___ftdiv@f1+2,f,c
  1910  00177A  8032               	bsf	___ftdiv@f3,0,c
  1911  00177C                     l555:
  1912  00177C  90D8               	bcf	status,0,c
  1913  00177E  3628               	rlcf	___ftdiv@f1,f,c
  1914  001780  3629               	rlcf	___ftdiv@f1+1,f,c
  1915  001782  362A               	rlcf	___ftdiv@f1+2,f,c
  1916  001784  2E31               	decfsz	___ftdiv@cntr,f,c
  1917  001786  D7E7               	goto	l1619
  1918  001788  D000               	goto	l1629
  1919  00178A                     l1629:
  1920  00178A  C032  F001         	movff	___ftdiv@f3,___ftpack@arg
  1921  00178E  C033  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1922  001792  C034  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1923  001796  C035  F004         	movff	___ftdiv@exp,___ftpack@exp
  1924  00179A  C036  F005         	movff	___ftdiv@sign,___ftpack@sign
  1925  00179E  ECD9  F00B         	call	___ftpack	;wreg free
  1926  0017A2  C001  F028         	movff	?___ftpack,?___ftdiv
  1927  0017A6  C002  F029         	movff	?___ftpack+1,?___ftdiv+1
  1928  0017AA  C003  F02A         	movff	?___ftpack+2,?___ftdiv+2
  1929  0017AE  D000               	goto	l552
  1930  0017B0                     l552:
  1931  0017B0  0012               	return		;funcret
  1932  0017B2                     __end_of___ftdiv:
  1933                           	opt stack 0
  1934                           tblptru	equ	0xFF8
  1935                           tblptrh	equ	0xFF7
  1936                           tblptrl	equ	0xFF6
  1937                           tablat	equ	0xFF5
  1938                           prodh	equ	0xFF4
  1939                           prodl	equ	0xFF3
  1940                           postinc0	equ	0xFEE
  1941                           postdec1	equ	0xFE5
  1942                           fsr1l	equ	0xFE1
  1943                           postinc2	equ	0xFDE
  1944                           postdec2	equ	0xFDD
  1945                           fsr2h	equ	0xFDA
  1946                           fsr2l	equ	0xFD9
  1947                           status	equ	0xFD8
  1948                           
  1949 ;; *************** function ___ftadd *****************
  1950 ;; Defined at:
  1951 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  f1              3   27[COMRAM] float 
  1954 ;;  f2              3   30[COMRAM] float 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  exp1            1   38[COMRAM] unsigned char 
  1957 ;;  exp2            1   37[COMRAM] unsigned char 
  1958 ;;  sign            1   36[COMRAM] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  3   27[COMRAM] float 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0, cstack
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1968 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1969 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1970 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1971 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1972 ;;Total ram usage:       12 bytes
  1973 ;; Hardware stack levels used:    1
  1974 ;; Hardware stack levels required when called:    1
  1975 ;; This function calls:
  1976 ;;		___ftpack
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           	psect	text9
  1983  00103A                     __ptext9:
  1984                           	opt stack 0
  1985  00103A                     ___ftadd:
  1986                           	opt stack 29
  1987                           
  1988                           ;incstack = 0
  1989  00103A  C01E  F022         	movff	___ftadd@f1+2,??___ftadd
  1990  00103E  6A23               	clrf	(??___ftadd+1)& (0+255),c
  1991  001040  6A24               	clrf	(??___ftadd+2)& (0+255),c
  1992  001042  341D               	rlcf	___ftadd@f1+1,w,c
  1993  001044  3622               	rlcf	??___ftadd& (0+255),f,c
  1994  001046  E301               	bnc	u1271
  1995  001048  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  1996  00104A                     u1271:
  1997  00104A  5022               	movf	??___ftadd,w,c
  1998  00104C  6E27               	movwf	___ftadd@exp1,c
  1999  00104E  C021  F022         	movff	___ftadd@f2+2,??___ftadd
  2000  001052  6A23               	clrf	(??___ftadd+1)& (0+255),c
  2001  001054  6A24               	clrf	(??___ftadd+2)& (0+255),c
  2002  001056  3420               	rlcf	___ftadd@f2+1,w,c
  2003  001058  3622               	rlcf	??___ftadd& (0+255),f,c
  2004  00105A  E301               	bnc	u1281
  2005  00105C  8023               	bsf	(??___ftadd+1)& (0+255),0,c
  2006  00105E                     u1281:
  2007  00105E  5022               	movf	??___ftadd,w,c
  2008  001060  6E26               	movwf	___ftadd@exp2,c
  2009  001062  5027               	movf	___ftadd@exp1,w,c
  2010  001064  B4D8               	btfsc	status,2,c
  2011  001066  D00B               	goto	l520
  2012  001068  5026               	movf	___ftadd@exp2,w,c
  2013  00106A  5C27               	subwf	___ftadd@exp1,w,c
  2014  00106C  B0D8               	btfsc	status,0,c
  2015  00106E  D00E               	goto	l1525
  2016  001070  5027               	movf	___ftadd@exp1,w,c
  2017  001072  0800               	sublw	0
  2018  001074  2426               	addwf	___ftadd@exp2,w,c
  2019  001076  6E22               	movwf	??___ftadd& (0+255),c
  2020  001078  0E18               	movlw	24
  2021  00107A  6422               	cpfsgt	??___ftadd,c
  2022  00107C  D007               	goto	l1525
  2023  00107E                     l520:
  2024  00107E  C01F  F01C         	movff	___ftadd@f2,?___ftadd
  2025  001082  C020  F01D         	movff	___ftadd@f2+1,?___ftadd+1
  2026  001086  C021  F01E         	movff	___ftadd@f2+2,?___ftadd+2
  2027  00108A  D0B8               	goto	l521
  2028  00108C                     l1525:
  2029  00108C  5026               	movf	___ftadd@exp2,w,c
  2030  00108E  B4D8               	btfsc	status,2,c
  2031  001090  D00B               	goto	l524
  2032  001092  5027               	movf	___ftadd@exp1,w,c
  2033  001094  5C26               	subwf	___ftadd@exp2,w,c
  2034  001096  B0D8               	btfsc	status,0,c
  2035  001098  D00E               	goto	l1531
  2036  00109A  5026               	movf	___ftadd@exp2,w,c
  2037  00109C  0800               	sublw	0
  2038  00109E  2427               	addwf	___ftadd@exp1,w,c
  2039  0010A0  6E22               	movwf	??___ftadd& (0+255),c
  2040  0010A2  0E18               	movlw	24
  2041  0010A4  6422               	cpfsgt	??___ftadd,c
  2042  0010A6  D007               	goto	l1531
  2043  0010A8                     l524:
  2044  0010A8  C01C  F01C         	movff	___ftadd@f1,?___ftadd
  2045  0010AC  C01D  F01D         	movff	___ftadd@f1+1,?___ftadd+1
  2046  0010B0  C01E  F01E         	movff	___ftadd@f1+2,?___ftadd+2
  2047  0010B4  D0A3               	goto	l521
  2048  0010B6                     l1531:
  2049  0010B6  0E06               	movlw	6
  2050  0010B8  6E25               	movwf	___ftadd@sign,c
  2051  0010BA  AE1E               	btfss	___ftadd@f1+2,7,c
  2052  0010BC  D002               	goto	l1537
  2053  0010BE  8E25               	bsf	___ftadd@sign,7,c
  2054  0010C0  D000               	goto	l1537
  2055  0010C2                     l1537:
  2056  0010C2  BE21               	btfsc	___ftadd@f2+2,7,c
  2057  0010C4  8C25               	bsf	___ftadd@sign,6,c
  2058  0010C6  8E1D               	bsf	___ftadd@f1+1,7,c
  2059  0010C8  0EFF               	movlw	255
  2060  0010CA  161C               	andwf	___ftadd@f1,f,c
  2061  0010CC  0EFF               	movlw	255
  2062  0010CE  161D               	andwf	___ftadd@f1+1,f,c
  2063  0010D0  0E00               	movlw	0
  2064  0010D2  161E               	andwf	___ftadd@f1+2,f,c
  2065  0010D4  8E20               	bsf	___ftadd@f2+1,7,c
  2066  0010D6  0EFF               	movlw	255
  2067  0010D8  161F               	andwf	___ftadd@f2,f,c
  2068  0010DA  0EFF               	movlw	255
  2069  0010DC  1620               	andwf	___ftadd@f2+1,f,c
  2070  0010DE  0E00               	movlw	0
  2071  0010E0  1621               	andwf	___ftadd@f2+2,f,c
  2072  0010E2  5026               	movf	___ftadd@exp2,w,c
  2073  0010E4  5C27               	subwf	___ftadd@exp1,w,c
  2074  0010E6  B0D8               	btfsc	status,0,c
  2075  0010E8  D01E               	goto	l1557
  2076  0010EA                     l1547:
  2077  0010EA  90D8               	bcf	status,0,c
  2078  0010EC  361F               	rlcf	___ftadd@f2,f,c
  2079  0010EE  3620               	rlcf	___ftadd@f2+1,f,c
  2080  0010F0  3621               	rlcf	___ftadd@f2+2,f,c
  2081  0010F2  0626               	decf	___ftadd@exp2,f,c
  2082  0010F4  5027               	movf	___ftadd@exp1,w,c
  2083  0010F6  1826               	xorwf	___ftadd@exp2,w,c
  2084  0010F8  B4D8               	btfsc	status,2,c
  2085  0010FA  D00F               	goto	l1555
  2086  0010FC  0625               	decf	___ftadd@sign,f,c
  2087  0010FE  C025  F022         	movff	___ftadd@sign,??___ftadd
  2088  001102  0E07               	movlw	7
  2089  001104  1622               	andwf	??___ftadd,f,c
  2090  001106  B4D8               	btfsc	status,2,c
  2091  001108  D008               	goto	l1555
  2092  00110A  D7EF               	goto	l1547
  2093  00110C  D006               	goto	l1555
  2094  00110E                     l1553:
  2095  00110E  90D8               	bcf	status,0,c
  2096  001110  321E               	rrcf	___ftadd@f1+2,f,c
  2097  001112  321D               	rrcf	___ftadd@f1+1,f,c
  2098  001114  321C               	rrcf	___ftadd@f1,f,c
  2099  001116  2A27               	incf	___ftadd@exp1,f,c
  2100  001118  D000               	goto	l1555
  2101  00111A                     l1555:
  2102  00111A  5026               	movf	___ftadd@exp2,w,c
  2103  00111C  1827               	xorwf	___ftadd@exp1,w,c
  2104  00111E  B4D8               	btfsc	status,2,c
  2105  001120  D024               	goto	l535
  2106  001122  D7F5               	goto	l1553
  2107  001124  D022               	goto	l535
  2108  001126                     l1557:
  2109  001126  5027               	movf	___ftadd@exp1,w,c
  2110  001128  5C26               	subwf	___ftadd@exp2,w,c
  2111  00112A  B0D8               	btfsc	status,0,c
  2112  00112C  D01E               	goto	l535
  2113  00112E                     l1559:
  2114  00112E  90D8               	bcf	status,0,c
  2115  001130  361C               	rlcf	___ftadd@f1,f,c
  2116  001132  361D               	rlcf	___ftadd@f1+1,f,c
  2117  001134  361E               	rlcf	___ftadd@f1+2,f,c
  2118  001136  0627               	decf	___ftadd@exp1,f,c
  2119  001138  5027               	movf	___ftadd@exp1,w,c
  2120  00113A  1826               	xorwf	___ftadd@exp2,w,c
  2121  00113C  B4D8               	btfsc	status,2,c
  2122  00113E  D00F               	goto	l1567
  2123  001140  0625               	decf	___ftadd@sign,f,c
  2124  001142  C025  F022         	movff	___ftadd@sign,??___ftadd
  2125  001146  0E07               	movlw	7
  2126  001148  1622               	andwf	??___ftadd,f,c
  2127  00114A  B4D8               	btfsc	status,2,c
  2128  00114C  D008               	goto	l1567
  2129  00114E  D7EF               	goto	l1559
  2130  001150  D006               	goto	l1567
  2131  001152                     l1565:
  2132  001152  90D8               	bcf	status,0,c
  2133  001154  3221               	rrcf	___ftadd@f2+2,f,c
  2134  001156  3220               	rrcf	___ftadd@f2+1,f,c
  2135  001158  321F               	rrcf	___ftadd@f2,f,c
  2136  00115A  2A26               	incf	___ftadd@exp2,f,c
  2137  00115C  D000               	goto	l1567
  2138  00115E                     l1567:
  2139  00115E  5026               	movf	___ftadd@exp2,w,c
  2140  001160  1827               	xorwf	___ftadd@exp1,w,c
  2141  001162  B4D8               	btfsc	status,2,c
  2142  001164  D002               	goto	l535
  2143  001166  D7F5               	goto	l1565
  2144  001168  D000               	goto	l535
  2145  00116A                     l535:
  2146  00116A  AE25               	btfss	___ftadd@sign,7,c
  2147  00116C  D00C               	goto	l544
  2148  00116E  0EFF               	movlw	255
  2149  001170  1A1C               	xorwf	___ftadd@f1,f,c
  2150  001172  0EFF               	movlw	255
  2151  001174  1A1D               	xorwf	___ftadd@f1+1,f,c
  2152  001176  0EFF               	movlw	255
  2153  001178  1A1E               	xorwf	___ftadd@f1+2,f,c
  2154  00117A  0E01               	movlw	1
  2155  00117C  261C               	addwf	___ftadd@f1,f,c
  2156  00117E  0E00               	movlw	0
  2157  001180  221D               	addwfc	___ftadd@f1+1,f,c
  2158  001182  0E00               	movlw	0
  2159  001184  221E               	addwfc	___ftadd@f1+2,f,c
  2160  001186                     l544:
  2161  001186  AC25               	btfss	___ftadd@sign,6,c
  2162  001188  D00D               	goto	l1573
  2163  00118A  0EFF               	movlw	255
  2164  00118C  1A1F               	xorwf	___ftadd@f2,f,c
  2165  00118E  0EFF               	movlw	255
  2166  001190  1A20               	xorwf	___ftadd@f2+1,f,c
  2167  001192  0EFF               	movlw	255
  2168  001194  1A21               	xorwf	___ftadd@f2+2,f,c
  2169  001196  0E01               	movlw	1
  2170  001198  261F               	addwf	___ftadd@f2,f,c
  2171  00119A  0E00               	movlw	0
  2172  00119C  2220               	addwfc	___ftadd@f2+1,f,c
  2173  00119E  0E00               	movlw	0
  2174  0011A0  2221               	addwfc	___ftadd@f2+2,f,c
  2175  0011A2  D000               	goto	l1573
  2176  0011A4                     l1573:
  2177  0011A4  0E00               	movlw	0
  2178  0011A6  6E25               	movwf	___ftadd@sign,c
  2179  0011A8  501C               	movf	___ftadd@f1,w,c
  2180  0011AA  261F               	addwf	___ftadd@f2,f,c
  2181  0011AC  501D               	movf	___ftadd@f1+1,w,c
  2182  0011AE  2220               	addwfc	___ftadd@f2+1,f,c
  2183  0011B0  501E               	movf	___ftadd@f1+2,w,c
  2184  0011B2  2221               	addwfc	___ftadd@f2+2,f,c
  2185  0011B4  AE21               	btfss	___ftadd@f2+2,7,c
  2186  0011B6  D00F               	goto	l1583
  2187  0011B8  0EFF               	movlw	255
  2188  0011BA  1A1F               	xorwf	___ftadd@f2,f,c
  2189  0011BC  0EFF               	movlw	255
  2190  0011BE  1A20               	xorwf	___ftadd@f2+1,f,c
  2191  0011C0  0EFF               	movlw	255
  2192  0011C2  1A21               	xorwf	___ftadd@f2+2,f,c
  2193  0011C4  0E01               	movlw	1
  2194  0011C6  261F               	addwf	___ftadd@f2,f,c
  2195  0011C8  0E00               	movlw	0
  2196  0011CA  2220               	addwfc	___ftadd@f2+1,f,c
  2197  0011CC  0E00               	movlw	0
  2198  0011CE  2221               	addwfc	___ftadd@f2+2,f,c
  2199  0011D0  0E01               	movlw	1
  2200  0011D2  6E25               	movwf	___ftadd@sign,c
  2201  0011D4  D000               	goto	l1583
  2202  0011D6                     l1583:
  2203  0011D6  C01F  F001         	movff	___ftadd@f2,___ftpack@arg
  2204  0011DA  C020  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  2205  0011DE  C021  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  2206  0011E2  C027  F004         	movff	___ftadd@exp1,___ftpack@exp
  2207  0011E6  C025  F005         	movff	___ftadd@sign,___ftpack@sign
  2208  0011EA  ECD9  F00B         	call	___ftpack	;wreg free
  2209  0011EE  C001  F01C         	movff	?___ftpack,?___ftadd
  2210  0011F2  C002  F01D         	movff	?___ftpack+1,?___ftadd+1
  2211  0011F6  C003  F01E         	movff	?___ftpack+2,?___ftadd+2
  2212  0011FA  D000               	goto	l521
  2213  0011FC                     l521:
  2214  0011FC  0012               	return		;funcret
  2215  0011FE                     __end_of___ftadd:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           prodh	equ	0xFF4
  2222                           prodl	equ	0xFF3
  2223                           postinc0	equ	0xFEE
  2224                           postdec1	equ	0xFE5
  2225                           fsr1l	equ	0xFE1
  2226                           postinc2	equ	0xFDE
  2227                           postdec2	equ	0xFDD
  2228                           fsr2h	equ	0xFDA
  2229                           fsr2l	equ	0xFD9
  2230                           status	equ	0xFD8
  2231                           
  2232 ;; *************** function ___awtoft *****************
  2233 ;; Defined at:
  2234 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  c               2    8[COMRAM] int 
  2237 ;; Auto vars:     Size  Location     Type
  2238 ;;  sign            1   11[COMRAM] unsigned char 
  2239 ;; Return value:  Size  Location     Type
  2240 ;;                  3    8[COMRAM] float 
  2241 ;; Registers used:
  2242 ;;		wreg, status,2, status,0, cstack
  2243 ;; Tracked objects:
  2244 ;;		On entry : 0/0
  2245 ;;		On exit  : 0/0
  2246 ;;		Unchanged: 0/0
  2247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2248 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;Total ram usage:        4 bytes
  2253 ;; Hardware stack levels used:    1
  2254 ;; Hardware stack levels required when called:    1
  2255 ;; This function calls:
  2256 ;;		___ftpack
  2257 ;; This function is called by:
  2258 ;;		_main
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           	psect	text10
  2263  001AA8                     __ptext10:
  2264                           	opt stack 0
  2265  001AA8                     ___awtoft:
  2266                           	opt stack 29
  2267                           
  2268                           ;incstack = 0
  2269  001AA8  0E00               	movlw	0
  2270  001AAA  6E0C               	movwf	___awtoft@sign,c
  2271  001AAC  AE0A               	btfss	___awtoft@c+1,7,c
  2272  001AAE  D007               	goto	l1769
  2273  001AB0  6C09               	negf	___awtoft@c,c
  2274  001AB2  1E0A               	comf	___awtoft@c+1,f,c
  2275  001AB4  B0D8               	btfsc	status,0,c
  2276  001AB6  2A0A               	incf	___awtoft@c+1,f,c
  2277  001AB8  0E01               	movlw	1
  2278  001ABA  6E0C               	movwf	___awtoft@sign,c
  2279  001ABC  D000               	goto	l1769
  2280  001ABE                     l1769:
  2281  001ABE  C009  F001         	movff	___awtoft@c,___ftpack@arg
  2282  001AC2  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  2283  001AC6  6A03               	clrf	___ftpack@arg+2,c
  2284  001AC8  0E8E               	movlw	142
  2285  001ACA  6E04               	movwf	___ftpack@exp,c
  2286  001ACC  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  2287  001AD0  ECD9  F00B         	call	___ftpack	;wreg free
  2288  001AD4  C001  F009         	movff	?___ftpack,?___awtoft
  2289  001AD8  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  2290  001ADC  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  2291  001AE0  D000               	goto	l390
  2292  001AE2                     l390:
  2293  001AE2  0012               	return		;funcret
  2294  001AE4                     __end_of___awtoft:
  2295                           	opt stack 0
  2296                           tblptru	equ	0xFF8
  2297                           tblptrh	equ	0xFF7
  2298                           tblptrl	equ	0xFF6
  2299                           tablat	equ	0xFF5
  2300                           prodh	equ	0xFF4
  2301                           prodl	equ	0xFF3
  2302                           postinc0	equ	0xFEE
  2303                           postdec1	equ	0xFE5
  2304                           fsr1l	equ	0xFE1
  2305                           postinc2	equ	0xFDE
  2306                           postdec2	equ	0xFDD
  2307                           fsr2h	equ	0xFDA
  2308                           fsr2l	equ	0xFD9
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function ___ftpack *****************
  2312 ;; Defined at:
  2313 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;  arg             3    0[COMRAM] unsigned um
  2316 ;;  exp             1    3[COMRAM] unsigned char 
  2317 ;;  sign            1    4[COMRAM] unsigned char 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  3    0[COMRAM] float 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2329 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2331 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2332 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;Total ram usage:        8 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		___awtoft
  2339 ;;		___ftadd
  2340 ;;		___ftdiv
  2341 ;;		___ftmul
  2342 ;; This function uses a non-reentrant model
  2343 ;;
  2344                           
  2345                           	psect	text11
  2346  0017B2                     __ptext11:
  2347                           	opt stack 0
  2348  0017B2                     ___ftpack:
  2349                           	opt stack 29
  2350                           
  2351                           ;incstack = 0
  2352  0017B2  5004               	movf	___ftpack@exp,w,c
  2353  0017B4  B4D8               	btfsc	status,2,c
  2354  0017B6  D005               	goto	l1385
  2355  0017B8  5001               	movf	___ftpack@arg,w,c
  2356  0017BA  1002               	iorwf	___ftpack@arg+1,w,c
  2357  0017BC  1003               	iorwf	___ftpack@arg+2,w,c
  2358  0017BE  A4D8               	btfss	status,2,c
  2359  0017C0  D00E               	goto	l1391
  2360  0017C2                     l1385:
  2361  0017C2  0E00               	movlw	0
  2362  0017C4  6E01               	movwf	?___ftpack,c
  2363  0017C6  0E00               	movlw	0
  2364  0017C8  6E02               	movwf	?___ftpack+1,c
  2365  0017CA  0E00               	movlw	0
  2366  0017CC  6E03               	movwf	?___ftpack+2,c
  2367  0017CE  D053               	goto	l480
  2368  0017D0  D006               	goto	l1391
  2369  0017D2                     l1389:
  2370  0017D2  2A04               	incf	___ftpack@exp,f,c
  2371  0017D4  90D8               	bcf	status,0,c
  2372  0017D6  3203               	rrcf	___ftpack@arg+2,f,c
  2373  0017D8  3202               	rrcf	___ftpack@arg+1,f,c
  2374  0017DA  3201               	rrcf	___ftpack@arg,f,c
  2375  0017DC  D000               	goto	l1391
  2376  0017DE                     l1391:
  2377  0017DE  0E00               	movlw	0
  2378  0017E0  1401               	andwf	___ftpack@arg,w,c
  2379  0017E2  6E06               	movwf	??___ftpack& (0+255),c
  2380  0017E4  0E00               	movlw	0
  2381  0017E6  1402               	andwf	___ftpack@arg+1,w,c
  2382  0017E8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2383  0017EA  0EFE               	movlw	254
  2384  0017EC  1403               	andwf	___ftpack@arg+2,w,c
  2385  0017EE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2386  0017F0  5006               	movf	??___ftpack,w,c
  2387  0017F2  1007               	iorwf	??___ftpack+1,w,c
  2388  0017F4  1008               	iorwf	??___ftpack+2,w,c
  2389  0017F6  B4D8               	btfsc	status,2,c
  2390  0017F8  D00E               	goto	l1397
  2391  0017FA  D7EB               	goto	l1389
  2392  0017FC  D00C               	goto	l1397
  2393  0017FE                     l1393:
  2394  0017FE  2A04               	incf	___ftpack@exp,f,c
  2395  001800  0E01               	movlw	1
  2396  001802  2601               	addwf	___ftpack@arg,f,c
  2397  001804  0E00               	movlw	0
  2398  001806  2202               	addwfc	___ftpack@arg+1,f,c
  2399  001808  0E00               	movlw	0
  2400  00180A  2203               	addwfc	___ftpack@arg+2,f,c
  2401  00180C  90D8               	bcf	status,0,c
  2402  00180E  3203               	rrcf	___ftpack@arg+2,f,c
  2403  001810  3202               	rrcf	___ftpack@arg+1,f,c
  2404  001812  3201               	rrcf	___ftpack@arg,f,c
  2405  001814  D000               	goto	l1397
  2406  001816                     l1397:
  2407  001816  0E00               	movlw	0
  2408  001818  1401               	andwf	___ftpack@arg,w,c
  2409  00181A  6E06               	movwf	??___ftpack& (0+255),c
  2410  00181C  0E00               	movlw	0
  2411  00181E  1402               	andwf	___ftpack@arg+1,w,c
  2412  001820  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2413  001822  0EFF               	movlw	255
  2414  001824  1403               	andwf	___ftpack@arg+2,w,c
  2415  001826  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2416  001828  5006               	movf	??___ftpack,w,c
  2417  00182A  1007               	iorwf	??___ftpack+1,w,c
  2418  00182C  1008               	iorwf	??___ftpack+2,w,c
  2419  00182E  B4D8               	btfsc	status,2,c
  2420  001830  D008               	goto	l1401
  2421  001832  D7E5               	goto	l1393
  2422  001834  D006               	goto	l1401
  2423  001836                     l1399:
  2424  001836  0604               	decf	___ftpack@exp,f,c
  2425  001838  90D8               	bcf	status,0,c
  2426  00183A  3601               	rlcf	___ftpack@arg,f,c
  2427  00183C  3602               	rlcf	___ftpack@arg+1,f,c
  2428  00183E  3603               	rlcf	___ftpack@arg+2,f,c
  2429  001840  D000               	goto	l1401
  2430  001842                     l1401:
  2431  001842  BE02               	btfsc	___ftpack@arg+1,7,c
  2432  001844  D004               	goto	l491
  2433  001846  0E02               	movlw	2
  2434  001848  6004               	cpfslt	___ftpack@exp,c
  2435  00184A  D7F5               	goto	l1399
  2436  00184C  D000               	goto	l491
  2437  00184E                     l491:
  2438  00184E  B004               	btfsc	___ftpack@exp,0,c
  2439  001850  D002               	goto	l1407
  2440  001852  9E02               	bcf	___ftpack@arg+1,7,c
  2441  001854  D000               	goto	l1407
  2442  001856                     l1407:
  2443  001856  90D8               	bcf	status,0,c
  2444  001858  3204               	rrcf	___ftpack@exp,f,c
  2445  00185A  5004               	movf	___ftpack@exp,w,c
  2446  00185C  1203               	iorwf	___ftpack@arg+2,f,c
  2447  00185E  5005               	movf	___ftpack@sign,w,c
  2448  001860  B4D8               	btfsc	status,2,c
  2449  001862  D002               	goto	l1413
  2450  001864  8E03               	bsf	___ftpack@arg+2,7,c
  2451  001866  D000               	goto	l1413
  2452  001868                     l1413:
  2453  001868  C001  F001         	movff	___ftpack@arg,?___ftpack
  2454  00186C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2455  001870  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2456  001874  D000               	goto	l480
  2457  001876                     l480:
  2458  001876  0012               	return		;funcret
  2459  001878                     __end_of___ftpack:
  2460                           	opt stack 0
  2461                           tblptru	equ	0xFF8
  2462                           tblptrh	equ	0xFF7
  2463                           tblptrl	equ	0xFF6
  2464                           tablat	equ	0xFF5
  2465                           prodh	equ	0xFF4
  2466                           prodl	equ	0xFF3
  2467                           postinc0	equ	0xFEE
  2468                           postdec1	equ	0xFE5
  2469                           fsr1l	equ	0xFE1
  2470                           postinc2	equ	0xFDE
  2471                           postdec2	equ	0xFDD
  2472                           fsr2h	equ	0xFDA
  2473                           fsr2l	equ	0xFD9
  2474                           status	equ	0xFD8
  2475                           
  2476 ;; *************** function ___awmod *****************
  2477 ;; Defined at:
  2478 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  2479 ;; Parameters:    Size  Location     Type
  2480 ;;  dividend        2    0[COMRAM] int 
  2481 ;;  divisor         2    2[COMRAM] int 
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;  sign            1    5[COMRAM] unsigned char 
  2484 ;;  counter         1    4[COMRAM] unsigned char 
  2485 ;; Return value:  Size  Location     Type
  2486 ;;                  2    0[COMRAM] int 
  2487 ;; Registers used:
  2488 ;;		wreg, status,2, status,0
  2489 ;; Tracked objects:
  2490 ;;		On entry : 0/0
  2491 ;;		On exit  : 0/0
  2492 ;;		Unchanged: 0/0
  2493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2494 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2497 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2498 ;;Total ram usage:        6 bytes
  2499 ;; Hardware stack levels used:    1
  2500 ;; This function calls:
  2501 ;;		Nothing
  2502 ;; This function is called by:
  2503 ;;		_main
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text12
  2508  00190E                     __ptext12:
  2509                           	opt stack 0
  2510  00190E                     ___awmod:
  2511                           	opt stack 30
  2512                           
  2513                           ;incstack = 0
  2514  00190E  0E00               	movlw	0
  2515  001910  6E06               	movwf	___awmod@sign,c
  2516  001912  AE02               	btfss	___awmod@dividend+1,7,c
  2517  001914  D007               	goto	l1733
  2518  001916  6C01               	negf	___awmod@dividend,c
  2519  001918  1E02               	comf	___awmod@dividend+1,f,c
  2520  00191A  B0D8               	btfsc	status,0,c
  2521  00191C  2A02               	incf	___awmod@dividend+1,f,c
  2522  00191E  0E01               	movlw	1
  2523  001920  6E06               	movwf	___awmod@sign,c
  2524  001922  D000               	goto	l1733
  2525  001924                     l1733:
  2526  001924  AE04               	btfss	___awmod@divisor+1,7,c
  2527  001926  D005               	goto	l1737
  2528  001928  6C03               	negf	___awmod@divisor,c
  2529  00192A  1E04               	comf	___awmod@divisor+1,f,c
  2530  00192C  B0D8               	btfsc	status,0,c
  2531  00192E  2A04               	incf	___awmod@divisor+1,f,c
  2532  001930  D000               	goto	l1737
  2533  001932                     l1737:
  2534  001932  5003               	movf	___awmod@divisor,w,c
  2535  001934  1004               	iorwf	___awmod@divisor+1,w,c
  2536  001936  B4D8               	btfsc	status,2,c
  2537  001938  D01D               	goto	l1753
  2538  00193A  0E01               	movlw	1
  2539  00193C  6E05               	movwf	___awmod@counter,c
  2540  00193E  D005               	goto	l1743
  2541  001940                     l1741:
  2542  001940  90D8               	bcf	status,0,c
  2543  001942  3603               	rlcf	___awmod@divisor,f,c
  2544  001944  3604               	rlcf	___awmod@divisor+1,f,c
  2545  001946  2A05               	incf	___awmod@counter,f,c
  2546  001948  D000               	goto	l1743
  2547  00194A                     l1743:
  2548  00194A  BE04               	btfsc	___awmod@divisor+1,7,c
  2549  00194C  D002               	goto	l1745
  2550  00194E  D7F8               	goto	l1741
  2551  001950  D000               	goto	l1745
  2552  001952                     l1745:
  2553  001952  5003               	movf	___awmod@divisor,w,c
  2554  001954  5C01               	subwf	___awmod@dividend,w,c
  2555  001956  5004               	movf	___awmod@divisor+1,w,c
  2556  001958  5802               	subwfb	___awmod@dividend+1,w,c
  2557  00195A  A0D8               	btfss	status,0,c
  2558  00195C  D005               	goto	l1749
  2559  00195E  5003               	movf	___awmod@divisor,w,c
  2560  001960  5E01               	subwf	___awmod@dividend,f,c
  2561  001962  5004               	movf	___awmod@divisor+1,w,c
  2562  001964  5A02               	subwfb	___awmod@dividend+1,f,c
  2563  001966  D000               	goto	l1749
  2564  001968                     l1749:
  2565  001968  90D8               	bcf	status,0,c
  2566  00196A  3204               	rrcf	___awmod@divisor+1,f,c
  2567  00196C  3203               	rrcf	___awmod@divisor,f,c
  2568  00196E  2E05               	decfsz	___awmod@counter,f,c
  2569  001970  D7F0               	goto	l1745
  2570  001972  D000               	goto	l1753
  2571  001974                     l1753:
  2572  001974  5006               	movf	___awmod@sign,w,c
  2573  001976  B4D8               	btfsc	status,2,c
  2574  001978  D005               	goto	l1757
  2575  00197A  6C01               	negf	___awmod@dividend,c
  2576  00197C  1E02               	comf	___awmod@dividend+1,f,c
  2577  00197E  B0D8               	btfsc	status,0,c
  2578  001980  2A02               	incf	___awmod@dividend+1,f,c
  2579  001982  D000               	goto	l1757
  2580  001984                     l1757:
  2581  001984  C001  F001         	movff	___awmod@dividend,?___awmod
  2582  001988  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2583  00198C  D000               	goto	l378
  2584  00198E                     l378:
  2585  00198E  0012               	return		;funcret
  2586  001990                     __end_of___awmod:
  2587                           	opt stack 0
  2588                           tblptru	equ	0xFF8
  2589                           tblptrh	equ	0xFF7
  2590                           tblptrl	equ	0xFF6
  2591                           tablat	equ	0xFF5
  2592                           prodh	equ	0xFF4
  2593                           prodl	equ	0xFF3
  2594                           postinc0	equ	0xFEE
  2595                           postdec1	equ	0xFE5
  2596                           fsr1l	equ	0xFE1
  2597                           postinc2	equ	0xFDE
  2598                           postdec2	equ	0xFDD
  2599                           fsr2h	equ	0xFDA
  2600                           fsr2l	equ	0xFD9
  2601                           status	equ	0xFD8
  2602                           
  2603 ;; *************** function ___awdiv *****************
  2604 ;; Defined at:
  2605 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;  dividend        2    0[COMRAM] int 
  2608 ;;  divisor         2    2[COMRAM] int 
  2609 ;; Auto vars:     Size  Location     Type
  2610 ;;  quotient        2    6[COMRAM] int 
  2611 ;;  sign            1    5[COMRAM] unsigned char 
  2612 ;;  counter         1    4[COMRAM] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;                  2    0[COMRAM] int 
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2622 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2625 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2626 ;;Total ram usage:        8 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; This function calls:
  2629 ;;		Nothing
  2630 ;; This function is called by:
  2631 ;;		_main
  2632 ;; This function uses a non-reentrant model
  2633 ;;
  2634                           
  2635                           	psect	text13
  2636  001878                     __ptext13:
  2637                           	opt stack 0
  2638  001878                     ___awdiv:
  2639                           	opt stack 30
  2640                           
  2641                           ;incstack = 0
  2642  001878  0E00               	movlw	0
  2643  00187A  6E06               	movwf	___awdiv@sign,c
  2644  00187C  AE04               	btfss	___awdiv@divisor+1,7,c
  2645  00187E  D007               	goto	l1689
  2646  001880  6C03               	negf	___awdiv@divisor,c
  2647  001882  1E04               	comf	___awdiv@divisor+1,f,c
  2648  001884  B0D8               	btfsc	status,0,c
  2649  001886  2A04               	incf	___awdiv@divisor+1,f,c
  2650  001888  0E01               	movlw	1
  2651  00188A  6E06               	movwf	___awdiv@sign,c
  2652  00188C  D000               	goto	l1689
  2653  00188E                     l1689:
  2654  00188E  AE02               	btfss	___awdiv@dividend+1,7,c
  2655  001890  D007               	goto	l1695
  2656  001892  6C01               	negf	___awdiv@dividend,c
  2657  001894  1E02               	comf	___awdiv@dividend+1,f,c
  2658  001896  B0D8               	btfsc	status,0,c
  2659  001898  2A02               	incf	___awdiv@dividend+1,f,c
  2660  00189A  0E01               	movlw	1
  2661  00189C  1A06               	xorwf	___awdiv@sign,f,c
  2662  00189E  D000               	goto	l1695
  2663  0018A0                     l1695:
  2664  0018A0  0E00               	movlw	0
  2665  0018A2  6E08               	movwf	___awdiv@quotient+1,c
  2666  0018A4  0E00               	movlw	0
  2667  0018A6  6E07               	movwf	___awdiv@quotient,c
  2668  0018A8  5003               	movf	___awdiv@divisor,w,c
  2669  0018AA  1004               	iorwf	___awdiv@divisor+1,w,c
  2670  0018AC  B4D8               	btfsc	status,2,c
  2671  0018AE  D021               	goto	l1717
  2672  0018B0  0E01               	movlw	1
  2673  0018B2  6E05               	movwf	___awdiv@counter,c
  2674  0018B4  D005               	goto	l1703
  2675  0018B6                     l1701:
  2676  0018B6  90D8               	bcf	status,0,c
  2677  0018B8  3603               	rlcf	___awdiv@divisor,f,c
  2678  0018BA  3604               	rlcf	___awdiv@divisor+1,f,c
  2679  0018BC  2A05               	incf	___awdiv@counter,f,c
  2680  0018BE  D000               	goto	l1703
  2681  0018C0                     l1703:
  2682  0018C0  BE04               	btfsc	___awdiv@divisor+1,7,c
  2683  0018C2  D002               	goto	l1705
  2684  0018C4  D7F8               	goto	l1701
  2685  0018C6  D000               	goto	l1705
  2686  0018C8                     l1705:
  2687  0018C8  90D8               	bcf	status,0,c
  2688  0018CA  3607               	rlcf	___awdiv@quotient,f,c
  2689  0018CC  3608               	rlcf	___awdiv@quotient+1,f,c
  2690  0018CE  5003               	movf	___awdiv@divisor,w,c
  2691  0018D0  5C01               	subwf	___awdiv@dividend,w,c
  2692  0018D2  5004               	movf	___awdiv@divisor+1,w,c
  2693  0018D4  5802               	subwfb	___awdiv@dividend+1,w,c
  2694  0018D6  A0D8               	btfss	status,0,c
  2695  0018D8  D006               	goto	l1713
  2696  0018DA  5003               	movf	___awdiv@divisor,w,c
  2697  0018DC  5E01               	subwf	___awdiv@dividend,f,c
  2698  0018DE  5004               	movf	___awdiv@divisor+1,w,c
  2699  0018E0  5A02               	subwfb	___awdiv@dividend+1,f,c
  2700  0018E2  8007               	bsf	___awdiv@quotient,0,c
  2701  0018E4  D000               	goto	l1713
  2702  0018E6                     l1713:
  2703  0018E6  90D8               	bcf	status,0,c
  2704  0018E8  3204               	rrcf	___awdiv@divisor+1,f,c
  2705  0018EA  3203               	rrcf	___awdiv@divisor,f,c
  2706  0018EC  2E05               	decfsz	___awdiv@counter,f,c
  2707  0018EE  D7EC               	goto	l1705
  2708  0018F0  D000               	goto	l1717
  2709  0018F2                     l1717:
  2710  0018F2  5006               	movf	___awdiv@sign,w,c
  2711  0018F4  B4D8               	btfsc	status,2,c
  2712  0018F6  D005               	goto	l1721
  2713  0018F8  6C07               	negf	___awdiv@quotient,c
  2714  0018FA  1E08               	comf	___awdiv@quotient+1,f,c
  2715  0018FC  B0D8               	btfsc	status,0,c
  2716  0018FE  2A08               	incf	___awdiv@quotient+1,f,c
  2717  001900  D000               	goto	l1721
  2718  001902                     l1721:
  2719  001902  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2720  001906  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2721  00190A  D000               	goto	l365
  2722  00190C                     l365:
  2723  00190C  0012               	return		;funcret
  2724  00190E                     __end_of___awdiv:
  2725                           	opt stack 0
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           prodh	equ	0xFF4
  2731                           prodl	equ	0xFF3
  2732                           postinc0	equ	0xFEE
  2733                           postdec1	equ	0xFE5
  2734                           fsr1l	equ	0xFE1
  2735                           postinc2	equ	0xFDE
  2736                           postdec2	equ	0xFDD
  2737                           fsr2h	equ	0xFDA
  2738                           fsr2l	equ	0xFD9
  2739                           status	equ	0xFD8
  2740                           
  2741 ;; *************** function _WAIT_1_SEC *****************
  2742 ;; Defined at:
  2743 ;;		line 34 in file "Lab5p1.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;		None
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  j               2    0[COMRAM] int 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;		None               void
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2760 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;Total ram usage:        2 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; This function calls:
  2764 ;;		Nothing
  2765 ;; This function is called by:
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text14
  2771  001BBA                     __ptext14:
  2772                           	opt stack 0
  2773  001BBA                     _WAIT_1_SEC:
  2774                           	opt stack 30
  2775                           
  2776                           ;Lab5p1.c: 36: for (int j=0; j<17000; j++);
  2777                           
  2778                           ;incstack = 0
  2779  001BBA  0E00               	movlw	0
  2780  001BBC  6E02               	movwf	WAIT_1_SEC@j+1,c
  2781  001BBE  0E00               	movlw	0
  2782  001BC0  6E01               	movwf	WAIT_1_SEC@j,c
  2783  001BC2                     l893:
  2784  001BC2  BE02               	btfsc	WAIT_1_SEC@j+1,7,c
  2785  001BC4  D008               	goto	l897
  2786  001BC6  0E68               	movlw	104
  2787  001BC8  5C01               	subwf	WAIT_1_SEC@j,w,c
  2788  001BCA  0E42               	movlw	66
  2789  001BCC  5802               	subwfb	WAIT_1_SEC@j+1,w,c
  2790  001BCE  B0D8               	btfsc	status,0,c
  2791  001BD0  D005               	goto	l64
  2792  001BD2  D001               	goto	l897
  2793  001BD4  D003               	goto	l64
  2794  001BD6                     l897:
  2795  001BD6  4A01               	infsnz	WAIT_1_SEC@j,f,c
  2796  001BD8  2A02               	incf	WAIT_1_SEC@j+1,f,c
  2797  001BDA  D7F3               	goto	l893
  2798  001BDC                     l64:
  2799  001BDC  0012               	return		;funcret
  2800  001BDE                     __end_of_WAIT_1_SEC:
  2801                           	opt stack 0
  2802                           tblptru	equ	0xFF8
  2803                           tblptrh	equ	0xFF7
  2804                           tblptrl	equ	0xFF6
  2805                           tablat	equ	0xFF5
  2806                           prodh	equ	0xFF4
  2807                           prodl	equ	0xFF3
  2808                           postinc0	equ	0xFEE
  2809                           postdec1	equ	0xFE5
  2810                           fsr1l	equ	0xFE1
  2811                           postinc2	equ	0xFDE
  2812                           postdec2	equ	0xFDD
  2813                           fsr2h	equ	0xFDA
  2814                           fsr2l	equ	0xFD9
  2815                           status	equ	0xFD8
  2816                           
  2817 ;; *************** function _Select_ADC_Channel *****************
  2818 ;; Defined at:
  2819 ;;		line 39 in file "Lab5p1.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  channel         1    wreg     unsigned char 
  2822 ;; Auto vars:     Size  Location     Type
  2823 ;;  channel         1    0[COMRAM] unsigned char 
  2824 ;; Return value:  Size  Location     Type
  2825 ;;		None               void
  2826 ;; Registers used:
  2827 ;;		wreg, status,2, status,0, prodl, prodh
  2828 ;; Tracked objects:
  2829 ;;		On entry : 0/0
  2830 ;;		On exit  : 0/0
  2831 ;;		Unchanged: 0/0
  2832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2837 ;;Total ram usage:        1 bytes
  2838 ;; Hardware stack levels used:    1
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_main
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text15
  2847  001C18                     __ptext15:
  2848                           	opt stack 0
  2849  001C18                     _Select_ADC_Channel:
  2850                           	opt stack 30
  2851                           
  2852                           ;incstack = 0
  2853                           ;Select_ADC_Channel@channel stored from wreg
  2854  001C18  6E01               	movwf	Select_ADC_Channel@channel,c
  2855                           
  2856                           ;Lab5p1.c: 41: ADCON0 = channel * 4 + 1;
  2857  001C1A  5001               	movf	Select_ADC_Channel@channel,w,c
  2858  001C1C  0D04               	mullw	4
  2859  001C1E  28F3               	incf	prodl,w,c
  2860  001C20  6EC2               	movwf	4034,c	;volatile
  2861  001C22  0012               	return		;funcret
  2862  001C24                     __end_of_Select_ADC_Channel:
  2863                           	opt stack 0
  2864                           tblptru	equ	0xFF8
  2865                           tblptrh	equ	0xFF7
  2866                           tblptrl	equ	0xFF6
  2867                           tablat	equ	0xFF5
  2868                           prodh	equ	0xFF4
  2869                           prodl	equ	0xFF3
  2870                           postinc0	equ	0xFEE
  2871                           postdec1	equ	0xFE5
  2872                           fsr1l	equ	0xFE1
  2873                           postinc2	equ	0xFDE
  2874                           postdec2	equ	0xFDD
  2875                           fsr2h	equ	0xFDA
  2876                           fsr2l	equ	0xFD9
  2877                           status	equ	0xFD8
  2878                           
  2879 ;; *************** function _Init_UART *****************
  2880 ;; Defined at:
  2881 ;;		line 26 in file "Lab5p1.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;		None
  2886 ;; Return value:  Size  Location     Type
  2887 ;;		None               void
  2888 ;; Registers used:
  2889 ;;		wreg, status,2, cstack
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;Total ram usage:        0 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    1
  2902 ;; This function calls:
  2903 ;;		_OpenUSART
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           
  2909                           	psect	text16
  2910  001BF6                     __ptext16:
  2911                           	opt stack 0
  2912  001BF6                     _Init_UART:
  2913                           	opt stack 29
  2914                           
  2915                           ;Lab5p1.c: 28: OpenUSART (0b01111111 & 0b10111111 &
  2916                           ;Lab5p1.c: 29: 0b11111110 & 0b11111101 & 0b11111111 &
  2917                           ;Lab5p1.c: 30: 0b11111111, 25);
  2918                           
  2919                           ;incstack = 0
  2920  001BF6  0E00               	movlw	0
  2921  001BF8  6E02               	movwf	OpenUSART@spbrg+1,c
  2922  001BFA  0E19               	movlw	25
  2923  001BFC  6E01               	movwf	OpenUSART@spbrg,c
  2924  001BFE  0E3C               	movlw	60
  2925  001C00  ECC8  F00C         	call	_OpenUSART
  2926                           
  2927                           ;Lab5p1.c: 31: OSCCON = 0x60;
  2928  001C04  0E60               	movlw	96
  2929  001C06  6ED3               	movwf	4051,c	;volatile
  2930  001C08  0012               	return		;funcret
  2931  001C0A                     __end_of_Init_UART:
  2932                           	opt stack 0
  2933                           tblptru	equ	0xFF8
  2934                           tblptrh	equ	0xFF7
  2935                           tblptrl	equ	0xFF6
  2936                           tablat	equ	0xFF5
  2937                           prodh	equ	0xFF4
  2938                           prodl	equ	0xFF3
  2939                           postinc0	equ	0xFEE
  2940                           postdec1	equ	0xFE5
  2941                           fsr1l	equ	0xFE1
  2942                           postinc2	equ	0xFDE
  2943                           postdec2	equ	0xFDD
  2944                           fsr2h	equ	0xFDA
  2945                           fsr2l	equ	0xFD9
  2946                           status	equ	0xFD8
  2947                           
  2948 ;; *************** function _OpenUSART *****************
  2949 ;; Defined at:
  2950 ;;		line 73 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;  config          1    wreg     unsigned char 
  2953 ;;  spbrg           2    0[COMRAM] unsigned int 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  config          1    2[COMRAM] unsigned char 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;		None               void
  2958 ;; Registers used:
  2959 ;;		wreg, status,2
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;Total ram usage:        3 bytes
  2970 ;; Hardware stack levels used:    1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_Init_UART
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           	psect	text17
  2979  001990                     __ptext17:
  2980                           	opt stack 0
  2981  001990                     _OpenUSART:
  2982                           	opt stack 29
  2983                           
  2984                           ;incstack = 0
  2985                           ;OpenUSART@config stored from wreg
  2986  001990  6E03               	movwf	OpenUSART@config,c
  2987  001992  0E00               	movlw	0
  2988  001994  6EAC               	movwf	4012,c	;volatile
  2989  001996  0E00               	movlw	0
  2990  001998  6EAB               	movwf	4011,c	;volatile
  2991  00199A  A003               	btfss	OpenUSART@config,0,c
  2992  00199C  D002               	goto	l1337
  2993  00199E  88AC               	bsf	4012,4,c	;volatile
  2994  0019A0  D000               	goto	l1337
  2995  0019A2                     l1337:
  2996  0019A2  A203               	btfss	OpenUSART@config,1,c
  2997  0019A4  D003               	goto	l1341
  2998  0019A6  8CAC               	bsf	4012,6,c	;volatile
  2999  0019A8  8CAB               	bsf	4011,6,c	;volatile
  3000  0019AA  D000               	goto	l1341
  3001  0019AC                     l1341:
  3002  0019AC  A403               	btfss	OpenUSART@config,2,c
  3003  0019AE  D002               	goto	l1345
  3004  0019B0  8EAC               	bsf	4012,7,c	;volatile
  3005  0019B2  D000               	goto	l1345
  3006  0019B4                     l1345:
  3007  0019B4  A603               	btfss	OpenUSART@config,3,c
  3008  0019B6  D002               	goto	l160
  3009  0019B8  88AB               	bsf	4011,4,c	;volatile
  3010  0019BA  D002               	goto	l1349
  3011  0019BC                     l160:
  3012  0019BC  8AAB               	bsf	4011,5,c	;volatile
  3013  0019BE  D000               	goto	l1349
  3014  0019C0                     l1349:
  3015  0019C0  B803               	btfsc	OpenUSART@config,4,c
  3016  0019C2  84AC               	bsf	4012,2,c	;volatile
  3017  0019C4  989E               	bcf	3998,4,c	;volatile
  3018  0019C6  AA03               	btfss	OpenUSART@config,5,c
  3019  0019C8  D002               	goto	l1357
  3020  0019CA  86AB               	bsf	4011,3,c	;volatile
  3021  0019CC  D000               	goto	l1357
  3022  0019CE                     l1357:
  3023  0019CE  AC03               	btfss	OpenUSART@config,6,c
  3024  0019D0  D002               	goto	l164
  3025  0019D2  8A9D               	bsf	3997,5,c	;volatile
  3026  0019D4  D001               	goto	l165
  3027  0019D6                     l164:
  3028  0019D6  9A9D               	bcf	3997,5,c	;volatile
  3029  0019D8                     l165:
  3030  0019D8  9A9E               	bcf	3998,5,c	;volatile
  3031  0019DA  AE03               	btfss	OpenUSART@config,7,c
  3032  0019DC  D002               	goto	l166
  3033  0019DE  889D               	bsf	3997,4,c	;volatile
  3034  0019E0  D001               	goto	l167
  3035  0019E2                     l166:
  3036  0019E2  989D               	bcf	3997,4,c	;volatile
  3037  0019E4                     l167:
  3038  0019E4  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3039  0019E8  5002               	movf	OpenUSART@spbrg+1,w,c
  3040  0019EA  6EB0               	movwf	4016,c	;volatile
  3041  0019EC  8AAC               	bsf	4012,5,c	;volatile
  3042  0019EE  8EAB               	bsf	4011,7,c	;volatile
  3043  0019F0  9C94               	bcf	3988,6,c	;volatile
  3044  0019F2  8E94               	bsf	3988,7,c	;volatile
  3045  0019F4  B8AC               	btfsc	4012,4,c	;volatile
  3046  0019F6  BEAC               	btfsc	4012,7,c	;volatile
  3047  0019F8  D002               	goto	l169
  3048  0019FA  8C94               	bsf	3988,6,c	;volatile
  3049  0019FC  D000               	goto	l169
  3050  0019FE                     l169:
  3051  0019FE  0012               	return		;funcret
  3052  001A00                     __end_of_OpenUSART:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           prodh	equ	0xFF4
  3059                           prodl	equ	0xFF3
  3060                           postinc0	equ	0xFEE
  3061                           postdec1	equ	0xFE5
  3062                           fsr1l	equ	0xFE1
  3063                           postinc2	equ	0xFDE
  3064                           postdec2	equ	0xFDD
  3065                           fsr2h	equ	0xFDA
  3066                           fsr2l	equ	0xFD9
  3067                           status	equ	0xFD8
  3068                           
  3069 ;; *************** function _Init_ADC *****************
  3070 ;; Defined at:
  3071 ;;		line 100 in file "Lab5p1.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;		None               void
  3078 ;; Registers used:
  3079 ;;		wreg, status,2
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;Total ram usage:        0 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; This function calls:
  3092 ;;		Nothing
  3093 ;; This function is called by:
  3094 ;;		_main
  3095 ;; This function uses a non-reentrant model
  3096 ;;
  3097                           
  3098                           	psect	text18
  3099  001C2E                     __ptext18:
  3100                           	opt stack 0
  3101  001C2E                     _Init_ADC:
  3102                           	opt stack 30
  3103                           
  3104                           ;Lab5p1.c: 102: ADCON1 = 0x1B;
  3105                           
  3106                           ;incstack = 0
  3107  001C2E  0E1B               	movlw	27
  3108  001C30  6EC1               	movwf	4033,c	;volatile
  3109                           
  3110                           ;Lab5p1.c: 103: ADCON2 = 0xA9;
  3111  001C32  0EA9               	movlw	169
  3112  001C34  6EC0               	movwf	4032,c	;volatile
  3113  001C36  0012               	return		;funcret
  3114  001C38                     __end_of_Init_ADC:
  3115                           	opt stack 0
  3116                           tblptru	equ	0xFF8
  3117                           tblptrh	equ	0xFF7
  3118                           tblptrl	equ	0xFF6
  3119                           tablat	equ	0xFF5
  3120                           prodh	equ	0xFF4
  3121                           prodl	equ	0xFF3
  3122                           postinc0	equ	0xFEE
  3123                           postdec1	equ	0xFE5
  3124                           fsr1l	equ	0xFE1
  3125                           postinc2	equ	0xFDE
  3126                           postdec2	equ	0xFDD
  3127                           fsr2h	equ	0xFDA
  3128                           fsr2l	equ	0xFD9
  3129                           status	equ	0xFD8
  3130                           
  3131 ;; *************** function _Get_Full_ADC *****************
  3132 ;; Defined at:
  3133 ;;		line 106 in file "Lab5p1.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;		None
  3136 ;; Auto vars:     Size  Location     Type
  3137 ;;  result          2    4[COMRAM] int 
  3138 ;; Return value:  Size  Location     Type
  3139 ;;                  2    0[COMRAM] unsigned int 
  3140 ;; Registers used:
  3141 ;;		wreg, status,2, status,0
  3142 ;; Tracked objects:
  3143 ;;		On entry : 0/0
  3144 ;;		On exit  : 0/0
  3145 ;;		Unchanged: 0/0
  3146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3148 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3149 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;Total ram usage:        6 bytes
  3152 ;; Hardware stack levels used:    1
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text19
  3161  001B70                     __ptext19:
  3162                           	opt stack 0
  3163  001B70                     _Get_Full_ADC:
  3164                           	opt stack 30
  3165                           
  3166                           ;Lab5p1.c: 108: int result;
  3167                           ;Lab5p1.c: 109: ADCON0bits.GO=1;
  3168                           
  3169                           ;incstack = 0
  3170  001B70  82C2               	bsf	4034,1,c	;volatile
  3171                           
  3172                           ;Lab5p1.c: 110: while(ADCON0bits.DONE==1);
  3173  001B72  D000               	goto	l89
  3174  001B74                     l89:
  3175  001B74  B2C2               	btfsc	4034,1,c	;volatile
  3176  001B76  D7FE               	goto	l89
  3177                           
  3178                           ;Lab5p1.c: 111: result = (ADRESH * 0x100) + ADRESL;
  3179  001B78  50C4               	movf	4036,w,c	;volatile
  3180  001B7A  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  3181  001B7C  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  3182  001B7E  50C3               	movf	4035,w,c	;volatile
  3183  001B80  2403               	addwf	??_Get_Full_ADC,w,c
  3184  001B82  6E05               	movwf	Get_Full_ADC@result,c
  3185  001B84  0E00               	movlw	0
  3186  001B86  2004               	addwfc	??_Get_Full_ADC+1,w,c
  3187  001B88  6E06               	movwf	Get_Full_ADC@result+1,c
  3188                           
  3189                           ;Lab5p1.c: 113: return result;
  3190  001B8A  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  3191  001B8E  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  3192  001B92  D000               	goto	l92
  3193  001B94                     l92:
  3194  001B94  0012               	return		;funcret
  3195  001B96                     __end_of_Get_Full_ADC:
  3196                           	opt stack 0
  3197                           tblptru	equ	0xFF8
  3198                           tblptrh	equ	0xFF7
  3199                           tblptrl	equ	0xFF6
  3200                           tablat	equ	0xFF5
  3201                           prodh	equ	0xFF4
  3202                           prodl	equ	0xFF3
  3203                           postinc0	equ	0xFEE
  3204                           postdec1	equ	0xFE5
  3205                           fsr1l	equ	0xFE1
  3206                           postinc2	equ	0xFDE
  3207                           postdec2	equ	0xFDD
  3208                           fsr2h	equ	0xFDA
  3209                           fsr2l	equ	0xFD9
  3210                           status	equ	0xFD8
  3211                           
  3212 ;; *************** function _Display_Upper_Digit *****************
  3213 ;; Defined at:
  3214 ;;		line 82 in file "Lab5p1.c"
  3215 ;; Parameters:    Size  Location     Type
  3216 ;;  digit           1    wreg     unsigned char 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  digit           1    1[COMRAM] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;		None               void
  3221 ;; Registers used:
  3222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3230 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;Total ram usage:        2 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; This function calls:
  3235 ;;		Nothing
  3236 ;; This function is called by:
  3237 ;;		_main
  3238 ;; This function uses a non-reentrant model
  3239 ;;
  3240                           
  3241                           	psect	text20
  3242  001AE4                     __ptext20:
  3243                           	opt stack 0
  3244  001AE4                     _Display_Upper_Digit:
  3245                           	opt stack 30
  3246                           
  3247                           ;incstack = 0
  3248                           ;Display_Upper_Digit@digit stored from wreg
  3249  001AE4  6E02               	movwf	Display_Upper_Digit@digit,c
  3250                           
  3251                           ;Lab5p1.c: 84: PORTC = array[digit] & 0x3F;
  3252  001AE6  5002               	movf	Display_Upper_Digit@digit,w,c
  3253  001AE8  0D01               	mullw	1
  3254  001AEA  0E4A               	movlw	low _array
  3255  001AEC  24F3               	addwf	prodl,w,c
  3256  001AEE  6ED9               	movwf	fsr2l,c
  3257  001AF0  0E00               	movlw	high _array
  3258  001AF2  20F4               	addwfc	prodh,w,c
  3259  001AF4  6EDA               	movwf	fsr2h,c
  3260  001AF6  50DF               	movf	indf2,w,c
  3261  001AF8  0B3F               	andlw	63
  3262  001AFA  6E82               	movwf	3970,c	;volatile
  3263                           
  3264                           ;Lab5p1.c: 85: if (array[digit] < 0x40)
  3265  001AFC  5002               	movf	Display_Upper_Digit@digit,w,c
  3266  001AFE  0D01               	mullw	1
  3267  001B00  0E4A               	movlw	low _array
  3268  001B02  24F3               	addwf	prodl,w,c
  3269  001B04  6ED9               	movwf	fsr2l,c
  3270  001B06  0E00               	movlw	high _array
  3271  001B08  20F4               	addwfc	prodh,w,c
  3272  001B0A  6EDA               	movwf	fsr2h,c
  3273  001B0C  0E40               	movlw	64
  3274  001B0E  60DF               	cpfslt	indf2,c
  3275  001B10  D002               	goto	l917
  3276                           
  3277                           ;Lab5p1.c: 86: {
  3278                           ;Lab5p1.c: 87: PORTE = 0x00;
  3279  001B12  0E00               	movlw	0
  3280  001B14  D001               	goto	L1
  3281  001B16                     l917:
  3282                           
  3283                           ;Lab5p1.c: 89: else
  3284                           ;Lab5p1.c: 90: {
  3285                           ;Lab5p1.c: 91: PORTE = 0x01;
  3286  001B16  0E01               	movlw	1
  3287  001B18                     L1:
  3288  001B18  6E84               	movwf	3972,c	;volatile
  3289  001B1A  D000               	goto	l80
  3290  001B1C                     l80:
  3291  001B1C  0012               	return		;funcret
  3292  001B1E                     __end_of_Display_Upper_Digit:
  3293                           	opt stack 0
  3294                           tblptru	equ	0xFF8
  3295                           tblptrh	equ	0xFF7
  3296                           tblptrl	equ	0xFF6
  3297                           tablat	equ	0xFF5
  3298                           prodh	equ	0xFF4
  3299                           prodl	equ	0xFF3
  3300                           postinc0	equ	0xFEE
  3301                           postdec1	equ	0xFE5
  3302                           fsr1l	equ	0xFE1
  3303                           indf2	equ	0xFDF
  3304                           postinc2	equ	0xFDE
  3305                           postdec2	equ	0xFDD
  3306                           fsr2h	equ	0xFDA
  3307                           fsr2l	equ	0xFD9
  3308                           status	equ	0xFD8
  3309                           
  3310 ;; *************** function _Display_Lower_Digit *****************
  3311 ;; Defined at:
  3312 ;;		line 95 in file "Lab5p1.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  digit           1    wreg     unsigned char 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  digit           1    0[COMRAM] unsigned char 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;		None               void
  3319 ;; Registers used:
  3320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3327 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3329 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3330 ;;Total ram usage:        1 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; This function calls:
  3333 ;;		Nothing
  3334 ;; This function is called by:
  3335 ;;		_main
  3336 ;; This function uses a non-reentrant model
  3337 ;;
  3338                           
  3339                           	psect	text21
  3340  001BDE                     __ptext21:
  3341                           	opt stack 0
  3342  001BDE                     _Display_Lower_Digit:
  3343                           	opt stack 30
  3344                           
  3345                           ;incstack = 0
  3346                           ;Display_Lower_Digit@digit stored from wreg
  3347  001BDE  6E01               	movwf	Display_Lower_Digit@digit,c
  3348                           
  3349                           ;Lab5p1.c: 97: PORTD = array[digit];
  3350  001BE0  5001               	movf	Display_Lower_Digit@digit,w,c
  3351  001BE2  0D01               	mullw	1
  3352  001BE4  0E4A               	movlw	low _array
  3353  001BE6  24F3               	addwf	prodl,w,c
  3354  001BE8  6ED9               	movwf	fsr2l,c
  3355  001BEA  0E00               	movlw	high _array
  3356  001BEC  20F4               	addwfc	prodh,w,c
  3357  001BEE  6EDA               	movwf	fsr2h,c
  3358  001BF0  50DF               	movf	indf2,w,c
  3359  001BF2  6E83               	movwf	3971,c	;volatile
  3360  001BF4  0012               	return		;funcret
  3361  001BF6                     __end_of_Display_Lower_Digit:
  3362                           	opt stack 0
  3363                           tblptru	equ	0xFF8
  3364                           tblptrh	equ	0xFF7
  3365                           tblptrl	equ	0xFF6
  3366                           tablat	equ	0xFF5
  3367                           prodh	equ	0xFF4
  3368                           prodl	equ	0xFF3
  3369                           postinc0	equ	0xFEE
  3370                           postdec1	equ	0xFE5
  3371                           fsr1l	equ	0xFE1
  3372                           indf2	equ	0xFDF
  3373                           postinc2	equ	0xFDE
  3374                           postdec2	equ	0xFDD
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8
  3378                           
  3379 ;; *************** function _DO_DISPLAY_D1 *****************
  3380 ;; Defined at:
  3381 ;;		line 116 in file "Lab5p1.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  temp            1    wreg     unsigned char 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  temp            1    0[COMRAM] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;		None               void
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;Total ram usage:        1 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; This function calls:
  3402 ;;		Nothing
  3403 ;; This function is called by:
  3404 ;;		_main
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text22
  3409  001B48                     __ptext22:
  3410                           	opt stack 0
  3411  001B48                     _DO_DISPLAY_D1:
  3412                           	opt stack 30
  3413                           
  3414                           ;incstack = 0
  3415                           ;DO_DISPLAY_D1@temp stored from wreg
  3416  001B48  6E01               	movwf	DO_DISPLAY_D1@temp,c
  3417                           
  3418                           ;Lab5p1.c: 118: if(temp<=45)
  3419  001B4A  0E2E               	movlw	46
  3420  001B4C  6001               	cpfslt	DO_DISPLAY_D1@temp,c
  3421  001B4E  D002               	goto	l95
  3422                           
  3423                           ;Lab5p1.c: 119: {
  3424                           ;Lab5p1.c: 120: PORTB = 0x00;
  3425  001B50  0E00               	movlw	0
  3426  001B52  6E81               	movwf	3969,c	;volatile
  3427  001B54                     l95:
  3428                           
  3429                           ;Lab5p1.c: 123: {
  3430                           ;Lab5p1.c: 124: PORTB = 0x01;
  3431  001B54  0E01               	movlw	1
  3432  001B56  6E81               	movwf	3969,c	;volatile
  3433                           
  3434                           ;Lab5p1.c: 127: {
  3435                           ;Lab5p1.c: 128: PORTB = 0x02;
  3436                           
  3437                           ;Lab5p1.c: 125: }
  3438                           ;Lab5p1.c: 126: if(56<=temp<=65)
  3439  001B58  0E02               	movlw	2
  3440  001B5A  6E81               	movwf	3969,c	;volatile
  3441                           
  3442                           ;Lab5p1.c: 131: {
  3443                           ;Lab5p1.c: 132: PORTB = 0x04;
  3444                           
  3445                           ;Lab5p1.c: 129: }
  3446                           ;Lab5p1.c: 130: if(66<=temp<=75)
  3447  001B5C  0E04               	movlw	4
  3448  001B5E  6E81               	movwf	3969,c	;volatile
  3449  001B60  D000               	goto	l975
  3450  001B62                     l975:
  3451                           
  3452                           ;Lab5p1.c: 133: }
  3453                           ;Lab5p1.c: 134: if(temp>=76)
  3454  001B62  0E4B               	movlw	75
  3455  001B64  6401               	cpfsgt	DO_DISPLAY_D1@temp,c
  3456  001B66  D003               	goto	l100
  3457                           
  3458                           ;Lab5p1.c: 135: {
  3459                           ;Lab5p1.c: 136: PORTB = 0x07;
  3460  001B68  0E07               	movlw	7
  3461  001B6A  6E81               	movwf	3969,c	;volatile
  3462  001B6C  D000               	goto	l100
  3463  001B6E                     l100:
  3464  001B6E  0012               	return		;funcret
  3465  001B70                     __end_of_DO_DISPLAY_D1:
  3466                           	opt stack 0
  3467                           tblptru	equ	0xFF8
  3468                           tblptrh	equ	0xFF7
  3469                           tblptrl	equ	0xFF6
  3470                           tablat	equ	0xFF5
  3471                           prodh	equ	0xFF4
  3472                           prodl	equ	0xFF3
  3473                           postinc0	equ	0xFEE
  3474                           postdec1	equ	0xFE5
  3475                           fsr1l	equ	0xFE1
  3476                           indf2	equ	0xFDF
  3477                           postinc2	equ	0xFDE
  3478                           postdec2	equ	0xFDD
  3479                           fsr2h	equ	0xFDA
  3480                           fsr2l	equ	0xFD9
  3481                           status	equ	0xFD8
  3482                           tblptru	equ	0xFF8
  3483                           tblptrh	equ	0xFF7
  3484                           tblptrl	equ	0xFF6
  3485                           tablat	equ	0xFF5
  3486                           prodh	equ	0xFF4
  3487                           prodl	equ	0xFF3
  3488                           postinc0	equ	0xFEE
  3489                           postdec1	equ	0xFE5
  3490                           fsr1l	equ	0xFE1
  3491                           indf2	equ	0xFDF
  3492                           postinc2	equ	0xFDE
  3493                           postdec2	equ	0xFDD
  3494                           fsr2h	equ	0xFDA
  3495                           fsr2l	equ	0xFD9
  3496                           status	equ	0xFD8
  3497                           
  3498                           	psect	rparam
  3499  0000                     tblptru	equ	0xFF8
  3500                           tblptrh	equ	0xFF7
  3501                           tblptrl	equ	0xFF6
  3502                           tablat	equ	0xFF5
  3503                           prodh	equ	0xFF4
  3504                           prodl	equ	0xFF3
  3505                           postinc0	equ	0xFEE
  3506                           postdec1	equ	0xFE5
  3507                           fsr1l	equ	0xFE1
  3508                           indf2	equ	0xFDF
  3509                           postinc2	equ	0xFDE
  3510                           postdec2	equ	0xFDD
  3511                           fsr2h	equ	0xFDA
  3512                           fsr2l	equ	0xFD9
  3513                           status	equ	0xFD8


Data Sizes:
    Strings     46
    Constant    10
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     73      83
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_2(CODE[22]), STR_1(CODE[24]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->___ftdiv
    _printf->___lwmod
    ___lwmod->___lwdiv
    ___ftmul->___awtoft
    ___ftdiv->___ftadd
    ___ftadd->___ftmul
    ___awtoft->___ftpack
    _Init_UART->_OpenUSART

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   12208
                                             54 COMRAM    19    19      0
                      _DO_DISPLAY_D1
                _Display_Lower_Digit
                _Display_Upper_Digit
                       _Get_Full_ADC
                           _Init_ADC
                          _Init_UART
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    1040
                                             12 COMRAM    12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     265
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     268
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___fttol                                             15    11      4     305
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (1) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) ___ftmul                                             15     9      6    2325
                                             12 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2173
                                             39 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftadd                                             12     6      6    2919
                                             27 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1851
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftpack                                             8     3      5    1707
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     402
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     406
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Display_Upper_Digit                                  2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Display_Lower_Digit                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D1                                        1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_DISPLAY_D1
   _Display_Lower_Digit
   _Display_Upper_Digit
   _Get_Full_ADC
   _Init_ADC
   _Init_UART
     _OpenUSART
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awdiv
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
   ___ftneg
   ___fttol
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     49      53       1       65.4%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      53      34        0.0%
DATA                 0      0      53       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Wed Mar 02 18:50:11 2022

                          l53 1C0E                            l80 1B1C                            l64 1BDC  
                          l92 1B94                            l95 1B54                            l89 1B74  
                ___awdiv@sign 0006                  ___ftadd@exp1 0027                  ___ftadd@exp2 0026  
                ___ftadd@sign 0025                           l100 1B6E                           l160 19BC  
                         l136 14F0                           l164 19D6                           l165 19D8  
                         l166 19E2                           l167 19E4                           l520 107E  
                         l169 19FE                           l521 11FC                           l524 10A8  
                         l700 1A9E                           l365 190C                           l390 1AE2  
                         l535 116A                           l480 1876                           l544 1186  
                         l552 17B0                           l378 198E                           l491 184E  
                         l555 177C                           l567 15E8                           l577 1BAC  
                         l690 1A52                           l588 16CE                           l917 1B16  
                         l893 1BC2                           l975 1B62                           l897 1BD6  
                ___awmod@sign 0006                           prod 000FF3                  __CFG_LVP$OFF 000000  
              ?_DO_DISPLAY_D1 0001                  ___ftdiv@cntr 0031                  ___ftdiv@sign 0036  
                __CFG_WDT$OFF 000000                          l1401 1842                          l1341 19AC  
                        l1413 1868                          l1407 1856                          l1423 1A16  
                        l1503 1464                          l1345 19B4                          l1337 19A2  
                        l1425 1A20                          l1513 14C8                          l1531 10B6  
                        l1435 1A46                          l1427 1A28                          l1451 1A92  
                        l1443 1A6A                          l1507 1478                          l1515 14D4  
                        l1357 19CE                          l1349 19C0                          l1701 18B6  
                        l1525 108C                          l1445 1A74                          l1509 147E  
                        l1703 18C0                          l1391 17DE                          l1447 1A7C  
                        l1721 1902                          l1713 18E6                          l1705 18C8  
                        l1393 17FE                          l1385 17C2                          l1553 110E  
                        l1537 10C2                          l1641 152A                          l1801 1662  
                        l1473 13CE                          l1555 111A                          l1547 10EA  
                        l1619 1756                          l1811 168C                          l1491 1430  
                        l1717 18F2                          l1741 1940                          l1733 1924  
                        l1397 1816                          l1389 17D2                          l1573 11A4  
                        l1565 1152                          l1557 1126                          l1629 178A  
                        l1645 1538                          l1813 169A                          l1805 1672  
                        l1477 13DC                          l1469 13BE                          l1743 194A  
                        l1399 1836                          l1583 11D6                          l1567 115E  
                        l1559 112E                          l1663 157E                          l1639 1510  
                        l1807 1678                          l1815 16A4                          l1495 143C  
                        l1479 1402                          l1745 1952                          l1753 1974  
                        l1737 1932                          l1593 16EE                          l1673 15AC  
                        l1489 142C                          l1595 1708                          l1667 1594  
                        l1659 156C                          l1819 16BC                          l1499 1460  
                        l1835 121C                          l1757 1984                          l1749 1968  
                        l1677 15C2                          l1669 159A                          l1695 18A0  
                        l1599 1716                          l1783 1608                          l1689 188E  
                        l1769 1ABE                          STR_1 100B                          STR_2 1023  
                        u1501 16FE                          u1271 104A                          u1281 105E  
                        u1531 1502                          u1551 1520                          u1481 16E0  
                        u1731 15FA                          u1750 1626                          u1755 161E  
                        _TRMT 007D61                          _main 11FE                  ___ftpack@arg 0001  
                ___ftpack@exp 0004                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000                  ___ftmul@cntr 001A  
                ___param_bank 000010                  ___ftmul@sign 001B          __end_of_Get_Full_ADC 1B96  
                ___fttol@exp1 000F                  ___fttol@lval 000B                   ?_WAIT_1_SEC 0001  
                       ?_main 0001               __end_of___awdiv 190E               __end_of___ftadd 11FE  
             __end_of___awmod 1990               __end_of___ftdiv 17B2               __end_of___ftneg 1BBA  
             __end_of___ftmul 15EA               ___awdiv@divisor 0003               __end_of___fttol 16D0  
             __end_of___lwdiv 1A5C               __end_of___lwmod 1AA8               ___awdiv@counter 0005  
                       _RCSTA 000FAB                         _SPBRG 000FAF                         _PORTB 000F81  
                       _PORTC 000F82                         _PORTD 000F83                         _PORTE 000F84  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96                         _TXREG 000FAD  
                       _TXSTA 000FAC                 ___awtoft@sign 000C               __end_of_dpowers 100B  
                       _array 004A                 ___ftpack@sign 0005                         main@L 0045  
                       main@U 0044                         _putch 1C0A                  main@num_step 0046  
              __CFG_BOREN$OFF 000000                         tablat 000FF5                         status 000FD8  
             __initialization 1B1E                  __end_of_main 13B4      Display_Lower_Digit@digit 0001  
            __end_of_Init_ADC 1C38                        ??_main 0037                 ___fttol@sign1 000A  
               __activetblptr 000002   __end_of_Display_Lower_Digit 1BF6               ??_DO_DISPLAY_D1 0001  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
                      _ADRESH 000FC4                        _ADRESL 000FC3              ___awdiv@dividend 0001  
            __end_of___awtoft 1AE4                        ?_putch 0001              __end_of___ftpack 1878  
                      _OSCCON 000FD3            __size_of_Init_UART 0014                        _SPBRGH 000FB0  
         __size_of_WAIT_1_SEC 0024            Get_Full_ADC@result 0005            __size_of_OpenUSART 0070  
                   ??___awdiv 0005                     ??___ftadd 0022                     ??___awmod 0005  
                   ??___ftdiv 002E                     ??___ftneg 0004                     ??___ftmul 0013  
                   ??___fttol 0005                     ??___lwdiv 0005                     ??___lwmod 000C  
            ___awdiv@quotient 0007               ___awmod@divisor 0003               ___awmod@counter 0005  
                      _printf 13B4         ___ftmul@f3_as_product 0017                  __pdataCOMRAM 004A  
                __mediumconst 0000                        tblptrh 000FF7                        tblptrl 000FF6  
                      tblptru 000FF8                        putch@c 0001                    __accesstop 0080  
     __end_of__initialization 1B3E                    ___ftadd@f1 001C                    ___ftadd@f2 001F  
               ___rparam_used 000001                    ___ftdiv@f1 0028                    ___ftdiv@f2 002B  
                  ___ftdiv@f3 0032         __size_of_Get_Full_ADC 0026                    ___ftneg@f1 0001  
                  ___awtoft@c 0009                    ___ftmul@f1 000D                    ___ftmul@f2 0010  
                  ___fttol@f1 0001                __pcstackCOMRAM 0001                 __end_of_putch 1C18  
           __end_of_Init_UART 1C0A   __end_of_Display_Upper_Digit 1B1E             __end_of_OpenUSART 1A00  
                _Get_Full_ADC 1B70                       ??_putch 0001                     ?_Init_ADC 0001  
  __end_of_Select_ADC_Channel 1C24                  ??_WAIT_1_SEC 0001                     ?___awtoft 0009  
                   ?___ftpack 0001                       ?_printf 000D     Select_ADC_Channel@channel 0001  
                 WAIT_1_SEC@j 0001                    ??_Init_ADC 0001            __end_of_WAIT_1_SEC 1BDE  
                     __Hparam 0000                       __Lparam 0000                       ___awdiv 1878  
                     ___ftadd 103A                       ___awmod 190E                       ___ftdiv 16D0  
                     ___ftneg 1B96                       ___ftmul 14F2                       ___fttol 15EA  
                     ___lwdiv 1A00                       ___lwmod 1A5C                  __psmallconst 1000  
                     __pcinit 1B1E                    ??___awtoft 000C                    ??___ftpack 0006  
                     __ramtop 1000                       __ptext0 11FE                       __ptext1 13B4  
                     __ptext2 1C0A                       __ptext3 1A5C                       __ptext4 1A00  
                     __ptext5 15EA                       __ptext6 1B96                       __ptext7 14F2  
                     __ptext8 16D0                       __ptext9 103A               __size_of_printf 013E  
                     _dpowers 1001              ___awmod@dividend 0001          end_of_initialization 1B3E  
               __Lmediumconst 0000                     _RCSTAbits 000FAB                       printf@c 0018  
                     printf@f 000D                       postdec1 000FE5                       postdec2 000FDD  
                     postinc0 000FEE                       postinc2 000FDE                     _TRISCbits 000F94  
              main@voltage_mv 0039         __end_of_DO_DISPLAY_D1 1B70  __size_of_Display_Lower_Digit 0018  
                 ___ftdiv@exp 0035                     _TXSTAbits 000FAC                   ___ftmul@exp 0016  
    Display_Upper_Digit@digit 0002                 __pidataCOMRAM 1C24             main@temperature_C 003C  
           main@temperature_F 003F                __end_of_printf 14F2           start_initialization 1B1E  
                   _Init_UART 1BF6             DO_DISPLAY_D1@temp 0001                     _OpenUSART 1990  
            __CFG_OSC$INTIO67 000000             __size_of_Init_ADC 000A            _Select_ADC_Channel 1C18  
                    ??_printf 0011             __size_of___awtoft 003C             __size_of___ftpack 00C6  
         ?_Select_ADC_Channel 0001                    ?_Init_UART 0001  __size_of_Display_Upper_Digit 003A  
                  ?_OpenUSART 0001          ??_Select_ADC_Channel 0001              ___lwdiv@dividend 0001  
                    ?___awdiv 0001                      ?___ftadd 001C                      ?___awmod 0001  
                    ?___ftdiv 0028                      ?___ftneg 0001                      ?___ftmul 000D  
                    ?___fttol 0001                      ?___lwdiv 0001                      ?___lwmod 0008  
                 __smallconst 1000              ___lwdiv@quotient 0005                __size_of_putch 000E  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E           _Display_Lower_Digit 1BDE  
                  _ADCON0bits 000FC2                    printf@flag 0014                    printf@prec 0015  
                   main@tempF 0048                   ??_Init_UART 0004                     copy_data0 1B32  
                    _Init_ADC 1C2E          ?_Display_Lower_Digit 0001                   ??_OpenUSART 0003  
             OpenUSART@config 0003                      __Hrparam 0000                      __Lrparam 0000  
            __size_of___awdiv 0096              __size_of___ftadd 01C4              __size_of___awmod 0082  
            __size_of___ftdiv 00E2              __size_of___ftneg 0024              __size_of___ftmul 00F8  
            __size_of___fttol 00E6              __size_of___lwdiv 005C              __size_of___lwmod 004C  
                    ___awtoft 1AA8                      ___ftpack 17B2               ___lwdiv@divisor 0003  
             ___lwdiv@counter 0007                      __ptext10 1AA8                      __ptext11 17B2  
                    __ptext20 1AE4                      __ptext12 190E                      __ptext21 1BDE  
                    __ptext13 1878                      __ptext22 1B48                      __ptext14 1BBA  
                    __ptext15 1C18                      __ptext16 1BF6                      __ptext17 1990  
                    __ptext18 1C2E                      __ptext19 1B70                 ?_Get_Full_ADC 0001  
       ??_Display_Lower_Digit 0001                 __size_of_main 01B6        __size_of_DO_DISPLAY_D1 0028  
                   printf@val 0016           _Display_Upper_Digit 1AE4                OpenUSART@spbrg 0001  
              ??_Get_Full_ADC 0003          ?_Display_Upper_Digit 0001              ___lwmod@dividend 0008  
                    printf@ap 0012                    _WAIT_1_SEC 1BBA               ___lwmod@divisor 000A  
             ___lwmod@counter 000C                 _DO_DISPLAY_D1 1B48         ??_Display_Upper_Digit 0001  
 __size_of_Select_ADC_Channel 000C               main@voltage_mv1 0042  
