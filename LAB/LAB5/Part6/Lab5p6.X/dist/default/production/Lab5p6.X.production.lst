

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 10 10:23:36 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    48                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    49  0000                     
    50                           	psect	idataCOMRAM
    51  002E42                     __pidataCOMRAM:
    52                           	opt stack 0
    53                           
    54                           ;initializer for _array
    55  002E42  40                 	db	64
    56  002E43  79                 	db	121
    57  002E44  24                 	db	36
    58  002E45  30                 	db	48
    59  002E46  19                 	db	25
    60  002E47  12                 	db	18
    61  002E48  02                 	db	2
    62  002E49  78                 	db	120
    63  002E4A  00                 	db	0
    64  002E4B  18                 	db	24
    65                           
    66                           	psect	smallconst
    67  001000                     __psmallconst:
    68                           	opt stack 0
    69  001000  00                 	db	0
    70  001001                     _dpowers:
    71                           	opt stack 0
    72  001001  0001               	dw	1
    73  001003  0000               	dw	0
    74  001005  000A               	dw	10
    75  001007  0000               	dw	0
    76  001009  0064               	dw	100
    77  00100B  0000               	dw	0
    78  00100D  03E8               	dw	1000
    79  00100F  0000               	dw	0
    80  001011  2710               	dw	10000
    81  001013  0000               	dw	0
    82  001015  86A0               	dw	34464
    83  001017  0001               	dw	1
    84  001019  4240               	dw	16960
    85  00101B  000F               	dw	15
    86  00101D  9680               	dw	38528
    87  00101F  0098               	dw	152
    88  001021  E100               	dw	57600
    89  001023  05F5               	dw	1525
    90  001025  CA00               	dw	51712
    91  001027  3B9A               	dw	15258
    92  001029                     __end_of_dpowers:
    93                           	opt stack 0
    94  001029                     __npowers_:
    95                           	opt stack 0
    96  001029  00                 	db	0
    97  00102A  80                 	db	128
    98  00102B  3F                 	db	63
    99  00102C  CD                 	db	205
   100  00102D  CC                 	db	204
   101  00102E  3D                 	db	61
   102  00102F  D7                 	db	215
   103  001030  23                 	db	35
   104  001031  3C                 	db	60
   105  001032  12                 	db	18
   106  001033  83                 	db	131
   107  001034  3A                 	db	58
   108  001035  B7                 	db	183
   109  001036  D1                 	db	209
   110  001037  38                 	db	56
   111  001038  C6                 	db	198
   112  001039  27                 	db	39
   113  00103A  37                 	db	55
   114  00103B  38                 	db	56
   115  00103C  86                 	db	134
   116  00103D  35                 	db	53
   117  00103E  C0                 	db	192
   118  00103F  D6                 	db	214
   119  001040  33                 	db	51
   120  001041  CC                 	db	204
   121  001042  2B                 	db	43
   122  001043  32                 	db	50
   123  001044  70                 	db	112
   124  001045  89                 	db	137
   125  001046  30                 	db	48
   126  001047  E7                 	db	231
   127  001048  DB                 	db	219
   128  001049  2E                 	db	46
   129  00104A  E5                 	db	229
   130  00104B  3C                 	db	60
   131  00104C  1E                 	db	30
   132  00104D  42                 	db	66
   133  00104E  A2                 	db	162
   134  00104F  0D                 	db	13
   135  001050                     __end_of__npowers_:
   136                           	opt stack 0
   137  001050                     __powers_:
   138                           	opt stack 0
   139  001050  00                 	db	0
   140  001051  80                 	db	128
   141  001052  3F                 	db	63
   142  001053  00                 	db	0
   143  001054  20                 	db	32
   144  001055  41                 	db	65
   145  001056  00                 	db	0
   146  001057  C8                 	db	200
   147  001058  42                 	db	66
   148  001059  00                 	db	0
   149  00105A  7A                 	db	122
   150  00105B  44                 	db	68
   151  00105C  40                 	db	64
   152  00105D  1C                 	db	28
   153  00105E  46                 	db	70
   154  00105F  50                 	db	80
   155  001060  C3                 	db	195
   156  001061  47                 	db	71
   157  001062  24                 	db	36
   158  001063  74                 	db	116
   159  001064  49                 	db	73
   160  001065  97                 	db	151
   161  001066  18                 	db	24
   162  001067  4B                 	db	75
   163  001068  BC                 	db	188
   164  001069  BE                 	db	190
   165  00106A  4C                 	db	76
   166  00106B  6B                 	db	107
   167  00106C  6E                 	db	110
   168  00106D  4E                 	db	78
   169  00106E  03                 	db	3
   170  00106F  15                 	db	21
   171  001070  50                 	db	80
   172  001071  79                 	db	121
   173  001072  AD                 	db	173
   174  001073  60                 	db	96
   175  001074  F3                 	db	243
   176  001075  49                 	db	73
   177  001076  71                 	db	113
   178  001077                     __end_of__powers_:
   179                           	opt stack 0
   180  0000                     _ADCON0	set	4034
   181  0000                     _ADCON0bits	set	4034
   182  0000                     _ADCON1	set	4033
   183  0000                     _ADCON2	set	4032
   184  0000                     _ADRESH	set	4036
   185  0000                     _ADRESL	set	4035
   186  0000                     _OSCCON	set	4051
   187  0000                     _PIE1bits	set	3997
   188  0000                     _PIR1bits	set	3998
   189  0000                     _PORTA	set	3968
   190  0000                     _PORTAbits	set	3968
   191  0000                     _PORTBbits	set	3969
   192  0000                     _PORTC	set	3970
   193  0000                     _PORTD	set	3971
   194  0000                     _PORTE	set	3972
   195  0000                     _RCSTA	set	4011
   196  0000                     _RCSTAbits	set	4011
   197  0000                     _SPBRG	set	4015
   198  0000                     _SPBRGH	set	4016
   199  0000                     _TRISA	set	3986
   200  0000                     _TRISB	set	3987
   201  0000                     _TRISC	set	3988
   202  0000                     _TRISCbits	set	3988
   203  0000                     _TRISD	set	3989
   204  0000                     _TRISE	set	3990
   205  0000                     _TXREG	set	4013
   206  0000                     _TXSTA	set	4012
   207  0000                     _TXSTAbits	set	4012
   208  0000                     _PORTB	set	3969
   209  0000                     _TRMT	set	32097
   210  001077                     STR_2:
   211  001077  54                 	db	84	;'T'
   212  001078  65                 	db	101	;'e'
   213  001079  6D                 	db	109	;'m'
   214  00107A  70                 	db	112	;'p'
   215  00107B  65                 	db	101	;'e'
   216  00107C  72                 	db	114	;'r'
   217  00107D  61                 	db	97	;'a'
   218  00107E  74                 	db	116	;'t'
   219  00107F  75                 	db	117	;'u'
   220  001080  72                 	db	114	;'r'
   221  001081  65                 	db	101	;'e'
   222  001082  20                 	db	32
   223  001083  3D                 	db	61	;'='
   224  001084  20                 	db	32
   225  001085  25                 	db	37
   226  001086  64                 	db	100	;'d'
   227  001087  20                 	db	32
   228  001088  46                 	db	70	;'F'
   229  001089  20                 	db	32
   230  00108A  0D                 	db	13
   231  00108B  0A                 	db	10
   232  00108C  0A                 	db	10
   233  00108D  00                 	db	0
   234  00108E                     STR_3:
   235  00108E  4C                 	db	76	;'L'
   236  00108F  69                 	db	105	;'i'
   237  001090  67                 	db	103	;'g'
   238  001091  68                 	db	104	;'h'
   239  001092  74                 	db	116	;'t'
   240  001093  20                 	db	32
   241  001094  56                 	db	86	;'V'
   242  001095  6F                 	db	111	;'o'
   243  001096  6C                 	db	108	;'l'
   244  001097  74                 	db	116	;'t'
   245  001098  20                 	db	32
   246  001099  3D                 	db	61	;'='
   247  00109A  20                 	db	32
   248  00109B  25                 	db	37
   249  00109C  64                 	db	100	;'d'
   250  00109D  20                 	db	32
   251  00109E  6D                 	db	109	;'m'
   252  00109F  56                 	db	86	;'V'
   253  0010A0  20                 	db	32
   254  0010A1  0D                 	db	13
   255  0010A2  0A                 	db	10
   256  0010A3  0A                 	db	10
   257  0010A4  00                 	db	0
   258  0010A5                     STR_1:
   259  0010A5  56                 	db	86	;'V'
   260  0010A6  6F                 	db	111	;'o'
   261  0010A7  6C                 	db	108	;'l'
   262  0010A8  74                 	db	116	;'t'
   263  0010A9  61                 	db	97	;'a'
   264  0010AA  67                 	db	103	;'g'
   265  0010AB  65                 	db	101	;'e'
   266  0010AC  20                 	db	32
   267  0010AD  3D                 	db	61	;'='
   268  0010AE  20                 	db	32
   269  0010AF  25                 	db	37
   270  0010B0  66                 	db	102	;'f'
   271  0010B1  20                 	db	32
   272  0010B2  28                 	db	40
   273  0010B3  6D                 	db	109	;'m'
   274  0010B4  56                 	db	86	;'V'
   275  0010B5  29                 	db	41
   276  0010B6  20                 	db	32
   277  0010B7  0D                 	db	13
   278  0010B8  0A                 	db	10
   279  0010B9  00                 	db	0
   280                           
   281                           ; #config settings
   282  0010BA  00                 	db	0	; dummy byte at the end
   283  0000                     
   284                           	psect	cinit
   285  002D18                     __pcinit:
   286                           	opt stack 0
   287  002D18                     start_initialization:
   288                           	opt stack 0
   289  002D18                     __initialization:
   290                           	opt stack 0
   291                           
   292                           ; Initialize objects allocated to COMRAM (10 bytes)
   293                           ; load TBLPTR registers with __pidataCOMRAM
   294  002D18  0E42               	movlw	low __pidataCOMRAM
   295  002D1A  6EF6               	movwf	tblptrl,c
   296  002D1C  0E2E               	movlw	high __pidataCOMRAM
   297  002D1E  6EF7               	movwf	tblptrh,c
   298  002D20  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   299  002D22  6EF8               	movwf	tblptru,c
   300  002D24  EE00  F075         	lfsr	0,__pdataCOMRAM
   301  002D28  EE10 F00A          	lfsr	1,10
   302  002D2C                     copy_data0:
   303  002D2C  0009               	tblrd		*+
   304  002D2E  CFF5 FFEE          	movff	tablat,postinc0
   305  002D32  50E5               	movf	postdec1,w,c
   306  002D34  50E1               	movf	fsr1l,w,c
   307  002D36  E1FA               	bnz	copy_data0
   308  002D38                     end_of_initialization:
   309                           	opt stack 0
   310  002D38                     __end_of__initialization:
   311                           	opt stack 0
   312  002D38  0E00               	movlw	low (__Lmediumconst shr (0+16))
   313  002D3A  6EF8               	movwf	tblptru,c
   314  002D3C  0100               	movlb	0
   315  002D3E  EF17  F00F         	goto	_main	;jump to C main() function
   316                           tblptru	equ	0xFF8
   317                           tblptrh	equ	0xFF7
   318                           tblptrl	equ	0xFF6
   319                           tablat	equ	0xFF5
   320                           postinc0	equ	0xFEE
   321                           postdec1	equ	0xFE5
   322                           fsr1l	equ	0xFE1
   323                           
   324                           	psect	dataCOMRAM
   325  000075                     __pdataCOMRAM:
   326                           	opt stack 0
   327  000075                     _array:
   328                           	opt stack 0
   329  000075                     	ds	10
   330                           tblptru	equ	0xFF8
   331                           tblptrh	equ	0xFF7
   332                           tblptrl	equ	0xFF6
   333                           tablat	equ	0xFF5
   334                           postinc0	equ	0xFEE
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	cstackCOMRAM
   339  000001                     __pcstackCOMRAM:
   340                           	opt stack 0
   341  000001                     ?_Get_Full_ADC:
   342                           	opt stack 0
   343  000001                     ?___awmod:
   344                           	opt stack 0
   345  000001                     ?___ftpack:
   346                           	opt stack 0
   347  000001                     ?___ftneg:
   348                           	opt stack 0
   349  000001                     ?__tdiv_to_l_:
   350                           	opt stack 0
   351  000001                     ?__div_to_l_:
   352                           	opt stack 0
   353  000001                     ?___lldiv:
   354                           	opt stack 0
   355  000001                     Select_ADC_Channel@channel:
   356                           	opt stack 0
   357  000001                     putch@c:
   358                           	opt stack 0
   359  000001                     Display_Upper_Digit@PE:
   360                           	opt stack 0
   361  000001                     Display_Lower_Digit@digit:
   362                           	opt stack 0
   363  000001                     WAIT_1_SEC@j:
   364                           	opt stack 0
   365  000001                     DO_DISPLAY_D1@temp:
   366                           	opt stack 0
   367  000001                     DO_DISPLAY_D3@voltage:
   368                           	opt stack 0
   369  000001                     OpenUSART@spbrg:
   370                           	opt stack 0
   371  000001                     ___awmod@dividend:
   372                           	opt stack 0
   373  000001                     __div_to_l_@f1:
   374                           	opt stack 0
   375  000001                     ___ftpack@arg:
   376                           	opt stack 0
   377  000001                     __tdiv_to_l_@f1:
   378                           	opt stack 0
   379  000001                     ___ftge@ff1:
   380                           	opt stack 0
   381  000001                     ___ftneg@f1:
   382                           	opt stack 0
   383  000001                     ___lldiv@dividend:
   384                           	opt stack 0
   385                           
   386                           ; 4 bytes @ 0x0
   387  000001                     	ds	1
   388  000002                     Display_Upper_Digit@digit:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x1
   392  000002                     	ds	1
   393  000003                     ??_Get_Full_ADC:
   394  000003                     OpenUSART@config:
   395                           	opt stack 0
   396  000003                     ___awmod@divisor:
   397                           	opt stack 0
   398                           
   399                           ; 2 bytes @ 0x2
   400  000003                     	ds	1
   401  000004                     ___ftpack@exp:
   402                           	opt stack 0
   403  000004                     __div_to_l_@f2:
   404                           	opt stack 0
   405  000004                     __tdiv_to_l_@f2:
   406                           	opt stack 0
   407  000004                     ___ftge@ff2:
   408                           	opt stack 0
   409                           
   410                           ; 3 bytes @ 0x3
   411  000004                     	ds	1
   412  000005                     ___awmod@counter:
   413                           	opt stack 0
   414  000005                     ___ftpack@sign:
   415                           	opt stack 0
   416  000005                     Get_Full_ADC@result:
   417                           	opt stack 0
   418  000005                     ___lldiv@divisor:
   419                           	opt stack 0
   420                           
   421                           ; 4 bytes @ 0x4
   422  000005                     	ds	1
   423  000006                     ??___ftpack:
   424  000006                     ___awmod@sign:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x5
   428  000006                     	ds	1
   429  000007                     ??__tdiv_to_l_:
   430  000007                     ??___ftge:
   431  000007                     ?___awdiv:
   432                           	opt stack 0
   433  000007                     ___awdiv@dividend:
   434                           	opt stack 0
   435  000007                     __div_to_l_@quot:
   436                           	opt stack 0
   437                           
   438                           ; 4 bytes @ 0x6
   439  000007                     	ds	2
   440  000009                     ?___awtoft:
   441                           	opt stack 0
   442  000009                     ?___lltoft:
   443                           	opt stack 0
   444  000009                     ___awdiv@divisor:
   445                           	opt stack 0
   446  000009                     ___awtoft@c:
   447                           	opt stack 0
   448  000009                     ___lldiv@quotient:
   449                           	opt stack 0
   450  000009                     ___lltoft@c:
   451                           	opt stack 0
   452                           
   453                           ; 4 bytes @ 0x8
   454  000009                     	ds	1
   455  00000A                     __tdiv_to_l_@quot:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x9
   459  00000A                     	ds	1
   460  00000B                     ___awdiv@counter:
   461                           	opt stack 0
   462  00000B                     __div_to_l_@cntr:
   463                           	opt stack 0
   464                           
   465                           ; 1 bytes @ 0xA
   466  00000B                     	ds	1
   467  00000C                     ___awdiv@sign:
   468                           	opt stack 0
   469  00000C                     ___awtoft@sign:
   470                           	opt stack 0
   471  00000C                     __div_to_l_@exp1:
   472                           	opt stack 0
   473                           
   474                           ; 1 bytes @ 0xB
   475  00000C                     	ds	1
   476  00000D                     ??___lltoft:
   477  00000D                     ___lldiv@counter:
   478                           	opt stack 0
   479  00000D                     ___awdiv@quotient:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0xC
   483  00000D                     	ds	1
   484  00000E                     ?___llmod:
   485                           	opt stack 0
   486  00000E                     __tdiv_to_l_@cntr:
   487                           	opt stack 0
   488  00000E                     ___llmod@dividend:
   489                           	opt stack 0
   490                           
   491                           ; 4 bytes @ 0xD
   492  00000E                     	ds	1
   493  00000F                     ?___wmul:
   494                           	opt stack 0
   495  00000F                     __tdiv_to_l_@exp1:
   496                           	opt stack 0
   497  00000F                     DO_DISPLAY_D2@temp:
   498                           	opt stack 0
   499  00000F                     ___wmul@multiplier:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0xE
   503  00000F                     	ds	2
   504  000011                     ___lltoft@exp:
   505                           	opt stack 0
   506  000011                     DO_DISPLAY_D2@T:
   507                           	opt stack 0
   508  000011                     ___wmul@multiplicand:
   509                           	opt stack 0
   510                           
   511                           ; 2 bytes @ 0x10
   512  000011                     	ds	1
   513  000012                     ___llmod@divisor:
   514                           	opt stack 0
   515                           
   516                           ; 4 bytes @ 0x11
   517  000012                     	ds	1
   518  000013                     ___wmul@product:
   519                           	opt stack 0
   520                           
   521                           ; 2 bytes @ 0x12
   522  000013                     	ds	2
   523  000015                     ?___ftmul:
   524                           	opt stack 0
   525  000015                     ___ftmul@f1:
   526                           	opt stack 0
   527                           
   528                           ; 3 bytes @ 0x14
   529  000015                     	ds	1
   530  000016                     ___llmod@counter:
   531                           	opt stack 0
   532                           
   533                           ; 1 bytes @ 0x15
   534  000016                     	ds	2
   535  000018                     ___ftmul@f2:
   536                           	opt stack 0
   537                           
   538                           ; 3 bytes @ 0x17
   539  000018                     	ds	3
   540  00001B                     ??___ftmul:
   541                           
   542                           ; 0 bytes @ 0x1A
   543  00001B                     	ds	3
   544  00001E                     ___ftmul@exp:
   545                           	opt stack 0
   546                           
   547                           ; 1 bytes @ 0x1D
   548  00001E                     	ds	1
   549  00001F                     ___ftmul@f3_as_product:
   550                           	opt stack 0
   551                           
   552                           ; 3 bytes @ 0x1E
   553  00001F                     	ds	3
   554  000022                     ___ftmul@cntr:
   555                           	opt stack 0
   556                           
   557                           ; 1 bytes @ 0x21
   558  000022                     	ds	1
   559  000023                     ___ftmul@sign:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x22
   563  000023                     	ds	1
   564  000024                     ?_fround:
   565                           	opt stack 0
   566  000024                     ?_scale:
   567                           	opt stack 0
   568                           
   569                           ; 3 bytes @ 0x23
   570  000024                     	ds	3
   571  000027                     _fround$1264:
   572                           	opt stack 0
   573  000027                     _scale$1265:
   574                           	opt stack 0
   575                           
   576                           ; 3 bytes @ 0x26
   577  000027                     	ds	3
   578  00002A                     scale@scl:
   579                           	opt stack 0
   580  00002A                     _fround$1263:
   581                           	opt stack 0
   582                           
   583                           ; 3 bytes @ 0x29
   584  00002A                     	ds	1
   585  00002B                     ?___fttol:
   586                           	opt stack 0
   587  00002B                     ___fttol@f1:
   588                           	opt stack 0
   589                           
   590                           ; 3 bytes @ 0x2A
   591  00002B                     	ds	2
   592  00002D                     fround@prec:
   593                           	opt stack 0
   594                           
   595                           ; 1 bytes @ 0x2C
   596  00002D                     	ds	1
   597  00002E                     ?___ftadd:
   598                           	opt stack 0
   599  00002E                     ___ftadd@f1:
   600                           	opt stack 0
   601                           
   602                           ; 3 bytes @ 0x2D
   603  00002E                     	ds	1
   604  00002F                     ??___fttol:
   605                           
   606                           ; 0 bytes @ 0x2E
   607  00002F                     	ds	2
   608  000031                     ___ftadd@f2:
   609                           	opt stack 0
   610                           
   611                           ; 3 bytes @ 0x30
   612  000031                     	ds	3
   613  000034                     ??___ftadd:
   614  000034                     ___fttol@sign1:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0x33
   618  000034                     	ds	1
   619  000035                     ___fttol@lval:
   620                           	opt stack 0
   621                           
   622                           ; 4 bytes @ 0x34
   623  000035                     	ds	2
   624  000037                     ___ftadd@sign:
   625                           	opt stack 0
   626                           
   627                           ; 1 bytes @ 0x36
   628  000037                     	ds	1
   629  000038                     ___ftadd@exp2:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x37
   633  000038                     	ds	1
   634  000039                     ___ftadd@exp1:
   635                           	opt stack 0
   636  000039                     ___fttol@exp1:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x38
   640  000039                     	ds	1
   641  00003A                     ?___ftdiv:
   642                           	opt stack 0
   643  00003A                     ?___ftsub:
   644                           	opt stack 0
   645  00003A                     ___ftdiv@f1:
   646                           	opt stack 0
   647  00003A                     ___ftsub@f1:
   648                           	opt stack 0
   649                           
   650                           ; 3 bytes @ 0x39
   651  00003A                     	ds	3
   652  00003D                     ___ftdiv@f2:
   653                           	opt stack 0
   654  00003D                     ___ftsub@f2:
   655                           	opt stack 0
   656                           
   657                           ; 3 bytes @ 0x3C
   658  00003D                     	ds	3
   659  000040                     ??___ftdiv:
   660  000040                     ?_printf:
   661                           	opt stack 0
   662  000040                     printf@f:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x3F
   666  000040                     	ds	3
   667  000043                     ___ftdiv@cntr:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x42
   671  000043                     	ds	1
   672  000044                     ___ftdiv@f3:
   673                           	opt stack 0
   674                           
   675                           ; 3 bytes @ 0x43
   676  000044                     	ds	1
   677  000045                     ??_printf:
   678                           
   679                           ; 0 bytes @ 0x44
   680  000045                     	ds	2
   681  000047                     ___ftdiv@exp:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x46
   685  000047                     	ds	1
   686  000048                     ___ftdiv@sign:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x47
   690  000048                     	ds	3
   691  00004B                     _printf$1266:
   692                           	opt stack 0
   693                           
   694                           ; 3 bytes @ 0x4A
   695  00004B                     	ds	3
   696  00004E                     printf@ap:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x4D
   700  00004E                     	ds	2
   701  000050                     printf@flag:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x4F
   705  000050                     	ds	2
   706  000052                     printf@prec:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x51
   710  000052                     	ds	2
   711  000054                     printf@val:
   712                           	opt stack 0
   713                           
   714                           ; 4 bytes @ 0x53
   715  000054                     	ds	4
   716  000058                     printf@exp:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0x57
   720  000058                     	ds	2
   721  00005A                     printf@tmpval:
   722                           	opt stack 0
   723                           
   724                           ; 4 bytes @ 0x59
   725  00005A                     	ds	4
   726  00005E                     printf@fval:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x5D
   730  00005E                     	ds	3
   731  000061                     printf@c:
   732                           	opt stack 0
   733                           
   734                           ; 1 bytes @ 0x60
   735  000061                     	ds	1
   736  000062                     ??_main:
   737                           
   738                           ; 0 bytes @ 0x61
   739  000062                     	ds	2
   740  000064                     main@temperature_C:
   741                           	opt stack 0
   742                           
   743                           ; 3 bytes @ 0x63
   744  000064                     	ds	3
   745  000067                     main@temperature_F:
   746                           	opt stack 0
   747                           
   748                           ; 3 bytes @ 0x66
   749  000067                     	ds	3
   750  00006A                     main@U:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x69
   754  00006A                     	ds	1
   755  00006B                     main@L:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x6A
   759  00006B                     	ds	1
   760  00006C                     main@voltage_mv:
   761                           	opt stack 0
   762                           
   763                           ; 3 bytes @ 0x6B
   764  00006C                     	ds	3
   765  00006F                     main@voltage_mv1:
   766                           	opt stack 0
   767                           
   768                           ; 2 bytes @ 0x6E
   769  00006F                     	ds	2
   770  000071                     main@num_step:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x70
   774  000071                     	ds	2
   775  000073                     main@tempF:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x72
   779  000073                     	ds	2
   780                           tblptru	equ	0xFF8
   781                           tblptrh	equ	0xFF7
   782                           tblptrl	equ	0xFF6
   783                           tablat	equ	0xFF5
   784                           postinc0	equ	0xFEE
   785                           postdec1	equ	0xFE5
   786                           fsr1l	equ	0xFE1
   787                           
   788 ;;
   789 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   790 ;;
   791 ;; *************** function _main *****************
   792 ;; Defined at:
   793 ;;		line 67 in file "Lab5p6.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  voltage_mv      3  107[COMRAM] float 
   798 ;;  temperature_    3  102[COMRAM] float 
   799 ;;  temperature_    3   99[COMRAM] float 
   800 ;;  tempF           2  114[COMRAM] int 
   801 ;;  num_step        2  112[COMRAM] int 
   802 ;;  voltage_mv1     2  110[COMRAM] int 
   803 ;;  L               1  106[COMRAM] unsigned char 
   804 ;;  U               1  105[COMRAM] unsigned char 
   805 ;; Return value:  Size  Location     Type
   806 ;;		None               void
   807 ;; Registers used:
   808 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   809 ;; Tracked objects:
   810 ;;		On entry : 0/0
   811 ;;		On exit  : 0/0
   812 ;;		Unchanged: 0/0
   813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   815 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   816 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   817 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   818 ;;Total ram usage:       19 bytes
   819 ;; Hardware stack levels required when called:    4
   820 ;; This function calls:
   821 ;;		_DO_DISPLAY_D1
   822 ;;		_DO_DISPLAY_D2
   823 ;;		_DO_DISPLAY_D3
   824 ;;		_Display_Lower_Digit
   825 ;;		_Display_Upper_Digit
   826 ;;		_Get_Full_ADC
   827 ;;		_Init_ADC
   828 ;;		_Init_TRIS
   829 ;;		_Init_UART
   830 ;;		_Select_ADC_Channel
   831 ;;		_WAIT_1_SEC
   832 ;;		___awdiv
   833 ;;		___awmod
   834 ;;		___awtoft
   835 ;;		___ftadd
   836 ;;		___ftdiv
   837 ;;		___ftmul
   838 ;;		___ftneg
   839 ;;		___fttol
   840 ;;		_printf
   841 ;; This function is called by:
   842 ;;		Startup code after reset
   843 ;; This function uses a non-reentrant model
   844 ;;
   845                           
   846                           	psect	text0
   847  001E2E                     __ptext0:
   848                           	opt stack 0
   849  001E2E                     _main:
   850                           	opt stack 27
   851                           
   852                           ;Lab5p6.c: 69: Init_UART();
   853                           
   854                           ;incstack = 0
   855  001E2E  EC03  F017         	call	_Init_UART	;wreg free
   856                           
   857                           ;Lab5p6.c: 70: Init_ADC();
   858  001E32  EC14  F017         	call	_Init_ADC	;wreg free
   859                           
   860                           ;Lab5p6.c: 71: Init_TRIS();
   861  001E36  ECF8  F016         	call	_Init_TRIS	;wreg free
   862                           
   863                           ;Lab5p6.c: 72: PORTA = 0x00;
   864  001E3A  0E00               	movlw	0
   865  001E3C  6E80               	movwf	3968,c	;volatile
   866                           
   867                           ;Lab5p6.c: 73: PORTB = 0x00;
   868  001E3E  0E00               	movlw	0
   869  001E40  6E81               	movwf	3969,c	;volatile
   870                           
   871                           ;Lab5p6.c: 74: PORTC = 0xFF;
   872  001E42  6882               	setf	3970,c	;volatile
   873                           
   874                           ;Lab5p6.c: 75: PORTD = 0xFF;
   875  001E44  6883               	setf	3971,c	;volatile
   876                           
   877                           ;Lab5p6.c: 76: PORTE = 0xFF;
   878  001E46  6884               	setf	3972,c	;volatile
   879  001E48  D000               	goto	l2836
   880  001E4A                     l2836:
   881                           
   882                           ;Lab5p6.c: 79: {
   883                           ;Lab5p6.c: 80: Select_ADC_Channel(0);
   884  001E4A  0E00               	movlw	0
   885  001E4C  EC1B  F017         	call	_Select_ADC_Channel
   886                           
   887                           ;Lab5p6.c: 81: int num_step = Get_Full_ADC();
   888  001E50  ECB5  F016         	call	_Get_Full_ADC	;wreg free
   889  001E54  C001  F071         	movff	?_Get_Full_ADC,main@num_step
   890  001E58  C002  F072         	movff	?_Get_Full_ADC+1,main@num_step+1
   891                           
   892                           ;Lab5p6.c: 82: float voltage_mv = num_step * 4.0;
   893  001E5C  C071  F009         	movff	main@num_step,___awtoft@c
   894  001E60  C072  F00A         	movff	main@num_step+1,___awtoft@c+1
   895  001E64  EC6E  F016         	call	___awtoft	;wreg free
   896  001E68  C009  F015         	movff	?___awtoft,___ftmul@f1
   897  001E6C  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
   898  001E70  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
   899  001E74  0E00               	movlw	0
   900  001E76  6E18               	movwf	___ftmul@f2,c
   901  001E78  0E80               	movlw	128
   902  001E7A  6E19               	movwf	___ftmul@f2+1,c
   903  001E7C  0E40               	movlw	64
   904  001E7E  6E1A               	movwf	___ftmul@f2+2,c
   905  001E80  ECFB  F011         	call	___ftmul	;wreg free
   906  001E84  C015  F06C         	movff	?___ftmul,main@voltage_mv
   907  001E88  C016  F06D         	movff	?___ftmul+1,main@voltage_mv+1
   908  001E8C  C017  F06E         	movff	?___ftmul+2,main@voltage_mv+2
   909                           
   910                           ;Lab5p6.c: 83: float temperature_C = (1035.0 - voltage_mv) / 5.50;
   911  001E90  0E60               	movlw	96
   912  001E92  6E31               	movwf	___ftadd@f2,c
   913  001E94  0E81               	movlw	129
   914  001E96  6E32               	movwf	___ftadd@f2+1,c
   915  001E98  0E44               	movlw	68
   916  001E9A  6E33               	movwf	___ftadd@f2+2,c
   917  001E9C  C06C  F001         	movff	main@voltage_mv,___ftneg@f1
   918  001EA0  C06D  F002         	movff	main@voltage_mv+1,___ftneg@f1+1
   919  001EA4  C06E  F003         	movff	main@voltage_mv+2,___ftneg@f1+2
   920  001EA8  ECC8  F016         	call	___ftneg	;wreg free
   921  001EAC  C001  F02E         	movff	?___ftneg,___ftadd@f1
   922  001EB0  C002  F02F         	movff	?___ftneg+1,___ftadd@f1+1
   923  001EB4  C003  F030         	movff	?___ftneg+2,___ftadd@f1+2
   924  001EB8  EC0C  F010         	call	___ftadd	;wreg free
   925  001EBC  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
   926  001EC0  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
   927  001EC4  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
   928  001EC8  0E00               	movlw	0
   929  001ECA  6E3D               	movwf	___ftdiv@f2,c
   930  001ECC  0EB0               	movlw	176
   931  001ECE  6E3E               	movwf	___ftdiv@f2+1,c
   932  001ED0  0E40               	movlw	64
   933  001ED2  6E3F               	movwf	___ftdiv@f2+2,c
   934  001ED4  ECEA  F012         	call	___ftdiv	;wreg free
   935  001ED8  C03A  F064         	movff	?___ftdiv,main@temperature_C
   936  001EDC  C03B  F065         	movff	?___ftdiv+1,main@temperature_C+1
   937  001EE0  C03C  F066         	movff	?___ftdiv+2,main@temperature_C+2
   938                           
   939                           ;Lab5p6.c: 84: float temperature_F = 1.80 * temperature_C + 32.0;
   940  001EE4  0E66               	movlw	102
   941  001EE6  6E18               	movwf	___ftmul@f2,c
   942  001EE8  0EE6               	movlw	230
   943  001EEA  6E19               	movwf	___ftmul@f2+1,c
   944  001EEC  0E3F               	movlw	63
   945  001EEE  6E1A               	movwf	___ftmul@f2+2,c
   946  001EF0  C064  F015         	movff	main@temperature_C,___ftmul@f1
   947  001EF4  C065  F016         	movff	main@temperature_C+1,___ftmul@f1+1
   948  001EF8  C066  F017         	movff	main@temperature_C+2,___ftmul@f1+2
   949  001EFC  ECFB  F011         	call	___ftmul	;wreg free
   950  001F00  C015  F02E         	movff	?___ftmul,___ftadd@f1
   951  001F04  C016  F02F         	movff	?___ftmul+1,___ftadd@f1+1
   952  001F08  C017  F030         	movff	?___ftmul+2,___ftadd@f1+2
   953  001F0C  0E00               	movlw	0
   954  001F0E  6E31               	movwf	___ftadd@f2,c
   955  001F10  0E00               	movlw	0
   956  001F12  6E32               	movwf	___ftadd@f2+1,c
   957  001F14  0E42               	movlw	66
   958  001F16  6E33               	movwf	___ftadd@f2+2,c
   959  001F18  EC0C  F010         	call	___ftadd	;wreg free
   960  001F1C  C02E  F067         	movff	?___ftadd,main@temperature_F
   961  001F20  C02F  F068         	movff	?___ftadd+1,main@temperature_F+1
   962  001F24  C030  F069         	movff	?___ftadd+2,main@temperature_F+2
   963                           
   964                           ;Lab5p6.c: 85: int tempF = (int)temperature_F;
   965  001F28  C067  F02B         	movff	main@temperature_F,___fttol@f1
   966  001F2C  C068  F02C         	movff	main@temperature_F+1,___fttol@f1+1
   967  001F30  C069  F02D         	movff	main@temperature_F+2,___fttol@f1+2
   968  001F34  EC77  F012         	call	___fttol	;wreg free
   969  001F38  C02B  F073         	movff	?___fttol,main@tempF
   970  001F3C  C02C  F074         	movff	?___fttol+1,main@tempF+1
   971                           
   972                           ;Lab5p6.c: 86: char U = tempF / 10;
   973  001F40  C073  F007         	movff	main@tempF,___awdiv@dividend
   974  001F44  C074  F008         	movff	main@tempF+1,___awdiv@dividend+1
   975  001F48  0E00               	movlw	0
   976  001F4A  6E0A               	movwf	___awdiv@divisor+1,c
   977  001F4C  0E0A               	movlw	10
   978  001F4E  6E09               	movwf	___awdiv@divisor,c
   979  001F50  EC59  F014         	call	___awdiv	;wreg free
   980  001F54  5007               	movf	?___awdiv,w,c
   981  001F56  6E6A               	movwf	main@U,c
   982                           
   983                           ;Lab5p6.c: 87: char L = tempF % 10;
   984  001F58  C073  F001         	movff	main@tempF,___awmod@dividend
   985  001F5C  C074  F002         	movff	main@tempF+1,___awmod@dividend+1
   986  001F60  0E00               	movlw	0
   987  001F62  6E04               	movwf	___awmod@divisor+1,c
   988  001F64  0E0A               	movlw	10
   989  001F66  6E03               	movwf	___awmod@divisor,c
   990  001F68  ECEA  F014         	call	___awmod	;wreg free
   991  001F6C  5001               	movf	?___awmod,w,c
   992  001F6E  6E6B               	movwf	main@L,c
   993                           
   994                           ;Lab5p6.c: 88: Display_Upper_Digit(U);
   995  001F70  506A               	movf	main@U,w,c
   996  001F72  EC4E  F016         	call	_Display_Upper_Digit
   997                           
   998                           ;Lab5p6.c: 89: Display_Lower_Digit(L);
   999  001F76  506B               	movf	main@L,w,c
  1000  001F78  ECEC  F016         	call	_Display_Lower_Digit
  1001                           
  1002                           ;Lab5p6.c: 90: printf("Voltage = %f (mV) \r\n", voltage_mv);
  1003  001F7C  0EA5               	movlw	low STR_1
  1004  001F7E  6E40               	movwf	printf@f,c
  1005  001F80  0E10               	movlw	high STR_1
  1006  001F82  6E41               	movwf	printf@f+1,c
  1007  001F84  C06C  F042         	movff	main@voltage_mv,?_printf+2
  1008  001F88  C06D  F043         	movff	main@voltage_mv+1,?_printf+3
  1009  001F8C  C06E  F044         	movff	main@voltage_mv+2,?_printf+4
  1010  001F90  EC5E  F008         	call	_printf	;wreg free
  1011                           
  1012                           ;Lab5p6.c: 91: printf("Temperature = %d F \r\n\n", tempF);
  1013  001F94  0E77               	movlw	low STR_2
  1014  001F96  6E40               	movwf	printf@f,c
  1015  001F98  0E10               	movlw	high STR_2
  1016  001F9A  6E41               	movwf	printf@f+1,c
  1017  001F9C  C073  F042         	movff	main@tempF,?_printf+2
  1018  001FA0  C074  F043         	movff	main@tempF+1,?_printf+3
  1019  001FA4  EC5E  F008         	call	_printf	;wreg free
  1020                           
  1021                           ;Lab5p6.c: 92: DO_DISPLAY_D1(tempF);
  1022  001FA8  C073  F001         	movff	main@tempF,DO_DISPLAY_D1@temp
  1023  001FAC  C074  F002         	movff	main@tempF+1,DO_DISPLAY_D1@temp+1
  1024  001FB0  ECBE  F013         	call	_DO_DISPLAY_D1	;wreg free
  1025                           
  1026                           ;Lab5p6.c: 93: DO_DISPLAY_D2(tempF);
  1027  001FB4  C073  F00F         	movff	main@tempF,DO_DISPLAY_D2@temp
  1028  001FB8  C074  F010         	movff	main@tempF+1,DO_DISPLAY_D2@temp+1
  1029  001FBC  EC9B  F015         	call	_DO_DISPLAY_D2	;wreg free
  1030                           
  1031                           ;Lab5p6.c: 95: Select_ADC_Channel(1);
  1032  001FC0  0E01               	movlw	1
  1033  001FC2  EC1B  F017         	call	_Select_ADC_Channel
  1034                           
  1035                           ;Lab5p6.c: 96: int num_step = Get_Full_ADC();
  1036  001FC6  ECB5  F016         	call	_Get_Full_ADC	;wreg free
  1037  001FCA  C001  F071         	movff	?_Get_Full_ADC,main@num_step
  1038  001FCE  C002  F072         	movff	?_Get_Full_ADC+1,main@num_step+1
  1039                           
  1040                           ;Lab5p6.c: 97: int voltage_mv1 = num_step * 4;
  1041  001FD2  C071  F062         	movff	main@num_step,??_main
  1042  001FD6  C072  F063         	movff	main@num_step+1,??_main+1
  1043  001FDA  90D8               	bcf	status,0,c
  1044  001FDC  3662               	rlcf	??_main,f,c
  1045  001FDE  3663               	rlcf	??_main+1,f,c
  1046  001FE0  90D8               	bcf	status,0,c
  1047  001FE2  3662               	rlcf	??_main,f,c
  1048  001FE4  3663               	rlcf	??_main+1,f,c
  1049  001FE6  C062  F06F         	movff	??_main,main@voltage_mv1
  1050  001FEA  C063  F070         	movff	??_main+1,main@voltage_mv1+1
  1051                           
  1052                           ;Lab5p6.c: 98: printf("Light Volt = %d mV \r\n\n", voltage_mv1);
  1053  001FEE  0E8E               	movlw	low STR_3
  1054  001FF0  6E40               	movwf	printf@f,c
  1055  001FF2  0E10               	movlw	high STR_3
  1056  001FF4  6E41               	movwf	printf@f+1,c
  1057  001FF6  C06F  F042         	movff	main@voltage_mv1,?_printf+2
  1058  001FFA  C070  F043         	movff	main@voltage_mv1+1,?_printf+3
  1059  001FFE  EC5E  F008         	call	_printf	;wreg free
  1060                           
  1061                           ;Lab5p6.c: 99: DO_DISPLAY_D3(voltage_mv1);
  1062  002002  C06F  F001         	movff	main@voltage_mv1,DO_DISPLAY_D3@voltage
  1063  002006  C070  F002         	movff	main@voltage_mv1+1,DO_DISPLAY_D3@voltage+1
  1064  00200A  EC02  F016         	call	_DO_DISPLAY_D3	;wreg free
  1065                           
  1066                           ;Lab5p6.c: 100: WAIT_1_SEC();
  1067  00200E  ECDA  F016         	call	_WAIT_1_SEC	;wreg free
  1068  002012  D71B               	goto	l2836
  1069  002014  EF00  F000         	goto	start
  1070  002018                     __end_of_main:
  1071                           	opt stack 0
  1072                           tblptru	equ	0xFF8
  1073                           tblptrh	equ	0xFF7
  1074                           tblptrl	equ	0xFF6
  1075                           tablat	equ	0xFF5
  1076                           postinc0	equ	0xFEE
  1077                           postdec1	equ	0xFE5
  1078                           fsr1l	equ	0xFE1
  1079                           status	equ	0xFD8
  1080                           
  1081 ;; *************** function _printf *****************
  1082 ;; Defined at:
  1083 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1084 ;; Parameters:    Size  Location     Type
  1085 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1086 ;;		 -> STR_3(23), STR_2(23), STR_1(21), 
  1087 ;; Auto vars:     Size  Location     Type
  1088 ;;  tmpval          4   89[COMRAM] struct .
  1089 ;;  val             4   83[COMRAM] unsigned long 
  1090 ;;  fval            3   93[COMRAM] unsigned long 
  1091 ;;  cp              3    0        PTR const unsigned char 
  1092 ;;  exp             2   87[COMRAM] int 
  1093 ;;  prec            2   81[COMRAM] int 
  1094 ;;  flag            2   79[COMRAM] unsigned short 
  1095 ;;  ap              2   77[COMRAM] PTR void [1]
  1096 ;;		 -> ?_printf(2), 
  1097 ;;  len             2    0        unsigned int 
  1098 ;;  width           2    0        int 
  1099 ;;  c               1   96[COMRAM] char 
  1100 ;;  d               1    0        unsigned char 
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  2   63[COMRAM] int 
  1103 ;; Registers used:
  1104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1110 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1111 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1112 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1113 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1114 ;;Total ram usage:       34 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; Hardware stack levels required when called:    3
  1117 ;; This function calls:
  1118 ;;		___awdiv
  1119 ;;		___ftadd
  1120 ;;		___ftge
  1121 ;;		___ftmul
  1122 ;;		___ftneg
  1123 ;;		___ftsub
  1124 ;;		___fttol
  1125 ;;		___lldiv
  1126 ;;		___llmod
  1127 ;;		___lltoft
  1128 ;;		___wmul
  1129 ;;		__div_to_l_
  1130 ;;		__tdiv_to_l_
  1131 ;;		_fround
  1132 ;;		_putch
  1133 ;;		_scale
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           	psect	text1
  1140  0010BC                     __ptext1:
  1141                           	opt stack 0
  1142  0010BC                     _printf:
  1143                           	opt stack 27
  1144                           
  1145                           ;doprnt.c: 466: va_list ap;
  1146                           ;doprnt.c: 499: signed char c;
  1147                           ;doprnt.c: 501: int width;
  1148                           ;doprnt.c: 504: int prec;
  1149                           ;doprnt.c: 508: unsigned short flag;
  1150                           ;doprnt.c: 515: char d;
  1151                           ;doprnt.c: 516: double fval;
  1152                           ;doprnt.c: 517: int exp;
  1153                           ;doprnt.c: 523: union {
  1154                           ;doprnt.c: 524: unsigned long vd;
  1155                           ;doprnt.c: 525: double integ;
  1156                           ;doprnt.c: 526: } tmpval;
  1157                           ;doprnt.c: 528: unsigned long val;
  1158                           ;doprnt.c: 529: unsigned len;
  1159                           ;doprnt.c: 530: const char * cp;
  1160                           ;doprnt.c: 533: *ap = __va_start();
  1161                           
  1162                           ;incstack = 0
  1163  0010BC  0E42               	movlw	low (?_printf+2)
  1164  0010BE  6E4E               	movwf	printf@ap,c
  1165  0010C0  0E00               	movlw	high (?_printf+2)
  1166  0010C2  6E4F               	movwf	printf@ap+1,c
  1167                           
  1168                           ;doprnt.c: 536: while(c = *f++) {
  1169  0010C4  D393               	goto	l2710
  1170  0010C6                     l2530:
  1171                           
  1172                           ;doprnt.c: 538: if(c != '%')
  1173  0010C6  0E25               	movlw	37
  1174  0010C8  1861               	xorwf	printf@c,w,c
  1175  0010CA  B4D8               	btfsc	status,2,c
  1176  0010CC  D004               	goto	l2534
  1177                           
  1178                           ;doprnt.c: 540: {
  1179                           ;doprnt.c: 541: (putch(c) );
  1180  0010CE  5061               	movf	printf@c,w,c
  1181  0010D0  EC0D  F017         	call	_putch
  1182                           
  1183                           ;doprnt.c: 542: continue;
  1184  0010D4  D38B               	goto	l2710
  1185  0010D6                     l2534:
  1186                           
  1187                           ;doprnt.c: 543: }
  1188                           ;doprnt.c: 548: flag = 0;
  1189  0010D6  0E00               	movlw	0
  1190  0010D8  6E51               	movwf	printf@flag+1,c
  1191  0010DA  0E00               	movlw	0
  1192  0010DC  6E50               	movwf	printf@flag,c
  1193                           
  1194                           ;doprnt.c: 635: switch(c = *f++) {
  1195  0010DE  D005               	goto	l2540
  1196                           
  1197                           ;doprnt.c: 638: goto alldone;
  1198                           
  1199                           ;doprnt.c: 637: case 0:
  1200  0010E0  D393               	goto	l249
  1201  0010E2                     l2536:
  1202                           
  1203                           ;doprnt.c: 663: flag |= 0x400;
  1204  0010E2  8451               	bsf	printf@flag+1,2,c
  1205                           
  1206                           ;doprnt.c: 698: case 'i':
  1207                           ;doprnt.c: 699: break;
  1208                           
  1209                           ;doprnt.c: 697: case 'd':
  1210                           
  1211                           ;doprnt.c: 664: break;
  1212  0010E4  D018               	goto	l2542
  1213                           
  1214                           ;doprnt.c: 813: continue;
  1215                           
  1216                           ;doprnt.c: 802: default:
  1217  0010E6  D382               	goto	l2710
  1218                           
  1219                           ;doprnt.c: 822: }
  1220  0010E8  D016               	goto	l2542
  1221  0010EA                     l2540:
  1222  0010EA  C040  FFF6         	movff	printf@f,tblptrl
  1223  0010EE  C041  FFF7         	movff	printf@f+1,tblptrh
  1224  0010F2  4A40               	infsnz	printf@f,f,c
  1225  0010F4  2A41               	incf	printf@f+1,f,c
  1226  0010F6                     	if	0	;tblptru may be non-zero
  1227  0010F6                     	endif
  1228  0010F6                     	if	0	;tblptru may be non-zero
  1229  0010F6                     	endif
  1230  0010F6  0008               	tblrd		*
  1231  0010F8  CFF5 F061          	movff	tablat,printf@c
  1232  0010FC  5061               	movf	printf@c,w,c
  1233                           
  1234                           ; Switch size 1, requested type "space"
  1235                           ; Number of cases is 4, Range of values is 0 to 105
  1236                           ; switch strategies available:
  1237                           ; Name         Instructions Cycles
  1238                           ; simple_byte           13     7 (average)
  1239                           ;	Chosen strategy is simple_byte
  1240  0010FE  0A00               	xorlw	0	; case 0
  1241  001100  B4D8               	btfsc	status,2,c
  1242  001102  D382               	goto	l249
  1243  001104  0A64               	xorlw	100	; case 100
  1244  001106  B4D8               	btfsc	status,2,c
  1245  001108  D006               	goto	l2542
  1246  00110A  0A02               	xorlw	2	; case 102
  1247  00110C  B4D8               	btfsc	status,2,c
  1248  00110E  D7E9               	goto	l2536
  1249  001110  0A0F               	xorlw	15	; case 105
  1250  001112  A4D8               	btfss	status,2,c
  1251  001114  D36B               	goto	l2710
  1252  001116                     l2542:
  1253                           
  1254                           ;doprnt.c: 825: if(flag & (0x700)) {
  1255  001116  0E07               	movlw	7
  1256  001118  1451               	andwf	printf@flag+1,w,c
  1257  00111A  B4D8               	btfsc	status,2,c
  1258  00111C  D2CA               	goto	l2674
  1259                           
  1260                           ;doprnt.c: 829: prec = 6;
  1261  00111E  0E00               	movlw	0
  1262  001120  6E53               	movwf	printf@prec+1,c
  1263  001122  0E06               	movlw	6
  1264  001124  6E52               	movwf	printf@prec,c
  1265                           
  1266                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1267  001126  C04E  FFD9         	movff	printf@ap,fsr2l
  1268  00112A  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1269  00112E  CFDE F05E          	movff	postinc2,printf@fval
  1270  001132  CFDE F05F          	movff	postinc2,printf@fval+1
  1271  001136  CFDD F060          	movff	postdec2,printf@fval+2
  1272  00113A  0E03               	movlw	3
  1273  00113C  264E               	addwf	printf@ap,f,c
  1274  00113E  0E00               	movlw	0
  1275  001140  224F               	addwfc	printf@ap+1,f,c
  1276                           
  1277                           ;doprnt.c: 831: if(fval < 0.0) {
  1278  001142  AE60               	btfss	printf@fval+2,7,c
  1279  001144  D011               	goto	l2556
  1280                           
  1281                           ;doprnt.c: 832: fval = -fval;
  1282  001146  C05E  F001         	movff	printf@fval,___ftneg@f1
  1283  00114A  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  1284  00114E  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  1285  001152  ECC8  F016         	call	___ftneg	;wreg free
  1286  001156  C001  F05E         	movff	?___ftneg,printf@fval
  1287  00115A  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  1288  00115E  C003  F060         	movff	?___ftneg+2,printf@fval+2
  1289                           
  1290                           ;doprnt.c: 833: flag |= 0x03;
  1291  001162  0E03               	movlw	3
  1292  001164  1250               	iorwf	printf@flag,f,c
  1293  001166  D000               	goto	l2556
  1294  001168                     l2556:
  1295                           
  1296                           ;doprnt.c: 834: }
  1297                           ;doprnt.c: 835: exp = 0;
  1298  001168  0E00               	movlw	0
  1299  00116A  6E59               	movwf	printf@exp+1,c
  1300  00116C  0E00               	movlw	0
  1301  00116E  6E58               	movwf	printf@exp,c
  1302                           
  1303                           ;doprnt.c: 836: if( fval!=0) {
  1304  001170  505E               	movf	printf@fval,w,c
  1305  001172  105F               	iorwf	printf@fval+1,w,c
  1306  001174  1060               	iorwf	printf@fval+2,w,c
  1307  001176  B4D8               	btfsc	status,2,c
  1308  001178  D085               	goto	l2584
  1309                           
  1310                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1311  00117A  0E82               	movlw	130
  1312  00117C  6E45               	movwf	??_printf& (0+255),c
  1313  00117E  0EFF               	movlw	255
  1314  001180  6E46               	movwf	(??_printf+1)& (0+255),c
  1315  001182  C05E  F047         	movff	printf@fval,??_printf+2
  1316  001186  C05F  F048         	movff	printf@fval+1,??_printf+3
  1317  00118A  C060  F049         	movff	printf@fval+2,??_printf+4
  1318  00118E  C061  F04A         	movff	printf@fval+3,??_printf+5
  1319  001192  0E10               	movlw	16
  1320  001194  D005               	goto	u2650
  1321  001196                     u2655:
  1322  001196  90D8               	bcf	status,0,c
  1323  001198  324A               	rrcf	??_printf+5,f,c
  1324  00119A  3249               	rrcf	??_printf+4,f,c
  1325  00119C  3248               	rrcf	??_printf+3,f,c
  1326  00119E  3247               	rrcf	??_printf+2,f,c
  1327  0011A0                     u2650:
  1328  0011A0  2EE8               	decfsz	wreg,f,c
  1329  0011A2  D7F9               	goto	u2655
  1330  0011A4  5047               	movf	??_printf+2,w,c
  1331  0011A6  2445               	addwf	??_printf,w,c
  1332  0011A8  6E58               	movwf	printf@exp,c
  1333  0011AA  0E00               	movlw	0
  1334  0011AC  2046               	addwfc	??_printf+1,w,c
  1335  0011AE  6E59               	movwf	printf@exp+1,c
  1336                           
  1337                           ;doprnt.c: 838: exp--;
  1338  0011B0  0658               	decf	printf@exp,f,c
  1339  0011B2  A0D8               	btfss	status,0,c
  1340  0011B4  0659               	decf	printf@exp+1,f,c
  1341                           
  1342                           ;doprnt.c: 839: exp *= 3;
  1343  0011B6  C058  F00F         	movff	printf@exp,___wmul@multiplier
  1344  0011BA  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1345  0011BE  0E00               	movlw	0
  1346  0011C0  6E12               	movwf	___wmul@multiplicand+1,c
  1347  0011C2  0E03               	movlw	3
  1348  0011C4  6E11               	movwf	___wmul@multiplicand,c
  1349  0011C6  ECA1  F016         	call	___wmul	;wreg free
  1350  0011CA  C00F  F058         	movff	?___wmul,printf@exp
  1351  0011CE  C010  F059         	movff	?___wmul+1,printf@exp+1
  1352                           
  1353                           ;doprnt.c: 840: exp /= 10;
  1354  0011D2  C058  F007         	movff	printf@exp,___awdiv@dividend
  1355  0011D6  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1356  0011DA  0E00               	movlw	0
  1357  0011DC  6E0A               	movwf	___awdiv@divisor+1,c
  1358  0011DE  0E0A               	movlw	10
  1359  0011E0  6E09               	movwf	___awdiv@divisor,c
  1360  0011E2  EC59  F014         	call	___awdiv	;wreg free
  1361  0011E6  C007  F058         	movff	?___awdiv,printf@exp
  1362  0011EA  C008  F059         	movff	?___awdiv+1,printf@exp+1
  1363                           
  1364                           ;doprnt.c: 841: if(exp < 0)
  1365  0011EE  AE59               	btfss	printf@exp+1,7,c
  1366  0011F0  D004               	goto	l2572
  1367                           
  1368                           ;doprnt.c: 842: exp--;
  1369  0011F2  0658               	decf	printf@exp,f,c
  1370  0011F4  A0D8               	btfss	status,0,c
  1371  0011F6  0659               	decf	printf@exp+1,f,c
  1372  0011F8  D000               	goto	l2572
  1373  0011FA                     l2572:
  1374                           
  1375                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1376  0011FA  5058               	movf	printf@exp,w,c
  1377  0011FC  0800               	sublw	0
  1378  0011FE  EC05  F00C         	call	_scale
  1379  001202  C024  F05A         	movff	?_scale,printf@tmpval
  1380  001206  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1381  00120A  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1382                           
  1383                           ;doprnt.c: 847: tmpval.integ *= fval;
  1384  00120E  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  1385  001212  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1386  001216  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1387  00121A  C05E  F018         	movff	printf@fval,___ftmul@f2
  1388  00121E  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1389  001222  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1390  001226  ECFB  F011         	call	___ftmul	;wreg free
  1391  00122A  C015  F05A         	movff	?___ftmul,printf@tmpval
  1392  00122E  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  1393  001232  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  1394                           
  1395                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1396  001236  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1397  00123A  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1398  00123E  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1399  001242  0E00               	movlw	0
  1400  001244  6E04               	movwf	___ftge@ff2,c
  1401  001246  0E80               	movlw	128
  1402  001248  6E05               	movwf	___ftge@ff2+1,c
  1403  00124A  0E3F               	movlw	63
  1404  00124C  6E06               	movwf	___ftge@ff2+2,c
  1405  00124E  EC0E  F014         	call	___ftge	;wreg free
  1406  001252  B0D8               	btfsc	status,0,c
  1407  001254  D004               	goto	l2580
  1408                           
  1409                           ;doprnt.c: 849: exp--;
  1410  001256  0658               	decf	printf@exp,f,c
  1411  001258  A0D8               	btfss	status,0,c
  1412  00125A  0659               	decf	printf@exp+1,f,c
  1413  00125C  D013               	goto	l2584
  1414  00125E                     l2580:
  1415                           
  1416                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1417  00125E  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1418  001262  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1419  001266  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1420  00126A  0E00               	movlw	0
  1421  00126C  6E04               	movwf	___ftge@ff2,c
  1422  00126E  0E20               	movlw	32
  1423  001270  6E05               	movwf	___ftge@ff2+1,c
  1424  001272  0E41               	movlw	65
  1425  001274  6E06               	movwf	___ftge@ff2+2,c
  1426  001276  EC0E  F014         	call	___ftge	;wreg free
  1427  00127A  A0D8               	btfss	status,0,c
  1428  00127C  D003               	goto	l2584
  1429                           
  1430                           ;doprnt.c: 851: exp++;
  1431  00127E  4A58               	infsnz	printf@exp,f,c
  1432  001280  2A59               	incf	printf@exp+1,f,c
  1433  001282  D000               	goto	l2584
  1434  001284                     l2584:
  1435                           
  1436                           ;doprnt.c: 852: }
  1437                           ;doprnt.c: 1112: if(prec <= 12)
  1438  001284  BE53               	btfsc	printf@prec+1,7,c
  1439  001286  D006               	goto	l2586
  1440  001288  5053               	movf	printf@prec+1,w,c
  1441  00128A  E11C               	bnz	l2588
  1442  00128C  0E0D               	movlw	13
  1443  00128E  5C52               	subwf	printf@prec,w,c
  1444  001290  B0D8               	btfsc	status,0,c
  1445  001292  D018               	goto	l2588
  1446  001294                     l2586:
  1447                           
  1448                           ;doprnt.c: 1113: fval += fround(prec);
  1449  001294  C05E  F02E         	movff	printf@fval,___ftadd@f1
  1450  001298  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1451  00129C  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  1452  0012A0  5052               	movf	printf@prec,w,c
  1453  0012A2  ECF5  F00D         	call	_fround
  1454  0012A6  C024  F031         	movff	?_fround,___ftadd@f2
  1455  0012AA  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1456  0012AE  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1457  0012B2  EC0C  F010         	call	___ftadd	;wreg free
  1458  0012B6  C02E  F05E         	movff	?___ftadd,printf@fval
  1459  0012BA  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  1460  0012BE  C030  F060         	movff	?___ftadd+2,printf@fval+2
  1461  0012C2  D000               	goto	l2588
  1462  0012C4                     l2588:
  1463                           
  1464                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1465  0012C4  BE59               	btfsc	printf@exp+1,7,c
  1466  0012C6  D006               	goto	l2590
  1467  0012C8  5059               	movf	printf@exp+1,w,c
  1468  0012CA  E120               	bnz	l2596
  1469  0012CC  0E0A               	movlw	10
  1470  0012CE  5C58               	subwf	printf@exp,w,c
  1471  0012D0  B0D8               	btfsc	status,0,c
  1472  0012D2  D01C               	goto	l2596
  1473  0012D4                     l2590:
  1474  0012D4  505E               	movf	printf@fval,w,c
  1475  0012D6  105F               	iorwf	printf@fval+1,w,c
  1476  0012D8  1060               	iorwf	printf@fval+2,w,c
  1477  0012DA  B4D8               	btfsc	status,2,c
  1478  0012DC  D06D               	goto	l2610
  1479  0012DE  C05E  F02B         	movff	printf@fval,___fttol@f1
  1480  0012E2  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1481  0012E6  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1482  0012EA  EC77  F012         	call	___fttol	;wreg free
  1483  0012EE  502B               	movf	?___fttol,w,c
  1484  0012F0  102C               	iorwf	?___fttol+1,w,c
  1485  0012F2  102D               	iorwf	?___fttol+2,w,c
  1486  0012F4  102E               	iorwf	?___fttol+3,w,c
  1487  0012F6  B4D8               	btfsc	status,2,c
  1488  0012F8  BE59               	btfsc	printf@exp+1,7,c
  1489  0012FA  D05E               	goto	l2610
  1490  0012FC  5059               	movf	printf@exp+1,w,c
  1491  0012FE  E106               	bnz	l2596
  1492  001300  0E02               	movlw	2
  1493  001302  5C58               	subwf	printf@exp,w,c
  1494  001304  B0D8               	btfsc	status,0,c
  1495  001306  D002               	goto	l2596
  1496  001308  D057               	goto	l2610
  1497  00130A  D000               	goto	l2596
  1498  00130C                     l2596:
  1499                           
  1500                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1501  00130C  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1502  001310  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1503  001314  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1504  001318  0E70               	movlw	112
  1505  00131A  6E04               	movwf	___ftge@ff2,c
  1506  00131C  0E89               	movlw	137
  1507  00131E  6E05               	movwf	___ftge@ff2+1,c
  1508  001320  0E40               	movlw	64
  1509  001322  6E06               	movwf	___ftge@ff2+2,c
  1510  001324  EC0E  F014         	call	___ftge	;wreg free
  1511  001328  B0D8               	btfsc	status,0,c
  1512  00132A  D002               	goto	l2600
  1513                           
  1514                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1515  00132C  0EF7               	movlw	247
  1516  00132E  D001               	goto	L1
  1517  001330                     l2600:
  1518                           
  1519                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1520  001330  0EF8               	movlw	248
  1521  001332                     L1:
  1522  001332  2658               	addwf	printf@exp,f,c
  1523  001334  0EFF               	movlw	255
  1524  001336  2259               	addwfc	printf@exp+1,f,c
  1525  001338  D000               	goto	l2602
  1526  00133A                     l2602:
  1527                           
  1528                           ;doprnt.c: 1124: }
  1529                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1530  00133A  5058               	movf	printf@exp,w,c
  1531  00133C  EC05  F00C         	call	_scale
  1532  001340  C024  F05A         	movff	?_scale,printf@tmpval
  1533  001344  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1534  001348  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1535                           
  1536                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1537  00134C  D017               	goto	l2606
  1538  00134E  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  1539  001352  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1540  001356  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1541  00135A  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  1542  00135E  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1543  001362  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1544  001366  EC76  F011         	call	__div_to_l_	;wreg free
  1545  00136A  C001  F054         	movff	?__div_to_l_,printf@val
  1546  00136E  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  1547  001372  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  1548  001376  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  1549  00137A  D017               	goto	l2608
  1550  00137C                     l2606:
  1551  00137C  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1552  001380  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1553  001384  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1554  001388  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1555  00138C  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1556  001390  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1557  001394  ECEE  F010         	call	__tdiv_to_l_	;wreg free
  1558  001398  C001  F054         	movff	?__tdiv_to_l_,printf@val
  1559  00139C  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  1560  0013A0  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  1561  0013A4  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  1562  0013A8  D000               	goto	l2608
  1563  0013AA                     l2608:
  1564                           
  1565                           ;doprnt.c: 1129: fval = 0.0;
  1566  0013AA  0E00               	movlw	0
  1567  0013AC  6E5E               	movwf	printf@fval,c
  1568  0013AE  0E00               	movlw	0
  1569  0013B0  6E5F               	movwf	printf@fval+1,c
  1570  0013B2  0E00               	movlw	0
  1571  0013B4  6E60               	movwf	printf@fval+2,c
  1572                           
  1573                           ;doprnt.c: 1130: } else {
  1574  0013B6  D033               	goto	l2614
  1575  0013B8                     l2610:
  1576                           
  1577                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1578  0013B8  C05E  F02B         	movff	printf@fval,___fttol@f1
  1579  0013BC  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1580  0013C0  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1581  0013C4  EC77  F012         	call	___fttol	;wreg free
  1582  0013C8  C02B  F054         	movff	?___fttol,printf@val
  1583  0013CC  C02C  F055         	movff	?___fttol+1,printf@val+1
  1584  0013D0  C02D  F056         	movff	?___fttol+2,printf@val+2
  1585  0013D4  C02E  F057         	movff	?___fttol+3,printf@val+3
  1586                           
  1587                           ;doprnt.c: 1132: fval -= (double)val;
  1588  0013D8  C05E  F03A         	movff	printf@fval,___ftsub@f1
  1589  0013DC  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1590  0013E0  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1591  0013E4  C054  F009         	movff	printf@val,___lltoft@c
  1592  0013E8  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  1593  0013EC  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  1594  0013F0  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  1595  0013F4  ECD2  F015         	call	___lltoft	;wreg free
  1596  0013F8  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1597  0013FC  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1598  001400  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1599  001404  EC2C  F016         	call	___ftsub	;wreg free
  1600  001408  C03A  F05E         	movff	?___ftsub,printf@fval
  1601  00140C  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  1602  001410  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  1603                           
  1604                           ;doprnt.c: 1133: exp = 0;
  1605  001414  0E00               	movlw	0
  1606  001416  6E59               	movwf	printf@exp+1,c
  1607  001418  0E00               	movlw	0
  1608  00141A  6E58               	movwf	printf@exp,c
  1609  00141C  D000               	goto	l2614
  1610  00141E                     l2614:
  1611                           
  1612                           ;doprnt.c: 1134: }
  1613                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1614  00141E  0E01               	movlw	1
  1615  001420  6E61               	movwf	printf@c,c
  1616  001422                     l2616:
  1617  001422  0E0A               	movlw	10
  1618  001424  1861               	xorwf	printf@c,w,c
  1619  001426  B4D8               	btfsc	status,2,c
  1620  001428  D01C               	goto	l2628
  1621  00142A  D001               	goto	l2620
  1622  00142C  D01A               	goto	l2628
  1623  00142E                     l2620:
  1624                           
  1625                           ;doprnt.c: 1137: if(val < dpowers[c])
  1626  00142E  5061               	movf	printf@c,w,c
  1627  001430  0D04               	mullw	4
  1628  001432  0E01               	movlw	low _dpowers
  1629  001434  24F3               	addwf	prodl,w,c
  1630  001436  6EF6               	movwf	tblptrl,c
  1631  001438  0E10               	movlw	high _dpowers
  1632  00143A  20F4               	addwfc	prodh,w,c
  1633  00143C  6EF7               	movwf	tblptrh,c
  1634  00143E                     	if	0	;There are less than 3 active tblptr bytes
  1635  00143E                     	endif
  1636  00143E  0009               	tblrd		*+
  1637  001440  50F5               	movf	tablat,w,c
  1638  001442  5C54               	subwf	printf@val,w,c
  1639  001444  0009               	tblrd		*+
  1640  001446  50F5               	movf	tablat,w,c
  1641  001448  5855               	subwfb	printf@val+1,w,c
  1642  00144A  0009               	tblrd		*+
  1643  00144C  50F5               	movf	tablat,w,c
  1644  00144E  5856               	subwfb	printf@val+2,w,c
  1645  001450  0009               	tblrd		*+
  1646  001452  50F5               	movf	tablat,w,c
  1647  001454  5857               	subwfb	printf@val+3,w,c
  1648  001456  A0D8               	btfss	status,0,c
  1649  001458  D004               	goto	l2628
  1650  00145A  D001               	goto	l2624
  1651                           
  1652                           ;doprnt.c: 1138: break;
  1653  00145C  D002               	goto	l2628
  1654  00145E                     l2624:
  1655  00145E  2A61               	incf	printf@c,f,c
  1656  001460  D7E0               	goto	l2616
  1657  001462                     l2628:
  1658                           
  1659                           ;doprnt.c: 1175: {
  1660                           ;doprnt.c: 1188: if(flag & 0x03)
  1661  001462  0E03               	movlw	3
  1662  001464  1450               	andwf	printf@flag,w,c
  1663  001466  6E45               	movwf	??_printf& (0+255),c
  1664  001468  0E00               	movlw	0
  1665  00146A  1451               	andwf	printf@flag+1,w,c
  1666  00146C  6E46               	movwf	(??_printf+1)& (0+255),c
  1667  00146E  5045               	movf	??_printf,w,c
  1668  001470  1046               	iorwf	??_printf+1,w,c
  1669  001472  B4D8               	btfsc	status,2,c
  1670  001474  D049               	goto	l2638
  1671                           
  1672                           ;doprnt.c: 1190: (putch('-') );
  1673  001476  0E2D               	movlw	45
  1674  001478  EC0D  F017         	call	_putch
  1675                           
  1676                           ;doprnt.c: 1195: }
  1677                           ;doprnt.c: 1196: while(c--) {
  1678  00147C  D045               	goto	l2638
  1679  00147E                     l2632:
  1680                           
  1681                           ;doprnt.c: 1200: {
  1682                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1683  00147E  C054  F001         	movff	printf@val,___lldiv@dividend
  1684  001482  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1685  001486  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1686  00148A  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1687  00148E  5061               	movf	printf@c,w,c
  1688  001490  0D04               	mullw	4
  1689  001492  0E01               	movlw	low _dpowers
  1690  001494  24F3               	addwf	prodl,w,c
  1691  001496  6EF6               	movwf	tblptrl,c
  1692  001498  0E10               	movlw	high _dpowers
  1693  00149A  20F4               	addwfc	prodh,w,c
  1694  00149C  6EF7               	movwf	tblptrh,c
  1695  00149E                     	if	0	;There are less than 3 active tblptr bytes
  1696  00149E                     	endif
  1697  00149E  0009               	tblrd		*+
  1698  0014A0  CFF5 F005          	movff	tablat,___lldiv@divisor
  1699  0014A4  0009               	tblrd		*+
  1700  0014A6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1701  0014AA  0009               	tblrd		*+
  1702  0014AC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1703  0014B0  000A               	tblrd		*-
  1704  0014B2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1705  0014B6  ECA4  F014         	call	___lldiv	;wreg free
  1706  0014BA  C001  F05A         	movff	?___lldiv,printf@tmpval
  1707  0014BE  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1708  0014C2  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1709  0014C6  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1710                           
  1711                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1712  0014CA  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1713  0014CE  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1714  0014D2  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1715  0014D6  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1716  0014DA  0E0A               	movlw	10
  1717  0014DC  6E12               	movwf	___llmod@divisor,c
  1718  0014DE  0E00               	movlw	0
  1719  0014E0  6E13               	movwf	___llmod@divisor+1,c
  1720  0014E2  0E00               	movlw	0
  1721  0014E4  6E14               	movwf	___llmod@divisor+2,c
  1722  0014E6  0E00               	movlw	0
  1723  0014E8  6E15               	movwf	___llmod@divisor+3,c
  1724  0014EA  EC2B  F015         	call	___llmod	;wreg free
  1725  0014EE  C00E  F05A         	movff	?___llmod,printf@tmpval
  1726  0014F2  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1727  0014F6  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1728  0014FA  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1729                           
  1730                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1731  0014FE  505A               	movf	printf@tmpval,w,c
  1732  001500  0F30               	addlw	48
  1733  001502  EC0D  F017         	call	_putch
  1734  001506  D000               	goto	l2638
  1735  001508                     l2638:
  1736  001508  0661               	decf	printf@c,f,c
  1737  00150A  2861               	incf	printf@c,w,c
  1738  00150C  B4D8               	btfsc	status,2,c
  1739  00150E  D009               	goto	l2644
  1740  001510  D7B6               	goto	l2632
  1741                           
  1742                           ;doprnt.c: 1204: }
  1743                           ;doprnt.c: 1206: }
  1744                           ;doprnt.c: 1207: while(exp > 0) {
  1745  001512  D007               	goto	l2644
  1746  001514                     l2640:
  1747                           
  1748                           ;doprnt.c: 1208: (putch('0') );
  1749  001514  0E30               	movlw	48
  1750  001516  EC0D  F017         	call	_putch
  1751                           
  1752                           ;doprnt.c: 1209: exp--;
  1753  00151A  0658               	decf	printf@exp,f,c
  1754  00151C  A0D8               	btfss	status,0,c
  1755  00151E  0659               	decf	printf@exp+1,f,c
  1756  001520  D000               	goto	l2644
  1757  001522                     l2644:
  1758  001522  BE59               	btfsc	printf@exp+1,7,c
  1759  001524  D005               	goto	l2646
  1760  001526  5059               	movf	printf@exp+1,w,c
  1761  001528  E1F5               	bnz	l2640
  1762  00152A  0458               	decf	printf@exp,w,c
  1763  00152C  B0D8               	btfsc	status,0,c
  1764  00152E  D7F2               	goto	l2640
  1765  001530                     l2646:
  1766                           
  1767                           ;doprnt.c: 1210: }
  1768                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1769  001530  BE53               	btfsc	printf@prec+1,7,c
  1770  001532  D009               	goto	l231
  1771  001534  5053               	movf	printf@prec+1,w,c
  1772  001536  E104               	bnz	u2810
  1773  001538  0E09               	movlw	9
  1774  00153A  5C52               	subwf	printf@prec,w,c
  1775  00153C  A0D8               	btfss	status,0,c
  1776  00153E  D003               	goto	l231
  1777  001540                     u2810:
  1778                           
  1779                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1780  001540  0E08               	movlw	8
  1781  001542  6E61               	movwf	printf@c,c
  1782  001544  D003               	goto	l2650
  1783  001546                     l231:
  1784                           
  1785                           ;doprnt.c: 1213: else
  1786                           ;doprnt.c: 1214: c = prec;
  1787  001546  C052  F061         	movff	printf@prec,printf@c
  1788  00154A  D000               	goto	l2650
  1789  00154C                     l2650:
  1790                           
  1791                           ;doprnt.c: 1215: prec -= c;
  1792  00154C  5061               	movf	printf@c,w,c
  1793  00154E  5E52               	subwf	printf@prec,f,c
  1794  001550  0E00               	movlw	0
  1795  001552  BE61               	btfsc	printf@c,7,c
  1796  001554  0EFF               	movlw	255
  1797  001556  5A53               	subwfb	printf@prec+1,f,c
  1798                           
  1799                           ;doprnt.c: 1219: if(c)
  1800  001558  5061               	movf	printf@c,w,c
  1801  00155A  B4D8               	btfsc	status,2,c
  1802  00155C  D004               	goto	l2656
  1803                           
  1804                           ;doprnt.c: 1221: (putch('.') );
  1805  00155E  0E2E               	movlw	46
  1806  001560  EC0D  F017         	call	_putch
  1807  001564  D000               	goto	l2656
  1808  001566                     l2656:
  1809                           
  1810                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1811  001566  5061               	movf	printf@c,w,c
  1812  001568  EC05  F00C         	call	_scale
  1813  00156C  C024  F04B         	movff	?_scale,_printf$1266
  1814  001570  C025  F04C         	movff	?_scale+1,_printf$1266+1
  1815  001574  C026  F04D         	movff	?_scale+2,_printf$1266+2
  1816                           
  1817                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1818  001578  C05E  F018         	movff	printf@fval,___ftmul@f2
  1819  00157C  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1820  001580  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1821  001584  C04B  F015         	movff	_printf$1266,___ftmul@f1
  1822  001588  C04C  F016         	movff	_printf$1266+1,___ftmul@f1+1
  1823  00158C  C04D  F017         	movff	_printf$1266+2,___ftmul@f1+2
  1824  001590  ECFB  F011         	call	___ftmul	;wreg free
  1825  001594  C015  F02B         	movff	?___ftmul,___fttol@f1
  1826  001598  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1827  00159C  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1828  0015A0  EC77  F012         	call	___fttol	;wreg free
  1829  0015A4  C02B  F054         	movff	?___fttol,printf@val
  1830  0015A8  C02C  F055         	movff	?___fttol+1,printf@val+1
  1831  0015AC  C02D  F056         	movff	?___fttol+2,printf@val+2
  1832  0015B0  C02E  F057         	movff	?___fttol+3,printf@val+3
  1833                           
  1834                           ;doprnt.c: 1228: while(c--) {
  1835  0015B4  D06B               	goto	l2666
  1836  0015B6                     l2660:
  1837                           
  1838                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1839  0015B6  C054  F001         	movff	printf@val,___lldiv@dividend
  1840  0015BA  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1841  0015BE  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1842  0015C2  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1843  0015C6  5061               	movf	printf@c,w,c
  1844  0015C8  0D04               	mullw	4
  1845  0015CA  0E01               	movlw	low _dpowers
  1846  0015CC  24F3               	addwf	prodl,w,c
  1847  0015CE  6EF6               	movwf	tblptrl,c
  1848  0015D0  0E10               	movlw	high _dpowers
  1849  0015D2  20F4               	addwfc	prodh,w,c
  1850  0015D4  6EF7               	movwf	tblptrh,c
  1851  0015D6                     	if	0	;There are less than 3 active tblptr bytes
  1852  0015D6                     	endif
  1853  0015D6  0009               	tblrd		*+
  1854  0015D8  CFF5 F005          	movff	tablat,___lldiv@divisor
  1855  0015DC  0009               	tblrd		*+
  1856  0015DE  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1857  0015E2  0009               	tblrd		*+
  1858  0015E4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1859  0015E8  000A               	tblrd		*-
  1860  0015EA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1861  0015EE  ECA4  F014         	call	___lldiv	;wreg free
  1862  0015F2  C001  F05A         	movff	?___lldiv,printf@tmpval
  1863  0015F6  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1864  0015FA  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1865  0015FE  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1866                           
  1867                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1868  001602  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1869  001606  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1870  00160A  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1871  00160E  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1872  001612  0E0A               	movlw	10
  1873  001614  6E12               	movwf	___llmod@divisor,c
  1874  001616  0E00               	movlw	0
  1875  001618  6E13               	movwf	___llmod@divisor+1,c
  1876  00161A  0E00               	movlw	0
  1877  00161C  6E14               	movwf	___llmod@divisor+2,c
  1878  00161E  0E00               	movlw	0
  1879  001620  6E15               	movwf	___llmod@divisor+3,c
  1880  001622  EC2B  F015         	call	___llmod	;wreg free
  1881  001626  C00E  F05A         	movff	?___llmod,printf@tmpval
  1882  00162A  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1883  00162E  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1884  001632  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1885                           
  1886                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1887  001636  505A               	movf	printf@tmpval,w,c
  1888  001638  0F30               	addlw	48
  1889  00163A  EC0D  F017         	call	_putch
  1890                           
  1891                           ;doprnt.c: 1232: val %= dpowers[c];
  1892  00163E  C054  F00E         	movff	printf@val,___llmod@dividend
  1893  001642  C055  F00F         	movff	printf@val+1,___llmod@dividend+1
  1894  001646  C056  F010         	movff	printf@val+2,___llmod@dividend+2
  1895  00164A  C057  F011         	movff	printf@val+3,___llmod@dividend+3
  1896  00164E  5061               	movf	printf@c,w,c
  1897  001650  0D04               	mullw	4
  1898  001652  0E01               	movlw	low _dpowers
  1899  001654  24F3               	addwf	prodl,w,c
  1900  001656  6EF6               	movwf	tblptrl,c
  1901  001658  0E10               	movlw	high _dpowers
  1902  00165A  20F4               	addwfc	prodh,w,c
  1903  00165C  6EF7               	movwf	tblptrh,c
  1904  00165E                     	if	0	;There are less than 3 active tblptr bytes
  1905  00165E                     	endif
  1906  00165E  0009               	tblrd		*+
  1907  001660  CFF5 F012          	movff	tablat,___llmod@divisor
  1908  001664  0009               	tblrd		*+
  1909  001666  CFF5 F013          	movff	tablat,___llmod@divisor+1
  1910  00166A  0009               	tblrd		*+
  1911  00166C  CFF5 F014          	movff	tablat,___llmod@divisor+2
  1912  001670  000A               	tblrd		*-
  1913  001672  CFF5 F015          	movff	tablat,___llmod@divisor+3
  1914  001676  EC2B  F015         	call	___llmod	;wreg free
  1915  00167A  C00E  F054         	movff	?___llmod,printf@val
  1916  00167E  C00F  F055         	movff	?___llmod+1,printf@val+1
  1917  001682  C010  F056         	movff	?___llmod+2,printf@val+2
  1918  001686  C011  F057         	movff	?___llmod+3,printf@val+3
  1919  00168A  D000               	goto	l2666
  1920  00168C                     l2666:
  1921  00168C  0661               	decf	printf@c,f,c
  1922  00168E  2861               	incf	printf@c,w,c
  1923  001690  B4D8               	btfsc	status,2,c
  1924  001692  D009               	goto	l2672
  1925  001694  D790               	goto	l2660
  1926                           
  1927                           ;doprnt.c: 1233: }
  1928                           ;doprnt.c: 1235: while(prec) {
  1929  001696  D007               	goto	l2672
  1930  001698                     l2668:
  1931                           
  1932                           ;doprnt.c: 1236: (putch('0') );
  1933  001698  0E30               	movlw	48
  1934  00169A  EC0D  F017         	call	_putch
  1935                           
  1936                           ;doprnt.c: 1237: prec--;
  1937  00169E  0652               	decf	printf@prec,f,c
  1938  0016A0  A0D8               	btfss	status,0,c
  1939  0016A2  0653               	decf	printf@prec+1,f,c
  1940  0016A4  D000               	goto	l2672
  1941  0016A6                     l2672:
  1942  0016A6  5052               	movf	printf@prec,w,c
  1943  0016A8  1053               	iorwf	printf@prec+1,w,c
  1944  0016AA  B4D8               	btfsc	status,2,c
  1945  0016AC  D09F               	goto	l2710
  1946  0016AE  D7F4               	goto	l2668
  1947                           
  1948                           ;doprnt.c: 1238: }
  1949                           ;doprnt.c: 1245: continue;
  1950  0016B0  D09D               	goto	l2710
  1951  0016B2                     l2674:
  1952                           
  1953                           ;doprnt.c: 1246: }
  1954                           ;doprnt.c: 1253: {
  1955                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  1956  0016B2  C04E  FFD9         	movff	printf@ap,fsr2l
  1957  0016B6  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1958  0016BA  CFDE F054          	movff	postinc2,printf@val
  1959  0016BE  CFDD F055          	movff	postdec2,printf@val+1
  1960  0016C2  0E00               	movlw	0
  1961  0016C4  BE55               	btfsc	printf@val+1,7,c
  1962  0016C6  0EFF               	movlw	-1
  1963  0016C8  6E56               	movwf	printf@val+2,c
  1964  0016CA  6E57               	movwf	printf@val+3,c
  1965  0016CC  0E02               	movlw	2
  1966  0016CE  264E               	addwf	printf@ap,f,c
  1967  0016D0  0E00               	movlw	0
  1968  0016D2  224F               	addwfc	printf@ap+1,f,c
  1969                           
  1970                           ;doprnt.c: 1261: if((long)val < 0) {
  1971  0016D4  AE57               	btfss	printf@val+3,7,c
  1972  0016D6  D00B               	goto	l2684
  1973                           
  1974                           ;doprnt.c: 1262: flag |= 0x03;
  1975  0016D8  0E03               	movlw	3
  1976  0016DA  1250               	iorwf	printf@flag,f,c
  1977                           
  1978                           ;doprnt.c: 1263: val = -val;
  1979  0016DC  1E57               	comf	printf@val+3,f,c
  1980  0016DE  1E56               	comf	printf@val+2,f,c
  1981  0016E0  1E55               	comf	printf@val+1,f,c
  1982  0016E2  6C54               	negf	printf@val,c
  1983  0016E4  0E00               	movlw	0
  1984  0016E6  2255               	addwfc	printf@val+1,f,c
  1985  0016E8  2256               	addwfc	printf@val+2,f,c
  1986  0016EA  2257               	addwfc	printf@val+3,f,c
  1987  0016EC  D000               	goto	l2684
  1988  0016EE                     l2684:
  1989                           
  1990                           ;doprnt.c: 1264: }
  1991                           ;doprnt.c: 1266: }
  1992                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1993  0016EE  0E01               	movlw	1
  1994  0016F0  6E61               	movwf	printf@c,c
  1995  0016F2                     l2686:
  1996  0016F2  0E0A               	movlw	10
  1997  0016F4  1861               	xorwf	printf@c,w,c
  1998  0016F6  B4D8               	btfsc	status,2,c
  1999  0016F8  D01C               	goto	l2698
  2000  0016FA  D001               	goto	l2690
  2001  0016FC  D01A               	goto	l2698
  2002  0016FE                     l2690:
  2003                           
  2004                           ;doprnt.c: 1306: if(val < dpowers[c])
  2005  0016FE  5061               	movf	printf@c,w,c
  2006  001700  0D04               	mullw	4
  2007  001702  0E01               	movlw	low _dpowers
  2008  001704  24F3               	addwf	prodl,w,c
  2009  001706  6EF6               	movwf	tblptrl,c
  2010  001708  0E10               	movlw	high _dpowers
  2011  00170A  20F4               	addwfc	prodh,w,c
  2012  00170C  6EF7               	movwf	tblptrh,c
  2013  00170E                     	if	0	;There are less than 3 active tblptr bytes
  2014  00170E                     	endif
  2015  00170E  0009               	tblrd		*+
  2016  001710  50F5               	movf	tablat,w,c
  2017  001712  5C54               	subwf	printf@val,w,c
  2018  001714  0009               	tblrd		*+
  2019  001716  50F5               	movf	tablat,w,c
  2020  001718  5855               	subwfb	printf@val+1,w,c
  2021  00171A  0009               	tblrd		*+
  2022  00171C  50F5               	movf	tablat,w,c
  2023  00171E  5856               	subwfb	printf@val+2,w,c
  2024  001720  0009               	tblrd		*+
  2025  001722  50F5               	movf	tablat,w,c
  2026  001724  5857               	subwfb	printf@val+3,w,c
  2027  001726  A0D8               	btfss	status,0,c
  2028  001728  D004               	goto	l2698
  2029  00172A  D001               	goto	l2694
  2030                           
  2031                           ;doprnt.c: 1307: break;
  2032  00172C  D002               	goto	l2698
  2033  00172E                     l2694:
  2034  00172E  2A61               	incf	printf@c,f,c
  2035  001730  D7E0               	goto	l2686
  2036  001732                     l2698:
  2037                           
  2038                           ;doprnt.c: 1422: {
  2039                           ;doprnt.c: 1438: if(flag & 0x03)
  2040  001732  0E03               	movlw	3
  2041  001734  1450               	andwf	printf@flag,w,c
  2042  001736  6E45               	movwf	??_printf& (0+255),c
  2043  001738  0E00               	movlw	0
  2044  00173A  1451               	andwf	printf@flag+1,w,c
  2045  00173C  6E46               	movwf	(??_printf+1)& (0+255),c
  2046  00173E  5045               	movf	??_printf,w,c
  2047  001740  1046               	iorwf	??_printf+1,w,c
  2048  001742  B4D8               	btfsc	status,2,c
  2049  001744  D004               	goto	l2702
  2050                           
  2051                           ;doprnt.c: 1439: (putch('-') );
  2052  001746  0E2D               	movlw	45
  2053  001748  EC0D  F017         	call	_putch
  2054  00174C  D000               	goto	l2702
  2055  00174E                     l2702:
  2056                           
  2057                           ;doprnt.c: 1469: }
  2058                           ;doprnt.c: 1472: prec = c;
  2059  00174E  5061               	movf	printf@c,w,c
  2060  001750  6E52               	movwf	printf@prec,c
  2061  001752  6A53               	clrf	printf@prec+1,c
  2062  001754  BE52               	btfsc	printf@prec,7,c
  2063  001756  0653               	decf	printf@prec+1,f,c
  2064                           
  2065                           ;doprnt.c: 1474: while(prec--) {
  2066  001758  D03F               	goto	l2708
  2067  00175A                     l2704:
  2068                           
  2069                           ;doprnt.c: 1478: {
  2070                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2071  00175A  C052  F045         	movff	printf@prec,??_printf
  2072  00175E  C053  F046         	movff	printf@prec+1,??_printf+1
  2073  001762  90D8               	bcf	status,0,c
  2074  001764  3645               	rlcf	??_printf,f,c
  2075  001766  3646               	rlcf	??_printf+1,f,c
  2076  001768  90D8               	bcf	status,0,c
  2077  00176A  3645               	rlcf	??_printf,f,c
  2078  00176C  3646               	rlcf	??_printf+1,f,c
  2079  00176E  0E01               	movlw	low _dpowers
  2080  001770  2445               	addwf	??_printf,w,c
  2081  001772  6EF6               	movwf	tblptrl,c
  2082  001774  0E10               	movlw	high _dpowers
  2083  001776  2046               	addwfc	??_printf+1,w,c
  2084  001778  6EF7               	movwf	tblptrh,c
  2085  00177A                     	if	0	;There are less than 3 active tblptr bytes
  2086  00177A                     	endif
  2087  00177A  0009               	tblrd		*+
  2088  00177C  CFF5 F005          	movff	tablat,___lldiv@divisor
  2089  001780  0009               	tblrd		*+
  2090  001782  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2091  001786  0009               	tblrd		*+
  2092  001788  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2093  00178C  000A               	tblrd		*-
  2094  00178E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2095  001792  C054  F001         	movff	printf@val,___lldiv@dividend
  2096  001796  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2097  00179A  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2098  00179E  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2099  0017A2  ECA4  F014         	call	___lldiv	;wreg free
  2100  0017A6  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2101  0017AA  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2102  0017AE  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2103  0017B2  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2104  0017B6  0E0A               	movlw	10
  2105  0017B8  6E12               	movwf	___llmod@divisor,c
  2106  0017BA  0E00               	movlw	0
  2107  0017BC  6E13               	movwf	___llmod@divisor+1,c
  2108  0017BE  0E00               	movlw	0
  2109  0017C0  6E14               	movwf	___llmod@divisor+2,c
  2110  0017C2  0E00               	movlw	0
  2111  0017C4  6E15               	movwf	___llmod@divisor+3,c
  2112  0017C6  EC2B  F015         	call	___llmod	;wreg free
  2113  0017CA  500E               	movf	?___llmod,w,c
  2114  0017CC  0F30               	addlw	48
  2115  0017CE  6E61               	movwf	printf@c,c
  2116                           
  2117                           ;doprnt.c: 1523: }
  2118                           ;doprnt.c: 1524: (putch(c) );
  2119  0017D0  5061               	movf	printf@c,w,c
  2120  0017D2  EC0D  F017         	call	_putch
  2121  0017D6  D000               	goto	l2708
  2122  0017D8                     l2708:
  2123  0017D8  0652               	decf	printf@prec,f,c
  2124  0017DA  A0D8               	btfss	status,0,c
  2125  0017DC  0653               	decf	printf@prec+1,f,c
  2126  0017DE  2852               	incf	printf@prec,w,c
  2127  0017E0  E1BC               	bnz	l2704
  2128  0017E2  2853               	incf	printf@prec+1,w,c
  2129  0017E4  B4D8               	btfsc	status,2,c
  2130  0017E6  D002               	goto	l2710
  2131  0017E8  D7B8               	goto	l2704
  2132  0017EA  D000               	goto	l2710
  2133  0017EC                     l2710:
  2134  0017EC  C040  FFF6         	movff	printf@f,tblptrl
  2135  0017F0  C041  FFF7         	movff	printf@f+1,tblptrh
  2136  0017F4  4A40               	infsnz	printf@f,f,c
  2137  0017F6  2A41               	incf	printf@f+1,f,c
  2138  0017F8                     	if	0	;tblptru may be non-zero
  2139  0017F8                     	endif
  2140  0017F8                     	if	0	;tblptru may be non-zero
  2141  0017F8                     	endif
  2142  0017F8  0008               	tblrd		*
  2143  0017FA  CFF5 F061          	movff	tablat,printf@c
  2144  0017FE  5061               	movf	printf@c,w,c
  2145  001800  B4D8               	btfsc	status,2,c
  2146  001802  D002               	goto	l249
  2147  001804  D460               	goto	l2530
  2148  001806  D000               	goto	l249
  2149  001808                     l249:
  2150  001808  0012               	return		;funcret
  2151  00180A                     __end_of_printf:
  2152                           	opt stack 0
  2153                           tblptru	equ	0xFF8
  2154                           tblptrh	equ	0xFF7
  2155                           tblptrl	equ	0xFF6
  2156                           tablat	equ	0xFF5
  2157                           prodh	equ	0xFF4
  2158                           prodl	equ	0xFF3
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           fsr1l	equ	0xFE1
  2163                           postinc2	equ	0xFDE
  2164                           postdec2	equ	0xFDD
  2165                           fsr2h	equ	0xFDA
  2166                           fsr2l	equ	0xFD9
  2167                           status	equ	0xFD8
  2168                           
  2169 ;; *************** function _scale *****************
  2170 ;; Defined at:
  2171 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2172 ;; Parameters:    Size  Location     Type
  2173 ;;  scl             1    wreg     char 
  2174 ;; Auto vars:     Size  Location     Type
  2175 ;;  scl             1   41[COMRAM] char 
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  3   35[COMRAM] char 
  2178 ;; Registers used:
  2179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2185 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;Total ram usage:        7 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    2
  2192 ;; This function calls:
  2193 ;;		___awdiv
  2194 ;;		___awmod
  2195 ;;		___ftmul
  2196 ;;		___wmul
  2197 ;; This function is called by:
  2198 ;;		_printf
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           
  2202                           	psect	text2
  2203  00180A                     __ptext2:
  2204                           	opt stack 0
  2205  00180A                     _scale:
  2206                           	opt stack 27
  2207                           
  2208                           ;incstack = 0
  2209                           ;scale@scl stored from wreg
  2210  00180A  6E2A               	movwf	scale@scl,c
  2211                           
  2212                           ;doprnt.c: 428: if(scl < 0) {
  2213  00180C  AE2A               	btfss	scale@scl,7,c
  2214  00180E  D0EF               	goto	l2258
  2215                           
  2216                           ;doprnt.c: 429: scl = -scl;
  2217  001810  6C2A               	negf	scale@scl,c
  2218                           
  2219                           ;doprnt.c: 430: if(scl>=110)
  2220  001812  502A               	movf	scale@scl,w,c
  2221  001814  0A80               	xorlw	128
  2222  001816  0F12               	addlw	-238
  2223  001818  A0D8               	btfss	status,0,c
  2224  00181A  D08D               	goto	l2248
  2225                           
  2226                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2227  00181C  0E00               	movlw	0
  2228  00181E  6E12               	movwf	___wmul@multiplicand+1,c
  2229  001820  0E03               	movlw	3
  2230  001822  6E11               	movwf	___wmul@multiplicand,c
  2231  001824  0E00               	movlw	0
  2232  001826  6E0A               	movwf	___awdiv@divisor+1,c
  2233  001828  0E0A               	movlw	10
  2234  00182A  6E09               	movwf	___awdiv@divisor,c
  2235  00182C  0E00               	movlw	0
  2236  00182E  6E04               	movwf	___awmod@divisor+1,c
  2237  001830  0E64               	movlw	100
  2238  001832  6E03               	movwf	___awmod@divisor,c
  2239  001834  502A               	movf	scale@scl,w,c
  2240  001836  6E01               	movwf	___awmod@dividend,c
  2241  001838  6A02               	clrf	___awmod@dividend+1,c
  2242  00183A  BE01               	btfsc	___awmod@dividend,7,c
  2243  00183C  0602               	decf	___awmod@dividend+1,f,c
  2244  00183E  ECEA  F014         	call	___awmod	;wreg free
  2245  001842  C001  F007         	movff	?___awmod,___awdiv@dividend
  2246  001846  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2247  00184A  EC59  F014         	call	___awdiv	;wreg free
  2248  00184E  0E09               	movlw	9
  2249  001850  2407               	addwf	?___awdiv,w,c
  2250  001852  6E0F               	movwf	___wmul@multiplier,c
  2251  001854  0E00               	movlw	0
  2252  001856  2008               	addwfc	?___awdiv+1,w,c
  2253  001858  6E10               	movwf	___wmul@multiplier+1,c
  2254  00185A  ECA1  F016         	call	___wmul	;wreg free
  2255  00185E  0E29               	movlw	low __npowers_
  2256  001860  240F               	addwf	?___wmul,w,c
  2257  001862  6EF6               	movwf	tblptrl,c
  2258  001864  0E10               	movlw	high __npowers_
  2259  001866  2010               	addwfc	?___wmul+1,w,c
  2260  001868  6EF7               	movwf	tblptrh,c
  2261  00186A                     	if	0	;There are less than 3 active tblptr bytes
  2262  00186A                     	endif
  2263  00186A  0009               	tblrd		*+
  2264  00186C  CFF5 F018          	movff	tablat,___ftmul@f2
  2265  001870  0009               	tblrd		*+
  2266  001872  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2267  001876  000A               	tblrd		*-
  2268  001878  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2269  00187C  0E00               	movlw	0
  2270  00187E  6E0A               	movwf	___awdiv@divisor+1,c
  2271  001880  0E64               	movlw	100
  2272  001882  6E09               	movwf	___awdiv@divisor,c
  2273  001884  502A               	movf	scale@scl,w,c
  2274  001886  6E07               	movwf	___awdiv@dividend,c
  2275  001888  6A08               	clrf	___awdiv@dividend+1,c
  2276  00188A  BE07               	btfsc	___awdiv@dividend,7,c
  2277  00188C  0608               	decf	___awdiv@dividend+1,f,c
  2278  00188E  EC59  F014         	call	___awdiv	;wreg free
  2279  001892  0E12               	movlw	18
  2280  001894  2407               	addwf	?___awdiv,w,c
  2281  001896  6E0F               	movwf	___wmul@multiplier,c
  2282  001898  0E00               	movlw	0
  2283  00189A  2008               	addwfc	?___awdiv+1,w,c
  2284  00189C  6E10               	movwf	___wmul@multiplier+1,c
  2285  00189E  0E00               	movlw	0
  2286  0018A0  6E12               	movwf	___wmul@multiplicand+1,c
  2287  0018A2  0E03               	movlw	3
  2288  0018A4  6E11               	movwf	___wmul@multiplicand,c
  2289  0018A6  ECA1  F016         	call	___wmul	;wreg free
  2290  0018AA  0E29               	movlw	low __npowers_
  2291  0018AC  240F               	addwf	?___wmul,w,c
  2292  0018AE  6EF6               	movwf	tblptrl,c
  2293  0018B0  0E10               	movlw	high __npowers_
  2294  0018B2  2010               	addwfc	?___wmul+1,w,c
  2295  0018B4  6EF7               	movwf	tblptrh,c
  2296  0018B6                     	if	0	;There are less than 3 active tblptr bytes
  2297  0018B6                     	endif
  2298  0018B6  0009               	tblrd		*+
  2299  0018B8  CFF5 F015          	movff	tablat,___ftmul@f1
  2300  0018BC  0009               	tblrd		*+
  2301  0018BE  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2302  0018C2  000A               	tblrd		*-
  2303  0018C4  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2304  0018C8  ECFB  F011         	call	___ftmul	;wreg free
  2305  0018CC  C015  F027         	movff	?___ftmul,_scale$1265
  2306  0018D0  C016  F028         	movff	?___ftmul+1,_scale$1265+1
  2307  0018D4  C017  F029         	movff	?___ftmul+2,_scale$1265+2
  2308                           
  2309                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2310  0018D8  C027  F015         	movff	_scale$1265,___ftmul@f1
  2311  0018DC  C028  F016         	movff	_scale$1265+1,___ftmul@f1+1
  2312  0018E0  C029  F017         	movff	_scale$1265+2,___ftmul@f1+2
  2313  0018E4  0E00               	movlw	0
  2314  0018E6  6E12               	movwf	___wmul@multiplicand+1,c
  2315  0018E8  0E03               	movlw	3
  2316  0018EA  6E11               	movwf	___wmul@multiplicand,c
  2317  0018EC  0E00               	movlw	0
  2318  0018EE  6E04               	movwf	___awmod@divisor+1,c
  2319  0018F0  0E0A               	movlw	10
  2320  0018F2  6E03               	movwf	___awmod@divisor,c
  2321  0018F4  502A               	movf	scale@scl,w,c
  2322  0018F6  6E01               	movwf	___awmod@dividend,c
  2323  0018F8  6A02               	clrf	___awmod@dividend+1,c
  2324  0018FA  BE01               	btfsc	___awmod@dividend,7,c
  2325  0018FC  0602               	decf	___awmod@dividend+1,f,c
  2326  0018FE  ECEA  F014         	call	___awmod	;wreg free
  2327  001902  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2328  001906  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2329  00190A  ECA1  F016         	call	___wmul	;wreg free
  2330  00190E  0E29               	movlw	low __npowers_
  2331  001910  240F               	addwf	?___wmul,w,c
  2332  001912  6EF6               	movwf	tblptrl,c
  2333  001914  0E10               	movlw	high __npowers_
  2334  001916  2010               	addwfc	?___wmul+1,w,c
  2335  001918  6EF7               	movwf	tblptrh,c
  2336  00191A                     	if	0	;There are less than 3 active tblptr bytes
  2337  00191A                     	endif
  2338  00191A  0009               	tblrd		*+
  2339  00191C  CFF5 F018          	movff	tablat,___ftmul@f2
  2340  001920  0009               	tblrd		*+
  2341  001922  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2342  001926  000A               	tblrd		*-
  2343  001928  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2344  00192C  ECFB  F011         	call	___ftmul	;wreg free
  2345  001930  D141               	goto	L5
  2346  001932  D15A               	goto	l184
  2347  001934  D054               	goto	l2254
  2348  001936                     l2248:
  2349                           
  2350                           ;doprnt.c: 432: else if(scl > 10)
  2351  001936  502A               	movf	scale@scl,w,c
  2352  001938  0A80               	xorlw	128
  2353  00193A  0F75               	addlw	-139
  2354  00193C  A0D8               	btfss	status,0,c
  2355  00193E  D04F               	goto	l2254
  2356                           
  2357                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2358  001940  0E00               	movlw	0
  2359  001942  6E0A               	movwf	___awdiv@divisor+1,c
  2360  001944  0E0A               	movlw	10
  2361  001946  6E09               	movwf	___awdiv@divisor,c
  2362  001948  502A               	movf	scale@scl,w,c
  2363  00194A  6E07               	movwf	___awdiv@dividend,c
  2364  00194C  6A08               	clrf	___awdiv@dividend+1,c
  2365  00194E  BE07               	btfsc	___awdiv@dividend,7,c
  2366  001950  0608               	decf	___awdiv@dividend+1,f,c
  2367  001952  EC59  F014         	call	___awdiv	;wreg free
  2368  001956  0E09               	movlw	9
  2369  001958  2407               	addwf	?___awdiv,w,c
  2370  00195A  6E0F               	movwf	___wmul@multiplier,c
  2371  00195C  0E00               	movlw	0
  2372  00195E  2008               	addwfc	?___awdiv+1,w,c
  2373  001960  6E10               	movwf	___wmul@multiplier+1,c
  2374  001962  0E00               	movlw	0
  2375  001964  6E12               	movwf	___wmul@multiplicand+1,c
  2376  001966  0E03               	movlw	3
  2377  001968  6E11               	movwf	___wmul@multiplicand,c
  2378  00196A  ECA1  F016         	call	___wmul	;wreg free
  2379  00196E  0E29               	movlw	low __npowers_
  2380  001970  240F               	addwf	?___wmul,w,c
  2381  001972  6EF6               	movwf	tblptrl,c
  2382  001974  0E10               	movlw	high __npowers_
  2383  001976  2010               	addwfc	?___wmul+1,w,c
  2384  001978  6EF7               	movwf	tblptrh,c
  2385  00197A                     	if	0	;There are less than 3 active tblptr bytes
  2386  00197A                     	endif
  2387  00197A  0009               	tblrd		*+
  2388  00197C  CFF5 F015          	movff	tablat,___ftmul@f1
  2389  001980  0009               	tblrd		*+
  2390  001982  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2391  001986  000A               	tblrd		*-
  2392  001988  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2393  00198C  0E00               	movlw	0
  2394  00198E  6E12               	movwf	___wmul@multiplicand+1,c
  2395  001990  0E03               	movlw	3
  2396  001992  6E11               	movwf	___wmul@multiplicand,c
  2397  001994  0E00               	movlw	0
  2398  001996  6E04               	movwf	___awmod@divisor+1,c
  2399  001998  0E0A               	movlw	10
  2400  00199A  6E03               	movwf	___awmod@divisor,c
  2401  00199C  502A               	movf	scale@scl,w,c
  2402  00199E  6E01               	movwf	___awmod@dividend,c
  2403  0019A0  6A02               	clrf	___awmod@dividend+1,c
  2404  0019A2  BE01               	btfsc	___awmod@dividend,7,c
  2405  0019A4  0602               	decf	___awmod@dividend+1,f,c
  2406  0019A6  ECEA  F014         	call	___awmod	;wreg free
  2407  0019AA  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2408  0019AE  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2409  0019B2  ECA1  F016         	call	___wmul	;wreg free
  2410  0019B6  0E29               	movlw	low __npowers_
  2411  0019B8  240F               	addwf	?___wmul,w,c
  2412  0019BA  6EF6               	movwf	tblptrl,c
  2413  0019BC  0E10               	movlw	high __npowers_
  2414  0019BE  2010               	addwfc	?___wmul+1,w,c
  2415  0019C0  6EF7               	movwf	tblptrh,c
  2416  0019C2                     	if	0	;There are less than 3 active tblptr bytes
  2417  0019C2                     	endif
  2418  0019C2  0009               	tblrd		*+
  2419  0019C4  CFF5 F018          	movff	tablat,___ftmul@f2
  2420  0019C8  0009               	tblrd		*+
  2421  0019CA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2422  0019CE  000A               	tblrd		*-
  2423  0019D0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2424  0019D4  ECFB  F011         	call	___ftmul	;wreg free
  2425  0019D8  D0ED               	goto	L5
  2426  0019DA  D106               	goto	l184
  2427  0019DC  D000               	goto	l2254
  2428  0019DE                     l2254:
  2429                           
  2430                           ;doprnt.c: 434: return _npowers_[scl];
  2431  0019DE  502A               	movf	scale@scl,w,c
  2432  0019E0  0D03               	mullw	3
  2433  0019E2  0E29               	movlw	low __npowers_
  2434  0019E4  24F3               	addwf	prodl,w,c
  2435  0019E6  6EF6               	movwf	tblptrl,c
  2436  0019E8  0E10               	movlw	high __npowers_
  2437  0019EA  D0F2               	goto	L4
  2438  0019EC  D0FD               	goto	l184
  2439  0019EE                     l2258:
  2440                           
  2441                           ;doprnt.c: 435: }
  2442                           ;doprnt.c: 436: if(scl>=110)
  2443  0019EE  502A               	movf	scale@scl,w,c
  2444  0019F0  0A80               	xorlw	128
  2445  0019F2  0F12               	addlw	-238
  2446  0019F4  A0D8               	btfss	status,0,c
  2447  0019F6  D08D               	goto	l2266
  2448                           
  2449                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2450  0019F8  0E00               	movlw	0
  2451  0019FA  6E12               	movwf	___wmul@multiplicand+1,c
  2452  0019FC  0E03               	movlw	3
  2453  0019FE  6E11               	movwf	___wmul@multiplicand,c
  2454  001A00  0E00               	movlw	0
  2455  001A02  6E0A               	movwf	___awdiv@divisor+1,c
  2456  001A04  0E0A               	movlw	10
  2457  001A06  6E09               	movwf	___awdiv@divisor,c
  2458  001A08  0E00               	movlw	0
  2459  001A0A  6E04               	movwf	___awmod@divisor+1,c
  2460  001A0C  0E64               	movlw	100
  2461  001A0E  6E03               	movwf	___awmod@divisor,c
  2462  001A10  502A               	movf	scale@scl,w,c
  2463  001A12  6E01               	movwf	___awmod@dividend,c
  2464  001A14  6A02               	clrf	___awmod@dividend+1,c
  2465  001A16  BE01               	btfsc	___awmod@dividend,7,c
  2466  001A18  0602               	decf	___awmod@dividend+1,f,c
  2467  001A1A  ECEA  F014         	call	___awmod	;wreg free
  2468  001A1E  C001  F007         	movff	?___awmod,___awdiv@dividend
  2469  001A22  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2470  001A26  EC59  F014         	call	___awdiv	;wreg free
  2471  001A2A  0E09               	movlw	9
  2472  001A2C  2407               	addwf	?___awdiv,w,c
  2473  001A2E  6E0F               	movwf	___wmul@multiplier,c
  2474  001A30  0E00               	movlw	0
  2475  001A32  2008               	addwfc	?___awdiv+1,w,c
  2476  001A34  6E10               	movwf	___wmul@multiplier+1,c
  2477  001A36  ECA1  F016         	call	___wmul	;wreg free
  2478  001A3A  0E50               	movlw	low __powers_
  2479  001A3C  240F               	addwf	?___wmul,w,c
  2480  001A3E  6EF6               	movwf	tblptrl,c
  2481  001A40  0E10               	movlw	high __powers_
  2482  001A42  2010               	addwfc	?___wmul+1,w,c
  2483  001A44  6EF7               	movwf	tblptrh,c
  2484  001A46                     	if	0	;There are less than 3 active tblptr bytes
  2485  001A46                     	endif
  2486  001A46  0009               	tblrd		*+
  2487  001A48  CFF5 F018          	movff	tablat,___ftmul@f2
  2488  001A4C  0009               	tblrd		*+
  2489  001A4E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2490  001A52  000A               	tblrd		*-
  2491  001A54  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2492  001A58  0E00               	movlw	0
  2493  001A5A  6E0A               	movwf	___awdiv@divisor+1,c
  2494  001A5C  0E64               	movlw	100
  2495  001A5E  6E09               	movwf	___awdiv@divisor,c
  2496  001A60  502A               	movf	scale@scl,w,c
  2497  001A62  6E07               	movwf	___awdiv@dividend,c
  2498  001A64  6A08               	clrf	___awdiv@dividend+1,c
  2499  001A66  BE07               	btfsc	___awdiv@dividend,7,c
  2500  001A68  0608               	decf	___awdiv@dividend+1,f,c
  2501  001A6A  EC59  F014         	call	___awdiv	;wreg free
  2502  001A6E  0E12               	movlw	18
  2503  001A70  2407               	addwf	?___awdiv,w,c
  2504  001A72  6E0F               	movwf	___wmul@multiplier,c
  2505  001A74  0E00               	movlw	0
  2506  001A76  2008               	addwfc	?___awdiv+1,w,c
  2507  001A78  6E10               	movwf	___wmul@multiplier+1,c
  2508  001A7A  0E00               	movlw	0
  2509  001A7C  6E12               	movwf	___wmul@multiplicand+1,c
  2510  001A7E  0E03               	movlw	3
  2511  001A80  6E11               	movwf	___wmul@multiplicand,c
  2512  001A82  ECA1  F016         	call	___wmul	;wreg free
  2513  001A86  0E50               	movlw	low __powers_
  2514  001A88  240F               	addwf	?___wmul,w,c
  2515  001A8A  6EF6               	movwf	tblptrl,c
  2516  001A8C  0E10               	movlw	high __powers_
  2517  001A8E  2010               	addwfc	?___wmul+1,w,c
  2518  001A90  6EF7               	movwf	tblptrh,c
  2519  001A92                     	if	0	;There are less than 3 active tblptr bytes
  2520  001A92                     	endif
  2521  001A92  0009               	tblrd		*+
  2522  001A94  CFF5 F015          	movff	tablat,___ftmul@f1
  2523  001A98  0009               	tblrd		*+
  2524  001A9A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2525  001A9E  000A               	tblrd		*-
  2526  001AA0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2527  001AA4  ECFB  F011         	call	___ftmul	;wreg free
  2528  001AA8  C015  F027         	movff	?___ftmul,_scale$1265
  2529  001AAC  C016  F028         	movff	?___ftmul+1,_scale$1265+1
  2530  001AB0  C017  F029         	movff	?___ftmul+2,_scale$1265+2
  2531                           
  2532                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2533  001AB4  C027  F015         	movff	_scale$1265,___ftmul@f1
  2534  001AB8  C028  F016         	movff	_scale$1265+1,___ftmul@f1+1
  2535  001ABC  C029  F017         	movff	_scale$1265+2,___ftmul@f1+2
  2536  001AC0  0E00               	movlw	0
  2537  001AC2  6E12               	movwf	___wmul@multiplicand+1,c
  2538  001AC4  0E03               	movlw	3
  2539  001AC6  6E11               	movwf	___wmul@multiplicand,c
  2540  001AC8  0E00               	movlw	0
  2541  001ACA  6E04               	movwf	___awmod@divisor+1,c
  2542  001ACC  0E0A               	movlw	10
  2543  001ACE  6E03               	movwf	___awmod@divisor,c
  2544  001AD0  502A               	movf	scale@scl,w,c
  2545  001AD2  6E01               	movwf	___awmod@dividend,c
  2546  001AD4  6A02               	clrf	___awmod@dividend+1,c
  2547  001AD6  BE01               	btfsc	___awmod@dividend,7,c
  2548  001AD8  0602               	decf	___awmod@dividend+1,f,c
  2549  001ADA  ECEA  F014         	call	___awmod	;wreg free
  2550  001ADE  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2551  001AE2  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2552  001AE6  ECA1  F016         	call	___wmul	;wreg free
  2553  001AEA  0E50               	movlw	low __powers_
  2554  001AEC  240F               	addwf	?___wmul,w,c
  2555  001AEE  6EF6               	movwf	tblptrl,c
  2556  001AF0  0E10               	movlw	high __powers_
  2557  001AF2  2010               	addwfc	?___wmul+1,w,c
  2558  001AF4  6EF7               	movwf	tblptrh,c
  2559  001AF6                     	if	0	;There are less than 3 active tblptr bytes
  2560  001AF6                     	endif
  2561  001AF6  0009               	tblrd		*+
  2562  001AF8  CFF5 F018          	movff	tablat,___ftmul@f2
  2563  001AFC  0009               	tblrd		*+
  2564  001AFE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2565  001B02  000A               	tblrd		*-
  2566  001B04  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2567  001B08  ECFB  F011         	call	___ftmul	;wreg free
  2568  001B0C  D053               	goto	L5
  2569  001B0E  D06C               	goto	l184
  2570  001B10  D059               	goto	l2272
  2571  001B12                     l2266:
  2572                           
  2573                           ;doprnt.c: 438: else if(scl > 10)
  2574  001B12  502A               	movf	scale@scl,w,c
  2575  001B14  0A80               	xorlw	128
  2576  001B16  0F75               	addlw	-139
  2577  001B18  A0D8               	btfss	status,0,c
  2578  001B1A  D054               	goto	l2272
  2579                           
  2580                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2581  001B1C  0E00               	movlw	0
  2582  001B1E  6E0A               	movwf	___awdiv@divisor+1,c
  2583  001B20  0E0A               	movlw	10
  2584  001B22  6E09               	movwf	___awdiv@divisor,c
  2585  001B24  502A               	movf	scale@scl,w,c
  2586  001B26  6E07               	movwf	___awdiv@dividend,c
  2587  001B28  6A08               	clrf	___awdiv@dividend+1,c
  2588  001B2A  BE07               	btfsc	___awdiv@dividend,7,c
  2589  001B2C  0608               	decf	___awdiv@dividend+1,f,c
  2590  001B2E  EC59  F014         	call	___awdiv	;wreg free
  2591  001B32  0E09               	movlw	9
  2592  001B34  2407               	addwf	?___awdiv,w,c
  2593  001B36  6E0F               	movwf	___wmul@multiplier,c
  2594  001B38  0E00               	movlw	0
  2595  001B3A  2008               	addwfc	?___awdiv+1,w,c
  2596  001B3C  6E10               	movwf	___wmul@multiplier+1,c
  2597  001B3E  0E00               	movlw	0
  2598  001B40  6E12               	movwf	___wmul@multiplicand+1,c
  2599  001B42  0E03               	movlw	3
  2600  001B44  6E11               	movwf	___wmul@multiplicand,c
  2601  001B46  ECA1  F016         	call	___wmul	;wreg free
  2602  001B4A  0E50               	movlw	low __powers_
  2603  001B4C  240F               	addwf	?___wmul,w,c
  2604  001B4E  6EF6               	movwf	tblptrl,c
  2605  001B50  0E10               	movlw	high __powers_
  2606  001B52  2010               	addwfc	?___wmul+1,w,c
  2607  001B54  6EF7               	movwf	tblptrh,c
  2608  001B56                     	if	0	;There are less than 3 active tblptr bytes
  2609  001B56                     	endif
  2610  001B56  0009               	tblrd		*+
  2611  001B58  CFF5 F015          	movff	tablat,___ftmul@f1
  2612  001B5C  0009               	tblrd		*+
  2613  001B5E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2614  001B62  000A               	tblrd		*-
  2615  001B64  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2616  001B68  0E00               	movlw	0
  2617  001B6A  6E12               	movwf	___wmul@multiplicand+1,c
  2618  001B6C  0E03               	movlw	3
  2619  001B6E  6E11               	movwf	___wmul@multiplicand,c
  2620  001B70  0E00               	movlw	0
  2621  001B72  6E04               	movwf	___awmod@divisor+1,c
  2622  001B74  0E0A               	movlw	10
  2623  001B76  6E03               	movwf	___awmod@divisor,c
  2624  001B78  502A               	movf	scale@scl,w,c
  2625  001B7A  6E01               	movwf	___awmod@dividend,c
  2626  001B7C  6A02               	clrf	___awmod@dividend+1,c
  2627  001B7E  BE01               	btfsc	___awmod@dividend,7,c
  2628  001B80  0602               	decf	___awmod@dividend+1,f,c
  2629  001B82  ECEA  F014         	call	___awmod	;wreg free
  2630  001B86  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2631  001B8A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2632  001B8E  ECA1  F016         	call	___wmul	;wreg free
  2633  001B92  0E50               	movlw	low __powers_
  2634  001B94  240F               	addwf	?___wmul,w,c
  2635  001B96  6EF6               	movwf	tblptrl,c
  2636  001B98  0E10               	movlw	high __powers_
  2637  001B9A  2010               	addwfc	?___wmul+1,w,c
  2638  001B9C  6EF7               	movwf	tblptrh,c
  2639  001B9E                     	if	0	;There are less than 3 active tblptr bytes
  2640  001B9E                     	endif
  2641  001B9E  0009               	tblrd		*+
  2642  001BA0  CFF5 F018          	movff	tablat,___ftmul@f2
  2643  001BA4  0009               	tblrd		*+
  2644  001BA6  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2645  001BAA  000A               	tblrd		*-
  2646  001BAC  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2647  001BB0  ECFB  F011         	call	___ftmul	;wreg free
  2648  001BB4                     L5:
  2649  001BB4  C015  F024         	movff	?___ftmul,?_scale
  2650  001BB8  C016  F025         	movff	?___ftmul+1,?_scale+1
  2651  001BBC  C017  F026         	movff	?___ftmul+2,?_scale+2
  2652  001BC0  D013               	goto	l184
  2653  001BC2  D000               	goto	l2272
  2654  001BC4                     l2272:
  2655                           
  2656                           ;doprnt.c: 440: return _powers_[scl];
  2657  001BC4  502A               	movf	scale@scl,w,c
  2658  001BC6  0D03               	mullw	3
  2659  001BC8  0E50               	movlw	low __powers_
  2660  001BCA  24F3               	addwf	prodl,w,c
  2661  001BCC  6EF6               	movwf	tblptrl,c
  2662  001BCE  0E10               	movlw	high __powers_
  2663  001BD0                     L4:
  2664  001BD0  20F4               	addwfc	prodh,w,c
  2665  001BD2  6EF7               	movwf	tblptrh,c
  2666  001BD4                     	if	0	;There are less than 3 active tblptr bytes
  2667  001BD4                     	endif
  2668  001BD4  0009               	tblrd		*+
  2669  001BD6  CFF5 F024          	movff	tablat,?_scale
  2670  001BDA  0009               	tblrd		*+
  2671  001BDC  CFF5 F025          	movff	tablat,?_scale+1
  2672  001BE0  000A               	tblrd		*-
  2673  001BE2  CFF5 F026          	movff	tablat,?_scale+2
  2674  001BE6  D000               	goto	l184
  2675  001BE8                     l184:
  2676  001BE8  0012               	return		;funcret
  2677  001BEA                     __end_of_scale:
  2678                           	opt stack 0
  2679                           tblptru	equ	0xFF8
  2680                           tblptrh	equ	0xFF7
  2681                           tblptrl	equ	0xFF6
  2682                           tablat	equ	0xFF5
  2683                           prodh	equ	0xFF4
  2684                           prodl	equ	0xFF3
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postdec1	equ	0xFE5
  2688                           fsr1l	equ	0xFE1
  2689                           postinc2	equ	0xFDE
  2690                           postdec2	equ	0xFDD
  2691                           fsr2h	equ	0xFDA
  2692                           fsr2l	equ	0xFD9
  2693                           status	equ	0xFD8
  2694                           
  2695 ;; *************** function _putch *****************
  2696 ;; Defined at:
  2697 ;;		line 46 in file "Lab5p6.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  c               1    wreg     unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  c               1    0[COMRAM] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;		None               void
  2704 ;; Registers used:
  2705 ;;		wreg
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_printf
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           	psect	text3
  2725  002E1A                     __ptext3:
  2726                           	opt stack 0
  2727  002E1A                     _putch:
  2728                           	opt stack 29
  2729                           
  2730                           ;incstack = 0
  2731                           ;putch@c stored from wreg
  2732  002E1A  6E01               	movwf	putch@c,c
  2733                           
  2734                           ;Lab5p6.c: 48: while (!TRMT);
  2735  002E1C  D000               	goto	l74
  2736  002E1E                     l74:
  2737  002E1E  A2AC               	btfss	4012,1,c	;volatile
  2738  002E20  D7FE               	goto	l74
  2739                           
  2740                           ;Lab5p6.c: 49: TXREG = c;
  2741  002E22  C001  FFAD         	movff	putch@c,4013	;volatile
  2742  002E26  0012               	return		;funcret
  2743  002E28                     __end_of_putch:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           tblptrh	equ	0xFF7
  2747                           tblptrl	equ	0xFF6
  2748                           tablat	equ	0xFF5
  2749                           prodh	equ	0xFF4
  2750                           prodl	equ	0xFF3
  2751                           postinc0	equ	0xFEE
  2752                           wreg	equ	0xFE8
  2753                           postdec1	equ	0xFE5
  2754                           fsr1l	equ	0xFE1
  2755                           postinc2	equ	0xFDE
  2756                           postdec2	equ	0xFDD
  2757                           fsr2h	equ	0xFDA
  2758                           fsr2l	equ	0xFD9
  2759                           status	equ	0xFD8
  2760                           
  2761 ;; *************** function _fround *****************
  2762 ;; Defined at:
  2763 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;  prec            1    wreg     unsigned char 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  prec            1   44[COMRAM] unsigned char 
  2768 ;; Return value:  Size  Location     Type
  2769 ;;                  3   35[COMRAM] unsigned char 
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2777 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2778 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2780 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2781 ;;Total ram usage:       10 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:    2
  2784 ;; This function calls:
  2785 ;;		___awdiv
  2786 ;;		___awmod
  2787 ;;		___ftmul
  2788 ;;		___wmul
  2789 ;; This function is called by:
  2790 ;;		_printf
  2791 ;; This function uses a non-reentrant model
  2792 ;;
  2793                           
  2794                           	psect	text4
  2795  001BEA                     __ptext4:
  2796                           	opt stack 0
  2797  001BEA                     _fround:
  2798                           	opt stack 27
  2799                           
  2800                           ;incstack = 0
  2801                           ;fround@prec stored from wreg
  2802  001BEA  6E2D               	movwf	fround@prec,c
  2803                           
  2804                           ;doprnt.c: 413: if(prec>=110)
  2805  001BEC  0E6D               	movlw	109
  2806  001BEE  642D               	cpfsgt	fround@prec,c
  2807  001BF0  D09B               	goto	l2226
  2808                           
  2809                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2810  001BF2  0E00               	movlw	0
  2811  001BF4  6E12               	movwf	___wmul@multiplicand+1,c
  2812  001BF6  0E03               	movlw	3
  2813  001BF8  6E11               	movwf	___wmul@multiplicand,c
  2814  001BFA  0E00               	movlw	0
  2815  001BFC  6E0A               	movwf	___awdiv@divisor+1,c
  2816  001BFE  0E0A               	movlw	10
  2817  001C00  6E09               	movwf	___awdiv@divisor,c
  2818  001C02  0E00               	movlw	0
  2819  001C04  6E04               	movwf	___awmod@divisor+1,c
  2820  001C06  0E64               	movlw	100
  2821  001C08  6E03               	movwf	___awmod@divisor,c
  2822  001C0A  C02D  F001         	movff	fround@prec,___awmod@dividend
  2823  001C0E  6A02               	clrf	___awmod@dividend+1,c
  2824  001C10  ECEA  F014         	call	___awmod	;wreg free
  2825  001C14  C001  F007         	movff	?___awmod,___awdiv@dividend
  2826  001C18  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2827  001C1C  EC59  F014         	call	___awdiv	;wreg free
  2828  001C20  0E09               	movlw	9
  2829  001C22  2407               	addwf	?___awdiv,w,c
  2830  001C24  6E0F               	movwf	___wmul@multiplier,c
  2831  001C26  0E00               	movlw	0
  2832  001C28  2008               	addwfc	?___awdiv+1,w,c
  2833  001C2A  6E10               	movwf	___wmul@multiplier+1,c
  2834  001C2C  ECA1  F016         	call	___wmul	;wreg free
  2835  001C30  0E29               	movlw	low __npowers_
  2836  001C32  240F               	addwf	?___wmul,w,c
  2837  001C34  6EF6               	movwf	tblptrl,c
  2838  001C36  0E10               	movlw	high __npowers_
  2839  001C38  2010               	addwfc	?___wmul+1,w,c
  2840  001C3A  6EF7               	movwf	tblptrh,c
  2841  001C3C                     	if	0	;There are less than 3 active tblptr bytes
  2842  001C3C                     	endif
  2843  001C3C  0009               	tblrd		*+
  2844  001C3E  CFF5 F018          	movff	tablat,___ftmul@f2
  2845  001C42  0009               	tblrd		*+
  2846  001C44  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2847  001C48  000A               	tblrd		*-
  2848  001C4A  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2849  001C4E  0E00               	movlw	0
  2850  001C50  6E0A               	movwf	___awdiv@divisor+1,c
  2851  001C52  0E64               	movlw	100
  2852  001C54  6E09               	movwf	___awdiv@divisor,c
  2853  001C56  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2854  001C5A  6A08               	clrf	___awdiv@dividend+1,c
  2855  001C5C  EC59  F014         	call	___awdiv	;wreg free
  2856  001C60  0E12               	movlw	18
  2857  001C62  2407               	addwf	?___awdiv,w,c
  2858  001C64  6E0F               	movwf	___wmul@multiplier,c
  2859  001C66  0E00               	movlw	0
  2860  001C68  2008               	addwfc	?___awdiv+1,w,c
  2861  001C6A  6E10               	movwf	___wmul@multiplier+1,c
  2862  001C6C  0E00               	movlw	0
  2863  001C6E  6E12               	movwf	___wmul@multiplicand+1,c
  2864  001C70  0E03               	movlw	3
  2865  001C72  6E11               	movwf	___wmul@multiplicand,c
  2866  001C74  ECA1  F016         	call	___wmul	;wreg free
  2867  001C78  0E29               	movlw	low __npowers_
  2868  001C7A  240F               	addwf	?___wmul,w,c
  2869  001C7C  6EF6               	movwf	tblptrl,c
  2870  001C7E  0E10               	movlw	high __npowers_
  2871  001C80  2010               	addwfc	?___wmul+1,w,c
  2872  001C82  6EF7               	movwf	tblptrh,c
  2873  001C84                     	if	0	;There are less than 3 active tblptr bytes
  2874  001C84                     	endif
  2875  001C84  0009               	tblrd		*+
  2876  001C86  CFF5 F015          	movff	tablat,___ftmul@f1
  2877  001C8A  0009               	tblrd		*+
  2878  001C8C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2879  001C90  000A               	tblrd		*-
  2880  001C92  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2881  001C96  ECFB  F011         	call	___ftmul	;wreg free
  2882  001C9A  C015  F02A         	movff	?___ftmul,_fround$1263
  2883  001C9E  C016  F02B         	movff	?___ftmul+1,_fround$1263+1
  2884  001CA2  C017  F02C         	movff	?___ftmul+2,_fround$1263+2
  2885                           
  2886                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2887  001CA6  0E00               	movlw	0
  2888  001CA8  6E12               	movwf	___wmul@multiplicand+1,c
  2889  001CAA  0E03               	movlw	3
  2890  001CAC  6E11               	movwf	___wmul@multiplicand,c
  2891  001CAE  0E00               	movlw	0
  2892  001CB0  6E04               	movwf	___awmod@divisor+1,c
  2893  001CB2  0E0A               	movlw	10
  2894  001CB4  6E03               	movwf	___awmod@divisor,c
  2895  001CB6  C02D  F001         	movff	fround@prec,___awmod@dividend
  2896  001CBA  6A02               	clrf	___awmod@dividend+1,c
  2897  001CBC  ECEA  F014         	call	___awmod	;wreg free
  2898  001CC0  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2899  001CC4  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2900  001CC8  ECA1  F016         	call	___wmul	;wreg free
  2901  001CCC  0E29               	movlw	low __npowers_
  2902  001CCE  240F               	addwf	?___wmul,w,c
  2903  001CD0  6EF6               	movwf	tblptrl,c
  2904  001CD2  0E10               	movlw	high __npowers_
  2905  001CD4  2010               	addwfc	?___wmul+1,w,c
  2906  001CD6  6EF7               	movwf	tblptrh,c
  2907  001CD8                     	if	0	;There are less than 3 active tblptr bytes
  2908  001CD8                     	endif
  2909  001CD8  0009               	tblrd		*+
  2910  001CDA  CFF5 F018          	movff	tablat,___ftmul@f2
  2911  001CDE  0009               	tblrd		*+
  2912  001CE0  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2913  001CE4  000A               	tblrd		*-
  2914  001CE6  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2915  001CEA  C02A  F015         	movff	_fround$1263,___ftmul@f1
  2916  001CEE  C02B  F016         	movff	_fround$1263+1,___ftmul@f1+1
  2917  001CF2  C02C  F017         	movff	_fround$1263+2,___ftmul@f1+2
  2918  001CF6  ECFB  F011         	call	___ftmul	;wreg free
  2919  001CFA  C015  F027         	movff	?___ftmul,_fround$1264
  2920  001CFE  C016  F028         	movff	?___ftmul+1,_fround$1264+1
  2921  001D02  C017  F029         	movff	?___ftmul+2,_fround$1264+2
  2922                           
  2923                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2924  001D06  C027  F015         	movff	_fround$1264,___ftmul@f1
  2925  001D0A  C028  F016         	movff	_fround$1264+1,___ftmul@f1+1
  2926  001D0E  C029  F017         	movff	_fround$1264+2,___ftmul@f1+2
  2927  001D12  0E00               	movlw	0
  2928  001D14  6E18               	movwf	___ftmul@f2,c
  2929  001D16  0E00               	movlw	0
  2930  001D18  6E19               	movwf	___ftmul@f2+1,c
  2931  001D1A  0E3F               	movlw	63
  2932  001D1C  6E1A               	movwf	___ftmul@f2+2,c
  2933  001D1E  ECFB  F011         	call	___ftmul	;wreg free
  2934  001D22  D07D               	goto	L7
  2935  001D24  D083               	goto	l177
  2936  001D26  D062               	goto	l2234
  2937  001D28                     l2226:
  2938                           
  2939                           ;doprnt.c: 415: else if(prec > 10)
  2940  001D28  0E0A               	movlw	10
  2941  001D2A  642D               	cpfsgt	fround@prec,c
  2942  001D2C  D05F               	goto	l2234
  2943                           
  2944                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2945  001D2E  0E00               	movlw	0
  2946  001D30  6E12               	movwf	___wmul@multiplicand+1,c
  2947  001D32  0E03               	movlw	3
  2948  001D34  6E11               	movwf	___wmul@multiplicand,c
  2949  001D36  0E00               	movlw	0
  2950  001D38  6E04               	movwf	___awmod@divisor+1,c
  2951  001D3A  0E0A               	movlw	10
  2952  001D3C  6E03               	movwf	___awmod@divisor,c
  2953  001D3E  C02D  F001         	movff	fround@prec,___awmod@dividend
  2954  001D42  6A02               	clrf	___awmod@dividend+1,c
  2955  001D44  ECEA  F014         	call	___awmod	;wreg free
  2956  001D48  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2957  001D4C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2958  001D50  ECA1  F016         	call	___wmul	;wreg free
  2959  001D54  0E29               	movlw	low __npowers_
  2960  001D56  240F               	addwf	?___wmul,w,c
  2961  001D58  6EF6               	movwf	tblptrl,c
  2962  001D5A  0E10               	movlw	high __npowers_
  2963  001D5C  2010               	addwfc	?___wmul+1,w,c
  2964  001D5E  6EF7               	movwf	tblptrh,c
  2965  001D60                     	if	0	;There are less than 3 active tblptr bytes
  2966  001D60                     	endif
  2967  001D60  0009               	tblrd		*+
  2968  001D62  CFF5 F018          	movff	tablat,___ftmul@f2
  2969  001D66  0009               	tblrd		*+
  2970  001D68  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2971  001D6C  000A               	tblrd		*-
  2972  001D6E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2973  001D72  0E00               	movlw	0
  2974  001D74  6E0A               	movwf	___awdiv@divisor+1,c
  2975  001D76  0E0A               	movlw	10
  2976  001D78  6E09               	movwf	___awdiv@divisor,c
  2977  001D7A  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2978  001D7E  6A08               	clrf	___awdiv@dividend+1,c
  2979  001D80  EC59  F014         	call	___awdiv	;wreg free
  2980  001D84  0E09               	movlw	9
  2981  001D86  2407               	addwf	?___awdiv,w,c
  2982  001D88  6E0F               	movwf	___wmul@multiplier,c
  2983  001D8A  0E00               	movlw	0
  2984  001D8C  2008               	addwfc	?___awdiv+1,w,c
  2985  001D8E  6E10               	movwf	___wmul@multiplier+1,c
  2986  001D90  0E00               	movlw	0
  2987  001D92  6E12               	movwf	___wmul@multiplicand+1,c
  2988  001D94  0E03               	movlw	3
  2989  001D96  6E11               	movwf	___wmul@multiplicand,c
  2990  001D98  ECA1  F016         	call	___wmul	;wreg free
  2991  001D9C  0E29               	movlw	low __npowers_
  2992  001D9E  240F               	addwf	?___wmul,w,c
  2993  001DA0  6EF6               	movwf	tblptrl,c
  2994  001DA2  0E10               	movlw	high __npowers_
  2995  001DA4  2010               	addwfc	?___wmul+1,w,c
  2996  001DA6  6EF7               	movwf	tblptrh,c
  2997  001DA8                     	if	0	;There are less than 3 active tblptr bytes
  2998  001DA8                     	endif
  2999  001DA8  0009               	tblrd		*+
  3000  001DAA  CFF5 F015          	movff	tablat,___ftmul@f1
  3001  001DAE  0009               	tblrd		*+
  3002  001DB0  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3003  001DB4  000A               	tblrd		*-
  3004  001DB6  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3005  001DBA  ECFB  F011         	call	___ftmul	;wreg free
  3006  001DBE  C015  F02A         	movff	?___ftmul,_fround$1263
  3007  001DC2  C016  F02B         	movff	?___ftmul+1,_fround$1263+1
  3008  001DC6  C017  F02C         	movff	?___ftmul+2,_fround$1263+2
  3009                           
  3010                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3011  001DCA  C02A  F015         	movff	_fround$1263,___ftmul@f1
  3012  001DCE  C02B  F016         	movff	_fround$1263+1,___ftmul@f1+1
  3013  001DD2  C02C  F017         	movff	_fround$1263+2,___ftmul@f1+2
  3014  001DD6  0E00               	movlw	0
  3015  001DD8  6E18               	movwf	___ftmul@f2,c
  3016  001DDA  0E00               	movlw	0
  3017  001DDC  6E19               	movwf	___ftmul@f2+1,c
  3018  001DDE  0E3F               	movlw	63
  3019  001DE0  6E1A               	movwf	___ftmul@f2+2,c
  3020  001DE2  ECFB  F011         	call	___ftmul	;wreg free
  3021  001DE6  D01B               	goto	L7
  3022  001DE8  D021               	goto	l177
  3023  001DEA  D000               	goto	l2234
  3024  001DEC                     l2234:
  3025                           
  3026                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3027  001DEC  502D               	movf	fround@prec,w,c
  3028  001DEE  0D03               	mullw	3
  3029  001DF0  0E29               	movlw	low __npowers_
  3030  001DF2  24F3               	addwf	prodl,w,c
  3031  001DF4  6EF6               	movwf	tblptrl,c
  3032  001DF6  0E10               	movlw	high __npowers_
  3033  001DF8  20F4               	addwfc	prodh,w,c
  3034  001DFA  6EF7               	movwf	tblptrh,c
  3035  001DFC                     	if	0	;There are less than 3 active tblptr bytes
  3036  001DFC                     	endif
  3037  001DFC  0009               	tblrd		*+
  3038  001DFE  CFF5 F015          	movff	tablat,___ftmul@f1
  3039  001E02  0009               	tblrd		*+
  3040  001E04  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3041  001E08  000A               	tblrd		*-
  3042  001E0A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3043  001E0E  0E00               	movlw	0
  3044  001E10  6E18               	movwf	___ftmul@f2,c
  3045  001E12  0E00               	movlw	0
  3046  001E14  6E19               	movwf	___ftmul@f2+1,c
  3047  001E16  0E3F               	movlw	63
  3048  001E18  6E1A               	movwf	___ftmul@f2+2,c
  3049  001E1A  ECFB  F011         	call	___ftmul	;wreg free
  3050  001E1E                     L7:
  3051  001E1E  C015  F024         	movff	?___ftmul,?_fround
  3052  001E22  C016  F025         	movff	?___ftmul+1,?_fround+1
  3053  001E26  C017  F026         	movff	?___ftmul+2,?_fround+2
  3054  001E2A  D000               	goto	l177
  3055  001E2C                     l177:
  3056  001E2C  0012               	return		;funcret
  3057  001E2E                     __end_of_fround:
  3058                           	opt stack 0
  3059                           tblptru	equ	0xFF8
  3060                           tblptrh	equ	0xFF7
  3061                           tblptrl	equ	0xFF6
  3062                           tablat	equ	0xFF5
  3063                           prodh	equ	0xFF4
  3064                           prodl	equ	0xFF3
  3065                           postinc0	equ	0xFEE
  3066                           wreg	equ	0xFE8
  3067                           postdec1	equ	0xFE5
  3068                           fsr1l	equ	0xFE1
  3069                           postinc2	equ	0xFDE
  3070                           postdec2	equ	0xFDD
  3071                           fsr2h	equ	0xFDA
  3072                           fsr2l	equ	0xFD9
  3073                           status	equ	0xFD8
  3074                           
  3075 ;; *************** function ___wmul *****************
  3076 ;; Defined at:
  3077 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  multiplier      2   14[COMRAM] unsigned int 
  3080 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;  product         2   18[COMRAM] unsigned int 
  3083 ;; Return value:  Size  Location     Type
  3084 ;;                  2   14[COMRAM] unsigned int 
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, prodl, prodh
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3092 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3096 ;;Total ram usage:        6 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; This function calls:
  3099 ;;		Nothing
  3100 ;; This function is called by:
  3101 ;;		_fround
  3102 ;;		_scale
  3103 ;;		_printf
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           	psect	text5
  3108  002D42                     __ptext5:
  3109                           	opt stack 0
  3110  002D42                     ___wmul:
  3111                           	opt stack 28
  3112                           
  3113                           ;incstack = 0
  3114  002D42  500F               	movf	___wmul@multiplier,w,c
  3115  002D44  0211               	mulwf	___wmul@multiplicand,c
  3116  002D46  CFF3 F013          	movff	prodl,___wmul@product
  3117  002D4A  CFF4 F014          	movff	prodh,___wmul@product+1
  3118  002D4E  500F               	movf	___wmul@multiplier,w,c
  3119  002D50  0212               	mulwf	___wmul@multiplicand+1,c
  3120  002D52  50F3               	movf	prodl,w,c
  3121  002D54  2614               	addwf	___wmul@product+1,f,c
  3122  002D56  5010               	movf	___wmul@multiplier+1,w,c
  3123  002D58  0211               	mulwf	___wmul@multiplicand,c
  3124  002D5A  50F3               	movf	prodl,w,c
  3125  002D5C  2614               	addwf	___wmul@product+1,f,c
  3126  002D5E  C013  F00F         	movff	___wmul@product,?___wmul
  3127  002D62  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3128  002D66  D000               	goto	l285
  3129  002D68                     l285:
  3130  002D68  0012               	return		;funcret
  3131  002D6A                     __end_of___wmul:
  3132                           	opt stack 0
  3133                           tblptru	equ	0xFF8
  3134                           tblptrh	equ	0xFF7
  3135                           tblptrl	equ	0xFF6
  3136                           tablat	equ	0xFF5
  3137                           prodh	equ	0xFF4
  3138                           prodl	equ	0xFF3
  3139                           postinc0	equ	0xFEE
  3140                           wreg	equ	0xFE8
  3141                           postdec1	equ	0xFE5
  3142                           fsr1l	equ	0xFE1
  3143                           postinc2	equ	0xFDE
  3144                           postdec2	equ	0xFDD
  3145                           fsr2h	equ	0xFDA
  3146                           fsr2l	equ	0xFD9
  3147                           status	equ	0xFD8
  3148                           
  3149 ;; *************** function ___ftmul *****************
  3150 ;; Defined at:
  3151 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3152 ;; Parameters:    Size  Location     Type
  3153 ;;  f1              3   20[COMRAM] float 
  3154 ;;  f2              3   23[COMRAM] float 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3157 ;;  sign            1   34[COMRAM] unsigned char 
  3158 ;;  cntr            1   33[COMRAM] unsigned char 
  3159 ;;  exp             1   29[COMRAM] unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  3   20[COMRAM] float 
  3162 ;; Registers used:
  3163 ;;		wreg, status,2, status,0, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3169 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;Total ram usage:       15 bytes
  3174 ;; Hardware stack levels used:    1
  3175 ;; Hardware stack levels required when called:    1
  3176 ;; This function calls:
  3177 ;;		___ftpack
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;;		_fround
  3181 ;;		_scale
  3182 ;;		_printf
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text6
  3187  0023F6                     __ptext6:
  3188                           	opt stack 0
  3189  0023F6                     ___ftmul:
  3190                           	opt stack 27
  3191                           
  3192                           ;incstack = 0
  3193  0023F6  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3194  0023FA  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3195  0023FC  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3196  0023FE  3416               	rlcf	___ftmul@f1+1,w,c
  3197  002400  361B               	rlcf	??___ftmul& (0+255),f,c
  3198  002402  E301               	bnc	u1881
  3199  002404  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3200  002406                     u1881:
  3201  002406  501B               	movf	??___ftmul,w,c
  3202  002408  6E1E               	movwf	___ftmul@exp,c
  3203  00240A  501E               	movf	___ftmul@exp,w,c
  3204  00240C  A4D8               	btfss	status,2,c
  3205  00240E  D002               	goto	l2040
  3206  002410  D00E               	goto	l2042
  3207  002412  D06C               	goto	l714
  3208  002414                     l2040:
  3209  002414  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3210  002418  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3211  00241A  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3212  00241C  3419               	rlcf	___ftmul@f2+1,w,c
  3213  00241E  361B               	rlcf	??___ftmul& (0+255),f,c
  3214  002420  E301               	bnc	u1901
  3215  002422  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3216  002424                     u1901:
  3217  002424  501B               	movf	??___ftmul,w,c
  3218  002426  6E23               	movwf	___ftmul@sign,c
  3219  002428  5023               	movf	___ftmul@sign,w,c
  3220  00242A  A4D8               	btfss	status,2,c
  3221  00242C  D007               	goto	l2046
  3222  00242E                     l2042:
  3223  00242E  0E00               	movlw	0
  3224  002430  6E15               	movwf	?___ftmul,c
  3225  002432  0E00               	movlw	0
  3226  002434  6E16               	movwf	?___ftmul+1,c
  3227  002436  0E00               	movlw	0
  3228  002438  6E17               	movwf	?___ftmul+2,c
  3229  00243A  D058               	goto	l714
  3230  00243C                     l2046:
  3231  00243C  5023               	movf	___ftmul@sign,w,c
  3232  00243E  0F7B               	addlw	123
  3233  002440  261E               	addwf	___ftmul@exp,f,c
  3234  002442  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3235  002446  501A               	movf	___ftmul@f2+2,w,c
  3236  002448  1A23               	xorwf	___ftmul@sign,f,c
  3237  00244A  0E80               	movlw	128
  3238  00244C  1623               	andwf	___ftmul@sign,f,c
  3239  00244E  8E16               	bsf	___ftmul@f1+1,7,c
  3240  002450  8E19               	bsf	___ftmul@f2+1,7,c
  3241  002452  0EFF               	movlw	255
  3242  002454  1618               	andwf	___ftmul@f2,f,c
  3243  002456  0EFF               	movlw	255
  3244  002458  1619               	andwf	___ftmul@f2+1,f,c
  3245  00245A  0E00               	movlw	0
  3246  00245C  161A               	andwf	___ftmul@f2+2,f,c
  3247  00245E  0E00               	movlw	0
  3248  002460  6E1F               	movwf	___ftmul@f3_as_product,c
  3249  002462  0E00               	movlw	0
  3250  002464  6E20               	movwf	___ftmul@f3_as_product+1,c
  3251  002466  0E00               	movlw	0
  3252  002468  6E21               	movwf	___ftmul@f3_as_product+2,c
  3253  00246A  0E07               	movlw	7
  3254  00246C  6E22               	movwf	___ftmul@cntr,c
  3255  00246E  D000               	goto	l2060
  3256  002470                     l2060:
  3257  002470  A015               	btfss	___ftmul@f1,0,c
  3258  002472  D007               	goto	l2064
  3259  002474  5018               	movf	___ftmul@f2,w,c
  3260  002476  261F               	addwf	___ftmul@f3_as_product,f,c
  3261  002478  5019               	movf	___ftmul@f2+1,w,c
  3262  00247A  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3263  00247C  501A               	movf	___ftmul@f2+2,w,c
  3264  00247E  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3265  002480  D000               	goto	l2064
  3266  002482                     l2064:
  3267  002482  90D8               	bcf	status,0,c
  3268  002484  3217               	rrcf	___ftmul@f1+2,f,c
  3269  002486  3216               	rrcf	___ftmul@f1+1,f,c
  3270  002488  3215               	rrcf	___ftmul@f1,f,c
  3271  00248A  90D8               	bcf	status,0,c
  3272  00248C  3618               	rlcf	___ftmul@f2,f,c
  3273  00248E  3619               	rlcf	___ftmul@f2+1,f,c
  3274  002490  361A               	rlcf	___ftmul@f2+2,f,c
  3275  002492  2E22               	decfsz	___ftmul@cntr,f,c
  3276  002494  D7ED               	goto	l2060
  3277  002496  D000               	goto	l2068
  3278  002498                     l2068:
  3279  002498  0E09               	movlw	9
  3280  00249A  6E22               	movwf	___ftmul@cntr,c
  3281  00249C  D000               	goto	l2070
  3282  00249E                     l2070:
  3283  00249E  A015               	btfss	___ftmul@f1,0,c
  3284  0024A0  D007               	goto	l2074
  3285  0024A2  5018               	movf	___ftmul@f2,w,c
  3286  0024A4  261F               	addwf	___ftmul@f3_as_product,f,c
  3287  0024A6  5019               	movf	___ftmul@f2+1,w,c
  3288  0024A8  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3289  0024AA  501A               	movf	___ftmul@f2+2,w,c
  3290  0024AC  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3291  0024AE  D000               	goto	l2074
  3292  0024B0                     l2074:
  3293  0024B0  90D8               	bcf	status,0,c
  3294  0024B2  3217               	rrcf	___ftmul@f1+2,f,c
  3295  0024B4  3216               	rrcf	___ftmul@f1+1,f,c
  3296  0024B6  3215               	rrcf	___ftmul@f1,f,c
  3297  0024B8  90D8               	bcf	status,0,c
  3298  0024BA  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3299  0024BC  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3300  0024BE  321F               	rrcf	___ftmul@f3_as_product,f,c
  3301  0024C0  2E22               	decfsz	___ftmul@cntr,f,c
  3302  0024C2  D7ED               	goto	l2070
  3303  0024C4  D000               	goto	l2078
  3304  0024C6                     l2078:
  3305  0024C6  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3306  0024CA  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3307  0024CE  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3308  0024D2  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3309  0024D6  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3310  0024DA  EC5B  F013         	call	___ftpack	;wreg free
  3311  0024DE  C001  F015         	movff	?___ftpack,?___ftmul
  3312  0024E2  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3313  0024E6  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3314  0024EA  D000               	goto	l714
  3315  0024EC                     l714:
  3316  0024EC  0012               	return		;funcret
  3317  0024EE                     __end_of___ftmul:
  3318                           	opt stack 0
  3319                           tblptru	equ	0xFF8
  3320                           tblptrh	equ	0xFF7
  3321                           tblptrl	equ	0xFF6
  3322                           tablat	equ	0xFF5
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           postinc0	equ	0xFEE
  3326                           wreg	equ	0xFE8
  3327                           postdec1	equ	0xFE5
  3328                           fsr1l	equ	0xFE1
  3329                           postinc2	equ	0xFDE
  3330                           postdec2	equ	0xFDD
  3331                           fsr2h	equ	0xFDA
  3332                           fsr2l	equ	0xFD9
  3333                           status	equ	0xFD8
  3334                           
  3335 ;; *************** function ___awmod *****************
  3336 ;; Defined at:
  3337 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3338 ;; Parameters:    Size  Location     Type
  3339 ;;  dividend        2    0[COMRAM] int 
  3340 ;;  divisor         2    2[COMRAM] int 
  3341 ;; Auto vars:     Size  Location     Type
  3342 ;;  sign            1    5[COMRAM] unsigned char 
  3343 ;;  counter         1    4[COMRAM] unsigned char 
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  2    0[COMRAM] int 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3353 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3356 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3357 ;;Total ram usage:        6 bytes
  3358 ;; Hardware stack levels used:    1
  3359 ;; This function calls:
  3360 ;;		Nothing
  3361 ;; This function is called by:
  3362 ;;		_main
  3363 ;;		_fround
  3364 ;;		_scale
  3365 ;; This function uses a non-reentrant model
  3366 ;;
  3367                           
  3368                           	psect	text7
  3369  0029D4                     __ptext7:
  3370                           	opt stack 0
  3371  0029D4                     ___awmod:
  3372                           	opt stack 28
  3373                           
  3374                           ;incstack = 0
  3375  0029D4  0E00               	movlw	0
  3376  0029D6  6E06               	movwf	___awmod@sign,c
  3377  0029D8  AE02               	btfss	___awmod@dividend+1,7,c
  3378  0029DA  D007               	goto	l2134
  3379  0029DC  6C01               	negf	___awmod@dividend,c
  3380  0029DE  1E02               	comf	___awmod@dividend+1,f,c
  3381  0029E0  B0D8               	btfsc	status,0,c
  3382  0029E2  2A02               	incf	___awmod@dividend+1,f,c
  3383  0029E4  0E01               	movlw	1
  3384  0029E6  6E06               	movwf	___awmod@sign,c
  3385  0029E8  D000               	goto	l2134
  3386  0029EA                     l2134:
  3387  0029EA  AE04               	btfss	___awmod@divisor+1,7,c
  3388  0029EC  D005               	goto	l2138
  3389  0029EE  6C03               	negf	___awmod@divisor,c
  3390  0029F0  1E04               	comf	___awmod@divisor+1,f,c
  3391  0029F2  B0D8               	btfsc	status,0,c
  3392  0029F4  2A04               	incf	___awmod@divisor+1,f,c
  3393  0029F6  D000               	goto	l2138
  3394  0029F8                     l2138:
  3395  0029F8  5003               	movf	___awmod@divisor,w,c
  3396  0029FA  1004               	iorwf	___awmod@divisor+1,w,c
  3397  0029FC  B4D8               	btfsc	status,2,c
  3398  0029FE  D01D               	goto	l2154
  3399  002A00  0E01               	movlw	1
  3400  002A02  6E05               	movwf	___awmod@counter,c
  3401  002A04  D005               	goto	l2144
  3402  002A06                     l2142:
  3403  002A06  90D8               	bcf	status,0,c
  3404  002A08  3603               	rlcf	___awmod@divisor,f,c
  3405  002A0A  3604               	rlcf	___awmod@divisor+1,f,c
  3406  002A0C  2A05               	incf	___awmod@counter,f,c
  3407  002A0E  D000               	goto	l2144
  3408  002A10                     l2144:
  3409  002A10  BE04               	btfsc	___awmod@divisor+1,7,c
  3410  002A12  D002               	goto	l2146
  3411  002A14  D7F8               	goto	l2142
  3412  002A16  D000               	goto	l2146
  3413  002A18                     l2146:
  3414  002A18  5003               	movf	___awmod@divisor,w,c
  3415  002A1A  5C01               	subwf	___awmod@dividend,w,c
  3416  002A1C  5004               	movf	___awmod@divisor+1,w,c
  3417  002A1E  5802               	subwfb	___awmod@dividend+1,w,c
  3418  002A20  A0D8               	btfss	status,0,c
  3419  002A22  D005               	goto	l2150
  3420  002A24  5003               	movf	___awmod@divisor,w,c
  3421  002A26  5E01               	subwf	___awmod@dividend,f,c
  3422  002A28  5004               	movf	___awmod@divisor+1,w,c
  3423  002A2A  5A02               	subwfb	___awmod@dividend+1,f,c
  3424  002A2C  D000               	goto	l2150
  3425  002A2E                     l2150:
  3426  002A2E  90D8               	bcf	status,0,c
  3427  002A30  3204               	rrcf	___awmod@divisor+1,f,c
  3428  002A32  3203               	rrcf	___awmod@divisor,f,c
  3429  002A34  2E05               	decfsz	___awmod@counter,f,c
  3430  002A36  D7F0               	goto	l2146
  3431  002A38  D000               	goto	l2154
  3432  002A3A                     l2154:
  3433  002A3A  5006               	movf	___awmod@sign,w,c
  3434  002A3C  B4D8               	btfsc	status,2,c
  3435  002A3E  D005               	goto	l2158
  3436  002A40  6C01               	negf	___awmod@dividend,c
  3437  002A42  1E02               	comf	___awmod@dividend+1,f,c
  3438  002A44  B0D8               	btfsc	status,0,c
  3439  002A46  2A02               	incf	___awmod@dividend+1,f,c
  3440  002A48  D000               	goto	l2158
  3441  002A4A                     l2158:
  3442  002A4A  C001  F001         	movff	___awmod@dividend,?___awmod
  3443  002A4E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3444  002A52  D000               	goto	l491
  3445  002A54                     l491:
  3446  002A54  0012               	return		;funcret
  3447  002A56                     __end_of___awmod:
  3448                           	opt stack 0
  3449                           tblptru	equ	0xFF8
  3450                           tblptrh	equ	0xFF7
  3451                           tblptrl	equ	0xFF6
  3452                           tablat	equ	0xFF5
  3453                           prodh	equ	0xFF4
  3454                           prodl	equ	0xFF3
  3455                           postinc0	equ	0xFEE
  3456                           wreg	equ	0xFE8
  3457                           postdec1	equ	0xFE5
  3458                           fsr1l	equ	0xFE1
  3459                           postinc2	equ	0xFDE
  3460                           postdec2	equ	0xFDD
  3461                           fsr2h	equ	0xFDA
  3462                           fsr2l	equ	0xFD9
  3463                           status	equ	0xFD8
  3464                           
  3465 ;; *************** function __tdiv_to_l_ *****************
  3466 ;; Defined at:
  3467 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  f1              3    0[COMRAM] float 
  3470 ;;  f2              3    3[COMRAM] float 
  3471 ;; Auto vars:     Size  Location     Type
  3472 ;;  quot            4    9[COMRAM] unsigned long 
  3473 ;;  exp1            1   14[COMRAM] unsigned char 
  3474 ;;  cntr            1   13[COMRAM] unsigned char 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  4    0[COMRAM] unsigned long 
  3477 ;; Registers used:
  3478 ;;		wreg, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3484 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3486 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3487 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;Total ram usage:       15 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_printf
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text8
  3498  0021DC                     __ptext8:
  3499                           	opt stack 0
  3500  0021DC                     __tdiv_to_l_:
  3501                           	opt stack 29
  3502                           
  3503                           ;incstack = 0
  3504  0021DC  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3505  0021E0  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3506  0021E2  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3507  0021E4  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3508  0021E6  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3509  0021E8  E301               	bnc	u2241
  3510  0021EA  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3511  0021EC                     u2241:
  3512  0021EC  5007               	movf	??__tdiv_to_l_,w,c
  3513  0021EE  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3514  0021F0  500F               	movf	__tdiv_to_l_@exp1,w,c
  3515  0021F2  A4D8               	btfss	status,2,c
  3516  0021F4  D002               	goto	l2282
  3517  0021F6  D05D               	goto	l2324
  3518  0021F8  D078               	goto	l690
  3519  0021FA                     l2282:
  3520  0021FA  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3521  0021FE  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3522  002200  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3523  002202  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3524  002204  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3525  002206  E301               	bnc	u2261
  3526  002208  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3527  00220A                     u2261:
  3528  00220A  5007               	movf	??__tdiv_to_l_,w,c
  3529  00220C  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3530  00220E  500E               	movf	__tdiv_to_l_@cntr,w,c
  3531  002210  A4D8               	btfss	status,2,c
  3532  002212  D002               	goto	l2288
  3533  002214  D04E               	goto	l2324
  3534  002216  D069               	goto	l690
  3535  002218                     l2288:
  3536  002218  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3537  00221A  0EFF               	movlw	255
  3538  00221C  1601               	andwf	__tdiv_to_l_@f1,f,c
  3539  00221E  0EFF               	movlw	255
  3540  002220  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3541  002222  0E00               	movlw	0
  3542  002224  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3543  002226  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3544  002228  0EFF               	movlw	255
  3545  00222A  1604               	andwf	__tdiv_to_l_@f2,f,c
  3546  00222C  0EFF               	movlw	255
  3547  00222E  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3548  002230  0E00               	movlw	0
  3549  002232  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3550  002234  0E00               	movlw	0
  3551  002236  6E0A               	movwf	__tdiv_to_l_@quot,c
  3552  002238  0E00               	movlw	0
  3553  00223A  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3554  00223C  0E00               	movlw	0
  3555  00223E  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3556  002240  0E00               	movlw	0
  3557  002242  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3558  002244  0E7F               	movlw	127
  3559  002246  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3560  002248  500E               	movf	__tdiv_to_l_@cntr,w,c
  3561  00224A  0F98               	addlw	152
  3562  00224C  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3563  00224E  0E18               	movlw	24
  3564  002250  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3565  002252                     l692:
  3566  002252  90D8               	bcf	status,0,c
  3567  002254  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3568  002256  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3569  002258  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3570  00225A  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3571  00225C  5004               	movf	__tdiv_to_l_@f2,w,c
  3572  00225E  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3573  002260  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3574  002262  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3575  002264  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3576  002266  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3577  002268  A0D8               	btfss	status,0,c
  3578  00226A  D007               	goto	l693
  3579  00226C  5004               	movf	__tdiv_to_l_@f2,w,c
  3580  00226E  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3581  002270  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3582  002272  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3583  002274  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3584  002276  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3585  002278  800A               	bsf	__tdiv_to_l_@quot,0,c
  3586  00227A                     l693:
  3587  00227A  90D8               	bcf	status,0,c
  3588  00227C  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3589  00227E  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3590  002280  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3591  002282  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3592  002284  D7E6               	goto	l692
  3593  002286  D000               	goto	l2310
  3594  002288                     l2310:
  3595  002288  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3596  00228A  D010               	goto	l2322
  3597  00228C  500F               	movf	__tdiv_to_l_@exp1,w,c
  3598  00228E  0A80               	xorlw	128
  3599  002290  0F97               	addlw	151
  3600  002292  B0D8               	btfsc	status,0,c
  3601  002294  D003               	goto	l2318
  3602  002296  D00D               	goto	l2324
  3603  002298  D028               	goto	l690
  3604  00229A  D000               	goto	l2318
  3605  00229C                     l2318:
  3606  00229C  90D8               	bcf	status,0,c
  3607  00229E  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3608  0022A0  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3609  0022A2  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3610  0022A4  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3611  0022A6  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3612  0022A8  D7F9               	goto	l2318
  3613  0022AA  D017               	goto	l699
  3614  0022AC                     l2322:
  3615  0022AC  0E17               	movlw	23
  3616  0022AE  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3617  0022B0  D011               	goto	l2330
  3618  0022B2                     l2324:
  3619  0022B2  0E00               	movlw	0
  3620  0022B4  6E01               	movwf	?__tdiv_to_l_,c
  3621  0022B6  0E00               	movlw	0
  3622  0022B8  6E02               	movwf	?__tdiv_to_l_+1,c
  3623  0022BA  0E00               	movlw	0
  3624  0022BC  6E03               	movwf	?__tdiv_to_l_+2,c
  3625  0022BE  0E00               	movlw	0
  3626  0022C0  6E04               	movwf	?__tdiv_to_l_+3,c
  3627  0022C2  D013               	goto	l690
  3628  0022C4  D007               	goto	l2330
  3629  0022C6                     l2328:
  3630  0022C6  90D8               	bcf	status,0,c
  3631  0022C8  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3632  0022CA  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3633  0022CC  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3634  0022CE  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3635  0022D0  060F               	decf	__tdiv_to_l_@exp1,f,c
  3636  0022D2  D000               	goto	l2330
  3637  0022D4                     l2330:
  3638  0022D4  500F               	movf	__tdiv_to_l_@exp1,w,c
  3639  0022D6  A4D8               	btfss	status,2,c
  3640  0022D8  D7F6               	goto	l2328
  3641  0022DA                     l699:
  3642  0022DA  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3643  0022DE  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3644  0022E2  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3645  0022E6  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3646  0022EA                     l690:
  3647  0022EA  0012               	return		;funcret
  3648  0022EC                     __end_of__tdiv_to_l_:
  3649                           	opt stack 0
  3650                           tblptru	equ	0xFF8
  3651                           tblptrh	equ	0xFF7
  3652                           tblptrl	equ	0xFF6
  3653                           tablat	equ	0xFF5
  3654                           prodh	equ	0xFF4
  3655                           prodl	equ	0xFF3
  3656                           postinc0	equ	0xFEE
  3657                           wreg	equ	0xFE8
  3658                           postdec1	equ	0xFE5
  3659                           fsr1l	equ	0xFE1
  3660                           postinc2	equ	0xFDE
  3661                           postdec2	equ	0xFDD
  3662                           fsr2h	equ	0xFDA
  3663                           fsr2l	equ	0xFD9
  3664                           status	equ	0xFD8
  3665                           
  3666 ;; *************** function __div_to_l_ *****************
  3667 ;; Defined at:
  3668 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  f1              3    0[COMRAM] unsigned long 
  3671 ;;  f2              3    3[COMRAM] unsigned long 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  quot            4    6[COMRAM] unsigned long 
  3674 ;;  exp1            1   11[COMRAM] unsigned char 
  3675 ;;  cntr            1   10[COMRAM] unsigned char 
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  4    0[COMRAM] unsigned long 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : 0/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:       12 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; This function calls:
  3692 ;;		Nothing
  3693 ;; This function is called by:
  3694 ;;		_printf
  3695 ;; This function uses a non-reentrant model
  3696 ;;
  3697                           
  3698                           	psect	text9
  3699  0022EC                     __ptext9:
  3700                           	opt stack 0
  3701  0022EC                     __div_to_l_:
  3702                           	opt stack 29
  3703                           
  3704                           ;incstack = 0
  3705  0022EC  3403               	rlcf	__div_to_l_@f1+2,w,c
  3706  0022EE  3404               	rlcf	__div_to_l_@f1+3,w,c
  3707  0022F0  6E0C               	movwf	__div_to_l_@exp1,c
  3708  0022F2  500C               	movf	__div_to_l_@exp1,w,c
  3709  0022F4  A4D8               	btfss	status,2,c
  3710  0022F6  D002               	goto	l2338
  3711  0022F8  D061               	goto	l2384
  3712  0022FA  D07C               	goto	l569
  3713  0022FC                     l2338:
  3714  0022FC  3406               	rlcf	__div_to_l_@f2+2,w,c
  3715  0022FE  3407               	rlcf	__div_to_l_@f2+3,w,c
  3716  002300  6E0B               	movwf	__div_to_l_@cntr,c
  3717  002302  500B               	movf	__div_to_l_@cntr,w,c
  3718  002304  A4D8               	btfss	status,2,c
  3719  002306  D002               	goto	l2344
  3720  002308  D059               	goto	l2384
  3721  00230A  D074               	goto	l569
  3722  00230C                     l2344:
  3723  00230C  8E03               	bsf	__div_to_l_@f1+2,7,c
  3724  00230E  0EFF               	movlw	255
  3725  002310  1601               	andwf	__div_to_l_@f1,f,c
  3726  002312  0EFF               	movlw	255
  3727  002314  1602               	andwf	__div_to_l_@f1+1,f,c
  3728  002316  0EFF               	movlw	255
  3729  002318  1603               	andwf	__div_to_l_@f1+2,f,c
  3730  00231A  0E00               	movlw	0
  3731  00231C  1604               	andwf	__div_to_l_@f1+3,f,c
  3732  00231E  8E06               	bsf	__div_to_l_@f2+2,7,c
  3733  002320  0EFF               	movlw	255
  3734  002322  1604               	andwf	__div_to_l_@f2,f,c
  3735  002324  0EFF               	movlw	255
  3736  002326  1605               	andwf	__div_to_l_@f2+1,f,c
  3737  002328  0EFF               	movlw	255
  3738  00232A  1606               	andwf	__div_to_l_@f2+2,f,c
  3739  00232C  0E00               	movlw	0
  3740  00232E  1607               	andwf	__div_to_l_@f2+3,f,c
  3741  002330  0E00               	movlw	0
  3742  002332  6E07               	movwf	__div_to_l_@quot,c
  3743  002334  0E00               	movlw	0
  3744  002336  6E08               	movwf	__div_to_l_@quot+1,c
  3745  002338  0E00               	movlw	0
  3746  00233A  6E09               	movwf	__div_to_l_@quot+2,c
  3747  00233C  0E00               	movlw	0
  3748  00233E  6E0A               	movwf	__div_to_l_@quot+3,c
  3749  002340  0E7F               	movlw	127
  3750  002342  5E0C               	subwf	__div_to_l_@exp1,f,c
  3751  002344  500B               	movf	__div_to_l_@cntr,w,c
  3752  002346  0FA0               	addlw	160
  3753  002348  5E0C               	subwf	__div_to_l_@exp1,f,c
  3754  00234A  0E20               	movlw	32
  3755  00234C  6E0B               	movwf	__div_to_l_@cntr,c
  3756  00234E  D000               	goto	l2358
  3757  002350                     l2358:
  3758  002350  90D8               	bcf	status,0,c
  3759  002352  3607               	rlcf	__div_to_l_@quot,f,c
  3760  002354  3608               	rlcf	__div_to_l_@quot+1,f,c
  3761  002356  3609               	rlcf	__div_to_l_@quot+2,f,c
  3762  002358  360A               	rlcf	__div_to_l_@quot+3,f,c
  3763  00235A  5004               	movf	__div_to_l_@f2,w,c
  3764  00235C  5C01               	subwf	__div_to_l_@f1,w,c
  3765  00235E  5005               	movf	__div_to_l_@f2+1,w,c
  3766  002360  5802               	subwfb	__div_to_l_@f1+1,w,c
  3767  002362  5006               	movf	__div_to_l_@f2+2,w,c
  3768  002364  5803               	subwfb	__div_to_l_@f1+2,w,c
  3769  002366  5007               	movf	__div_to_l_@f2+3,w,c
  3770  002368  5804               	subwfb	__div_to_l_@f1+3,w,c
  3771  00236A  A0D8               	btfss	status,0,c
  3772  00236C  D00A               	goto	l2366
  3773  00236E  5004               	movf	__div_to_l_@f2,w,c
  3774  002370  5E01               	subwf	__div_to_l_@f1,f,c
  3775  002372  5005               	movf	__div_to_l_@f2+1,w,c
  3776  002374  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3777  002376  5006               	movf	__div_to_l_@f2+2,w,c
  3778  002378  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3779  00237A  5007               	movf	__div_to_l_@f2+3,w,c
  3780  00237C  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3781  00237E  8007               	bsf	__div_to_l_@quot,0,c
  3782  002380  D000               	goto	l2366
  3783  002382                     l2366:
  3784  002382  90D8               	bcf	status,0,c
  3785  002384  3601               	rlcf	__div_to_l_@f1,f,c
  3786  002386  3602               	rlcf	__div_to_l_@f1+1,f,c
  3787  002388  3603               	rlcf	__div_to_l_@f1+2,f,c
  3788  00238A  3604               	rlcf	__div_to_l_@f1+3,f,c
  3789  00238C  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3790  00238E  D7E0               	goto	l2358
  3791  002390  D000               	goto	l2370
  3792  002392                     l2370:
  3793  002392  AE0C               	btfss	__div_to_l_@exp1,7,c
  3794  002394  D010               	goto	l2382
  3795  002396  500C               	movf	__div_to_l_@exp1,w,c
  3796  002398  0A80               	xorlw	128
  3797  00239A  0F9F               	addlw	159
  3798  00239C  B0D8               	btfsc	status,0,c
  3799  00239E  D003               	goto	l2378
  3800  0023A0  D00D               	goto	l2384
  3801  0023A2  D028               	goto	l569
  3802  0023A4  D000               	goto	l2378
  3803  0023A6                     l2378:
  3804  0023A6  90D8               	bcf	status,0,c
  3805  0023A8  320A               	rrcf	__div_to_l_@quot+3,f,c
  3806  0023AA  3209               	rrcf	__div_to_l_@quot+2,f,c
  3807  0023AC  3208               	rrcf	__div_to_l_@quot+1,f,c
  3808  0023AE  3207               	rrcf	__div_to_l_@quot,f,c
  3809  0023B0  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3810  0023B2  D7F9               	goto	l2378
  3811  0023B4  D017               	goto	l578
  3812  0023B6                     l2382:
  3813  0023B6  0E1F               	movlw	31
  3814  0023B8  640C               	cpfsgt	__div_to_l_@exp1,c
  3815  0023BA  D011               	goto	l2390
  3816  0023BC                     l2384:
  3817  0023BC  0E00               	movlw	0
  3818  0023BE  6E01               	movwf	?__div_to_l_,c
  3819  0023C0  0E00               	movlw	0
  3820  0023C2  6E02               	movwf	?__div_to_l_+1,c
  3821  0023C4  0E00               	movlw	0
  3822  0023C6  6E03               	movwf	?__div_to_l_+2,c
  3823  0023C8  0E00               	movlw	0
  3824  0023CA  6E04               	movwf	?__div_to_l_+3,c
  3825  0023CC  D013               	goto	l569
  3826  0023CE  D007               	goto	l2390
  3827  0023D0                     l2388:
  3828  0023D0  90D8               	bcf	status,0,c
  3829  0023D2  3607               	rlcf	__div_to_l_@quot,f,c
  3830  0023D4  3608               	rlcf	__div_to_l_@quot+1,f,c
  3831  0023D6  3609               	rlcf	__div_to_l_@quot+2,f,c
  3832  0023D8  360A               	rlcf	__div_to_l_@quot+3,f,c
  3833  0023DA  060C               	decf	__div_to_l_@exp1,f,c
  3834  0023DC  D000               	goto	l2390
  3835  0023DE                     l2390:
  3836  0023DE  500C               	movf	__div_to_l_@exp1,w,c
  3837  0023E0  A4D8               	btfss	status,2,c
  3838  0023E2  D7F6               	goto	l2388
  3839  0023E4                     l578:
  3840  0023E4  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3841  0023E8  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3842  0023EC  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3843  0023F0  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3844  0023F4                     l569:
  3845  0023F4  0012               	return		;funcret
  3846  0023F6                     __end_of__div_to_l_:
  3847                           	opt stack 0
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           prodh	equ	0xFF4
  3853                           prodl	equ	0xFF3
  3854                           postinc0	equ	0xFEE
  3855                           wreg	equ	0xFE8
  3856                           postdec1	equ	0xFE5
  3857                           fsr1l	equ	0xFE1
  3858                           postinc2	equ	0xFDE
  3859                           postdec2	equ	0xFDD
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8
  3863                           
  3864 ;; *************** function ___lltoft *****************
  3865 ;; Defined at:
  3866 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  3867 ;; Parameters:    Size  Location     Type
  3868 ;;  c               4    8[COMRAM] unsigned long 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  exp             1   16[COMRAM] unsigned char 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  3    8[COMRAM] float 
  3873 ;; Registers used:
  3874 ;;		wreg, status,2, status,0, cstack
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3880 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3882 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3883 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3884 ;;Total ram usage:        9 bytes
  3885 ;; Hardware stack levels used:    1
  3886 ;; Hardware stack levels required when called:    1
  3887 ;; This function calls:
  3888 ;;		___ftpack
  3889 ;; This function is called by:
  3890 ;;		_printf
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           	psect	text10
  3895  002BA4                     __ptext10:
  3896                           	opt stack 0
  3897  002BA4                     ___lltoft:
  3898                           	opt stack 28
  3899                           
  3900                           ;incstack = 0
  3901  002BA4  0E8E               	movlw	142
  3902  002BA6  6E11               	movwf	___lltoft@exp,c
  3903  002BA8  D007               	goto	l2510
  3904  002BAA                     l2508:
  3905  002BAA  90D8               	bcf	status,0,c
  3906  002BAC  320C               	rrcf	___lltoft@c+3,f,c
  3907  002BAE  320B               	rrcf	___lltoft@c+2,f,c
  3908  002BB0  320A               	rrcf	___lltoft@c+1,f,c
  3909  002BB2  3209               	rrcf	___lltoft@c,f,c
  3910  002BB4  2A11               	incf	___lltoft@exp,f,c
  3911  002BB6  D000               	goto	l2510
  3912  002BB8                     l2510:
  3913  002BB8  0E00               	movlw	0
  3914  002BBA  1409               	andwf	___lltoft@c,w,c
  3915  002BBC  6E0D               	movwf	??___lltoft& (0+255),c
  3916  002BBE  0E00               	movlw	0
  3917  002BC0  140A               	andwf	___lltoft@c+1,w,c
  3918  002BC2  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3919  002BC4  0E00               	movlw	0
  3920  002BC6  140B               	andwf	___lltoft@c+2,w,c
  3921  002BC8  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3922  002BCA  0EFF               	movlw	255
  3923  002BCC  140C               	andwf	___lltoft@c+3,w,c
  3924  002BCE  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3925  002BD0  500D               	movf	??___lltoft,w,c
  3926  002BD2  100E               	iorwf	??___lltoft+1,w,c
  3927  002BD4  100F               	iorwf	??___lltoft+2,w,c
  3928  002BD6  1010               	iorwf	??___lltoft+3,w,c
  3929  002BD8  A4D8               	btfss	status,2,c
  3930  002BDA  D7E7               	goto	l2508
  3931  002BDC  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3932  002BE0  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3933  002BE4  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3934  002BE8  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3935  002BEC  0E00               	movlw	0
  3936  002BEE  6E05               	movwf	___ftpack@sign,c
  3937  002BF0  EC5B  F013         	call	___ftpack	;wreg free
  3938  002BF4  C001  F009         	movff	?___ftpack,?___lltoft
  3939  002BF8  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3940  002BFC  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3941  002C00  D000               	goto	l804
  3942  002C02                     l804:
  3943  002C02  0012               	return		;funcret
  3944  002C04                     __end_of___lltoft:
  3945                           	opt stack 0
  3946                           tblptru	equ	0xFF8
  3947                           tblptrh	equ	0xFF7
  3948                           tblptrl	equ	0xFF6
  3949                           tablat	equ	0xFF5
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           postinc0	equ	0xFEE
  3953                           wreg	equ	0xFE8
  3954                           postdec1	equ	0xFE5
  3955                           fsr1l	equ	0xFE1
  3956                           postinc2	equ	0xFDE
  3957                           postdec2	equ	0xFDD
  3958                           fsr2h	equ	0xFDA
  3959                           fsr2l	equ	0xFD9
  3960                           status	equ	0xFD8
  3961                           
  3962 ;; *************** function ___llmod *****************
  3963 ;; Defined at:
  3964 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  dividend        4   13[COMRAM] unsigned long 
  3967 ;;  divisor         4   17[COMRAM] unsigned long 
  3968 ;; Auto vars:     Size  Location     Type
  3969 ;;  counter         1   21[COMRAM] unsigned char 
  3970 ;; Return value:  Size  Location     Type
  3971 ;;                  4   13[COMRAM] unsigned long 
  3972 ;; Registers used:
  3973 ;;		wreg, status,2, status,0
  3974 ;; Tracked objects:
  3975 ;;		On entry : 0/0
  3976 ;;		On exit  : 0/0
  3977 ;;		Unchanged: 0/0
  3978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3979 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;Total ram usage:        9 bytes
  3984 ;; Hardware stack levels used:    1
  3985 ;; This function calls:
  3986 ;;		Nothing
  3987 ;; This function is called by:
  3988 ;;		_printf
  3989 ;; This function uses a non-reentrant model
  3990 ;;
  3991                           
  3992                           	psect	text11
  3993  002A56                     __ptext11:
  3994                           	opt stack 0
  3995  002A56                     ___llmod:
  3996                           	opt stack 29
  3997                           
  3998                           ;incstack = 0
  3999  002A56  5012               	movf	___llmod@divisor,w,c
  4000  002A58  1013               	iorwf	___llmod@divisor+1,w,c
  4001  002A5A  1014               	iorwf	___llmod@divisor+2,w,c
  4002  002A5C  1015               	iorwf	___llmod@divisor+3,w,c
  4003  002A5E  B4D8               	btfsc	status,2,c
  4004  002A60  D029               	goto	l784
  4005  002A62  0E01               	movlw	1
  4006  002A64  6E16               	movwf	___llmod@counter,c
  4007  002A66  D007               	goto	l2496
  4008  002A68                     l2494:
  4009  002A68  90D8               	bcf	status,0,c
  4010  002A6A  3612               	rlcf	___llmod@divisor,f,c
  4011  002A6C  3613               	rlcf	___llmod@divisor+1,f,c
  4012  002A6E  3614               	rlcf	___llmod@divisor+2,f,c
  4013  002A70  3615               	rlcf	___llmod@divisor+3,f,c
  4014  002A72  2A16               	incf	___llmod@counter,f,c
  4015  002A74  D000               	goto	l2496
  4016  002A76                     l2496:
  4017  002A76  BE15               	btfsc	___llmod@divisor+3,7,c
  4018  002A78  D002               	goto	l2498
  4019  002A7A  D7F6               	goto	l2494
  4020  002A7C  D000               	goto	l2498
  4021  002A7E                     l2498:
  4022  002A7E  5012               	movf	___llmod@divisor,w,c
  4023  002A80  5C0E               	subwf	___llmod@dividend,w,c
  4024  002A82  5013               	movf	___llmod@divisor+1,w,c
  4025  002A84  580F               	subwfb	___llmod@dividend+1,w,c
  4026  002A86  5014               	movf	___llmod@divisor+2,w,c
  4027  002A88  5810               	subwfb	___llmod@dividend+2,w,c
  4028  002A8A  5015               	movf	___llmod@divisor+3,w,c
  4029  002A8C  5811               	subwfb	___llmod@dividend+3,w,c
  4030  002A8E  A0D8               	btfss	status,0,c
  4031  002A90  D009               	goto	l2502
  4032  002A92  5012               	movf	___llmod@divisor,w,c
  4033  002A94  5E0E               	subwf	___llmod@dividend,f,c
  4034  002A96  5013               	movf	___llmod@divisor+1,w,c
  4035  002A98  5A0F               	subwfb	___llmod@dividend+1,f,c
  4036  002A9A  5014               	movf	___llmod@divisor+2,w,c
  4037  002A9C  5A10               	subwfb	___llmod@dividend+2,f,c
  4038  002A9E  5015               	movf	___llmod@divisor+3,w,c
  4039  002AA0  5A11               	subwfb	___llmod@dividend+3,f,c
  4040  002AA2  D000               	goto	l2502
  4041  002AA4                     l2502:
  4042  002AA4  90D8               	bcf	status,0,c
  4043  002AA6  3215               	rrcf	___llmod@divisor+3,f,c
  4044  002AA8  3214               	rrcf	___llmod@divisor+2,f,c
  4045  002AAA  3213               	rrcf	___llmod@divisor+1,f,c
  4046  002AAC  3212               	rrcf	___llmod@divisor,f,c
  4047  002AAE  2E16               	decfsz	___llmod@counter,f,c
  4048  002AB0  D7E6               	goto	l2498
  4049  002AB2  D000               	goto	l784
  4050  002AB4                     l784:
  4051  002AB4  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4052  002AB8  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4053  002ABC  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4054  002AC0  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4055  002AC4  0012               	return		;funcret
  4056  002AC6                     __end_of___llmod:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           prodh	equ	0xFF4
  4063                           prodl	equ	0xFF3
  4064                           postinc0	equ	0xFEE
  4065                           wreg	equ	0xFE8
  4066                           postdec1	equ	0xFE5
  4067                           fsr1l	equ	0xFE1
  4068                           postinc2	equ	0xFDE
  4069                           postdec2	equ	0xFDD
  4070                           fsr2h	equ	0xFDA
  4071                           fsr2l	equ	0xFD9
  4072                           status	equ	0xFD8
  4073                           
  4074 ;; *************** function ___lldiv *****************
  4075 ;; Defined at:
  4076 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;  dividend        4    0[COMRAM] unsigned long 
  4079 ;;  divisor         4    4[COMRAM] unsigned long 
  4080 ;; Auto vars:     Size  Location     Type
  4081 ;;  quotient        4    8[COMRAM] unsigned long 
  4082 ;;  counter         1   12[COMRAM] unsigned char 
  4083 ;; Return value:  Size  Location     Type
  4084 ;;                  4    0[COMRAM] unsigned long 
  4085 ;; Registers used:
  4086 ;;		wreg, status,2, status,0
  4087 ;; Tracked objects:
  4088 ;;		On entry : 0/0
  4089 ;;		On exit  : 0/0
  4090 ;;		Unchanged: 0/0
  4091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4092 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4093 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4095 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4096 ;;Total ram usage:       13 bytes
  4097 ;; Hardware stack levels used:    1
  4098 ;; This function calls:
  4099 ;;		Nothing
  4100 ;; This function is called by:
  4101 ;;		_printf
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text12
  4106  002948                     __ptext12:
  4107                           	opt stack 0
  4108  002948                     ___lldiv:
  4109                           	opt stack 29
  4110                           
  4111                           ;incstack = 0
  4112  002948  0E00               	movlw	0
  4113  00294A  6E09               	movwf	___lldiv@quotient,c
  4114  00294C  0E00               	movlw	0
  4115  00294E  6E0A               	movwf	___lldiv@quotient+1,c
  4116  002950  0E00               	movlw	0
  4117  002952  6E0B               	movwf	___lldiv@quotient+2,c
  4118  002954  0E00               	movlw	0
  4119  002956  6E0C               	movwf	___lldiv@quotient+3,c
  4120  002958  5005               	movf	___lldiv@divisor,w,c
  4121  00295A  1006               	iorwf	___lldiv@divisor+1,w,c
  4122  00295C  1007               	iorwf	___lldiv@divisor+2,w,c
  4123  00295E  1008               	iorwf	___lldiv@divisor+3,w,c
  4124  002960  B4D8               	btfsc	status,2,c
  4125  002962  D02F               	goto	l774
  4126  002964  0E01               	movlw	1
  4127  002966  6E0D               	movwf	___lldiv@counter,c
  4128  002968  D007               	goto	l2476
  4129  00296A                     l2474:
  4130  00296A  90D8               	bcf	status,0,c
  4131  00296C  3605               	rlcf	___lldiv@divisor,f,c
  4132  00296E  3606               	rlcf	___lldiv@divisor+1,f,c
  4133  002970  3607               	rlcf	___lldiv@divisor+2,f,c
  4134  002972  3608               	rlcf	___lldiv@divisor+3,f,c
  4135  002974  2A0D               	incf	___lldiv@counter,f,c
  4136  002976  D000               	goto	l2476
  4137  002978                     l2476:
  4138  002978  BE08               	btfsc	___lldiv@divisor+3,7,c
  4139  00297A  D002               	goto	l2478
  4140  00297C  D7F6               	goto	l2474
  4141  00297E  D000               	goto	l2478
  4142  002980                     l2478:
  4143  002980  90D8               	bcf	status,0,c
  4144  002982  3609               	rlcf	___lldiv@quotient,f,c
  4145  002984  360A               	rlcf	___lldiv@quotient+1,f,c
  4146  002986  360B               	rlcf	___lldiv@quotient+2,f,c
  4147  002988  360C               	rlcf	___lldiv@quotient+3,f,c
  4148  00298A  5005               	movf	___lldiv@divisor,w,c
  4149  00298C  5C01               	subwf	___lldiv@dividend,w,c
  4150  00298E  5006               	movf	___lldiv@divisor+1,w,c
  4151  002990  5802               	subwfb	___lldiv@dividend+1,w,c
  4152  002992  5007               	movf	___lldiv@divisor+2,w,c
  4153  002994  5803               	subwfb	___lldiv@dividend+2,w,c
  4154  002996  5008               	movf	___lldiv@divisor+3,w,c
  4155  002998  5804               	subwfb	___lldiv@dividend+3,w,c
  4156  00299A  A0D8               	btfss	status,0,c
  4157  00299C  D00A               	goto	l2486
  4158  00299E  5005               	movf	___lldiv@divisor,w,c
  4159  0029A0  5E01               	subwf	___lldiv@dividend,f,c
  4160  0029A2  5006               	movf	___lldiv@divisor+1,w,c
  4161  0029A4  5A02               	subwfb	___lldiv@dividend+1,f,c
  4162  0029A6  5007               	movf	___lldiv@divisor+2,w,c
  4163  0029A8  5A03               	subwfb	___lldiv@dividend+2,f,c
  4164  0029AA  5008               	movf	___lldiv@divisor+3,w,c
  4165  0029AC  5A04               	subwfb	___lldiv@dividend+3,f,c
  4166  0029AE  8009               	bsf	___lldiv@quotient,0,c
  4167  0029B0  D000               	goto	l2486
  4168  0029B2                     l2486:
  4169  0029B2  90D8               	bcf	status,0,c
  4170  0029B4  3208               	rrcf	___lldiv@divisor+3,f,c
  4171  0029B6  3207               	rrcf	___lldiv@divisor+2,f,c
  4172  0029B8  3206               	rrcf	___lldiv@divisor+1,f,c
  4173  0029BA  3205               	rrcf	___lldiv@divisor,f,c
  4174  0029BC  2E0D               	decfsz	___lldiv@counter,f,c
  4175  0029BE  D7E0               	goto	l2478
  4176  0029C0  D000               	goto	l774
  4177  0029C2                     l774:
  4178  0029C2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4179  0029C6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4180  0029CA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4181  0029CE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4182  0029D2  0012               	return		;funcret
  4183  0029D4                     __end_of___lldiv:
  4184                           	opt stack 0
  4185                           tblptru	equ	0xFF8
  4186                           tblptrh	equ	0xFF7
  4187                           tblptrl	equ	0xFF6
  4188                           tablat	equ	0xFF5
  4189                           prodh	equ	0xFF4
  4190                           prodl	equ	0xFF3
  4191                           postinc0	equ	0xFEE
  4192                           wreg	equ	0xFE8
  4193                           postdec1	equ	0xFE5
  4194                           fsr1l	equ	0xFE1
  4195                           postinc2	equ	0xFDE
  4196                           postdec2	equ	0xFDD
  4197                           fsr2h	equ	0xFDA
  4198                           fsr2l	equ	0xFD9
  4199                           status	equ	0xFD8
  4200                           
  4201 ;; *************** function ___fttol *****************
  4202 ;; Defined at:
  4203 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4204 ;; Parameters:    Size  Location     Type
  4205 ;;  f1              3   42[COMRAM] float 
  4206 ;; Auto vars:     Size  Location     Type
  4207 ;;  lval            4   52[COMRAM] unsigned long 
  4208 ;;  exp1            1   56[COMRAM] unsigned char 
  4209 ;;  sign1           1   51[COMRAM] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;                  4   42[COMRAM] long 
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0
  4214 ;; Tracked objects:
  4215 ;;		On entry : 0/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4220 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4221 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4222 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4223 ;;Total ram usage:       15 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; This function calls:
  4226 ;;		Nothing
  4227 ;; This function is called by:
  4228 ;;		_main
  4229 ;;		_printf
  4230 ;; This function uses a non-reentrant model
  4231 ;;
  4232                           
  4233                           	psect	text13
  4234  0024EE                     __ptext13:
  4235                           	opt stack 0
  4236  0024EE                     ___fttol:
  4237                           	opt stack 29
  4238                           
  4239                           ;incstack = 0
  4240  0024EE  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4241  0024F2  6A30               	clrf	(??___fttol+1)& (0+255),c
  4242  0024F4  6A31               	clrf	(??___fttol+2)& (0+255),c
  4243  0024F6  342C               	rlcf	___fttol@f1+1,w,c
  4244  0024F8  362F               	rlcf	??___fttol& (0+255),f,c
  4245  0024FA  E301               	bnc	u2451
  4246  0024FC  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4247  0024FE                     u2451:
  4248  0024FE  502F               	movf	??___fttol,w,c
  4249  002500  6E39               	movwf	___fttol@exp1,c
  4250  002502  5039               	movf	___fttol@exp1,w,c
  4251  002504  A4D8               	btfss	status,2,c
  4252  002506  D002               	goto	l2428
  4253  002508  D039               	goto	l2452
  4254  00250A  D063               	goto	l735
  4255  00250C                     l2428:
  4256  00250C  0E17               	movlw	23
  4257  00250E  6E2F               	movwf	??___fttol& (0+255),c
  4258  002510  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4259  002514  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4260  002518  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4261  00251C  282F               	incf	??___fttol,w,c
  4262  00251E  6E33               	movwf	(??___fttol+4)& (0+255),c
  4263  002520  D004               	goto	u2470
  4264  002522                     u2475:
  4265  002522  90D8               	bcf	status,0,c
  4266  002524  3232               	rrcf	??___fttol+3,f,c
  4267  002526  3231               	rrcf	??___fttol+2,f,c
  4268  002528  3230               	rrcf	??___fttol+1,f,c
  4269  00252A                     u2470:
  4270  00252A  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4271  00252C  D7FA               	goto	u2475
  4272  00252E  5030               	movf	??___fttol+1,w,c
  4273  002530  6E34               	movwf	___fttol@sign1,c
  4274  002532  8E2C               	bsf	___fttol@f1+1,7,c
  4275  002534  0EFF               	movlw	255
  4276  002536  162B               	andwf	___fttol@f1,f,c
  4277  002538  0EFF               	movlw	255
  4278  00253A  162C               	andwf	___fttol@f1+1,f,c
  4279  00253C  0E00               	movlw	0
  4280  00253E  162D               	andwf	___fttol@f1+2,f,c
  4281  002540  502B               	movf	___fttol@f1,w,c
  4282  002542  6E35               	movwf	___fttol@lval,c
  4283  002544  502C               	movf	___fttol@f1+1,w,c
  4284  002546  6E36               	movwf	___fttol@lval+1,c
  4285  002548  502D               	movf	___fttol@f1+2,w,c
  4286  00254A  6E37               	movwf	___fttol@lval+2,c
  4287  00254C  6A38               	clrf	___fttol@lval+3,c
  4288  00254E  0E8E               	movlw	142
  4289  002550  5E39               	subwf	___fttol@exp1,f,c
  4290  002552  AE39               	btfss	___fttol@exp1,7,c
  4291  002554  D010               	goto	l2450
  4292  002556  5039               	movf	___fttol@exp1,w,c
  4293  002558  0A80               	xorlw	128
  4294  00255A  0F8F               	addlw	143
  4295  00255C  B0D8               	btfsc	status,0,c
  4296  00255E  D003               	goto	l2446
  4297  002560  D00D               	goto	l2452
  4298  002562  D037               	goto	l735
  4299  002564  D000               	goto	l2446
  4300  002566                     l2446:
  4301  002566  90D8               	bcf	status,0,c
  4302  002568  3238               	rrcf	___fttol@lval+3,f,c
  4303  00256A  3237               	rrcf	___fttol@lval+2,f,c
  4304  00256C  3236               	rrcf	___fttol@lval+1,f,c
  4305  00256E  3235               	rrcf	___fttol@lval,f,c
  4306  002570  3E39               	incfsz	___fttol@exp1,f,c
  4307  002572  D7F9               	goto	l2446
  4308  002574  D019               	goto	l2460
  4309  002576                     l2450:
  4310  002576  0E17               	movlw	23
  4311  002578  6439               	cpfsgt	___fttol@exp1,c
  4312  00257A  D011               	goto	l2458
  4313  00257C                     l2452:
  4314  00257C  0E00               	movlw	0
  4315  00257E  6E2B               	movwf	?___fttol,c
  4316  002580  0E00               	movlw	0
  4317  002582  6E2C               	movwf	?___fttol+1,c
  4318  002584  0E00               	movlw	0
  4319  002586  6E2D               	movwf	?___fttol+2,c
  4320  002588  0E00               	movlw	0
  4321  00258A  6E2E               	movwf	?___fttol+3,c
  4322  00258C  D022               	goto	l735
  4323  00258E  D007               	goto	l2458
  4324  002590                     l2456:
  4325  002590  90D8               	bcf	status,0,c
  4326  002592  3635               	rlcf	___fttol@lval,f,c
  4327  002594  3636               	rlcf	___fttol@lval+1,f,c
  4328  002596  3637               	rlcf	___fttol@lval+2,f,c
  4329  002598  3638               	rlcf	___fttol@lval+3,f,c
  4330  00259A  0639               	decf	___fttol@exp1,f,c
  4331  00259C  D000               	goto	l2458
  4332  00259E                     l2458:
  4333  00259E  5039               	movf	___fttol@exp1,w,c
  4334  0025A0  B4D8               	btfsc	status,2,c
  4335  0025A2  D002               	goto	l2460
  4336  0025A4  D7F5               	goto	l2456
  4337  0025A6  D000               	goto	l2460
  4338  0025A8                     l2460:
  4339  0025A8  5034               	movf	___fttol@sign1,w,c
  4340  0025AA  B4D8               	btfsc	status,2,c
  4341  0025AC  D009               	goto	l2464
  4342  0025AE  1E38               	comf	___fttol@lval+3,f,c
  4343  0025B0  1E37               	comf	___fttol@lval+2,f,c
  4344  0025B2  1E36               	comf	___fttol@lval+1,f,c
  4345  0025B4  6C35               	negf	___fttol@lval,c
  4346  0025B6  0E00               	movlw	0
  4347  0025B8  2236               	addwfc	___fttol@lval+1,f,c
  4348  0025BA  2237               	addwfc	___fttol@lval+2,f,c
  4349  0025BC  2238               	addwfc	___fttol@lval+3,f,c
  4350  0025BE  D000               	goto	l2464
  4351  0025C0                     l2464:
  4352  0025C0  C035  F02B         	movff	___fttol@lval,?___fttol
  4353  0025C4  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4354  0025C8  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4355  0025CC  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4356  0025D0  D000               	goto	l735
  4357  0025D2                     l735:
  4358  0025D2  0012               	return		;funcret
  4359  0025D4                     __end_of___fttol:
  4360                           	opt stack 0
  4361                           tblptru	equ	0xFF8
  4362                           tblptrh	equ	0xFF7
  4363                           tblptrl	equ	0xFF6
  4364                           tablat	equ	0xFF5
  4365                           prodh	equ	0xFF4
  4366                           prodl	equ	0xFF3
  4367                           postinc0	equ	0xFEE
  4368                           wreg	equ	0xFE8
  4369                           postdec1	equ	0xFE5
  4370                           fsr1l	equ	0xFE1
  4371                           postinc2	equ	0xFDE
  4372                           postdec2	equ	0xFDD
  4373                           fsr2h	equ	0xFDA
  4374                           fsr2l	equ	0xFD9
  4375                           status	equ	0xFD8
  4376                           
  4377 ;; *************** function ___ftsub *****************
  4378 ;; Defined at:
  4379 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  f1              3   57[COMRAM] float 
  4382 ;;  f2              3   60[COMRAM] float 
  4383 ;; Auto vars:     Size  Location     Type
  4384 ;;		None
  4385 ;; Return value:  Size  Location     Type
  4386 ;;                  3   57[COMRAM] float 
  4387 ;; Registers used:
  4388 ;;		wreg, status,2, status,0, cstack
  4389 ;; Tracked objects:
  4390 ;;		On entry : 0/0
  4391 ;;		On exit  : 0/0
  4392 ;;		Unchanged: 0/0
  4393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4394 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4397 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4398 ;;Total ram usage:        6 bytes
  4399 ;; Hardware stack levels used:    1
  4400 ;; Hardware stack levels required when called:    2
  4401 ;; This function calls:
  4402 ;;		___ftadd
  4403 ;; This function is called by:
  4404 ;;		_printf
  4405 ;; This function uses a non-reentrant model
  4406 ;;
  4407                           
  4408                           	psect	text14
  4409  002C58                     __ptext14:
  4410                           	opt stack 0
  4411  002C58                     ___ftsub:
  4412                           	opt stack 27
  4413                           
  4414                           ;incstack = 0
  4415  002C58  503D               	movf	___ftsub@f2,w,c
  4416  002C5A  103E               	iorwf	___ftsub@f2+1,w,c
  4417  002C5C  103F               	iorwf	___ftsub@f2+2,w,c
  4418  002C5E  B4D8               	btfsc	status,2,c
  4419  002C60  D007               	goto	l2396
  4420  002C62  0E00               	movlw	0
  4421  002C64  1A3D               	xorwf	___ftsub@f2,f,c
  4422  002C66  0E00               	movlw	0
  4423  002C68  1A3E               	xorwf	___ftsub@f2+1,f,c
  4424  002C6A  0E80               	movlw	128
  4425  002C6C  1A3F               	xorwf	___ftsub@f2+2,f,c
  4426  002C6E  D000               	goto	l2396
  4427  002C70                     l2396:
  4428  002C70  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4429  002C74  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4430  002C78  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4431  002C7C  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4432  002C80  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4433  002C84  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4434  002C88  EC0C  F010         	call	___ftadd	;wreg free
  4435  002C8C  C02E  F03A         	movff	?___ftadd,?___ftsub
  4436  002C90  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4437  002C94  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4438  002C98  D000               	goto	l731
  4439  002C9A                     l731:
  4440  002C9A  0012               	return		;funcret
  4441  002C9C                     __end_of___ftsub:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           postinc0	equ	0xFEE
  4450                           wreg	equ	0xFE8
  4451                           postdec1	equ	0xFE5
  4452                           fsr1l	equ	0xFE1
  4453                           postinc2	equ	0xFDE
  4454                           postdec2	equ	0xFDD
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function ___ftadd *****************
  4460 ;; Defined at:
  4461 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;  f1              3   45[COMRAM] float 
  4464 ;;  f2              3   48[COMRAM] float 
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;  exp1            1   56[COMRAM] unsigned char 
  4467 ;;  exp2            1   55[COMRAM] unsigned char 
  4468 ;;  sign            1   54[COMRAM] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  3   45[COMRAM] float 
  4471 ;; Registers used:
  4472 ;;		wreg, status,2, status,0, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4478 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;Total ram usage:       12 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:    1
  4485 ;; This function calls:
  4486 ;;		___ftpack
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;;		_printf
  4490 ;;		___ftsub
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text15
  4495  002018                     __ptext15:
  4496                           	opt stack 0
  4497  002018                     ___ftadd:
  4498                           	opt stack 27
  4499                           
  4500                           ;incstack = 0
  4501  002018  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4502  00201C  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4503  00201E  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4504  002020  342F               	rlcf	___ftadd@f1+1,w,c
  4505  002022  3634               	rlcf	??___ftadd& (0+255),f,c
  4506  002024  E301               	bnc	u1671
  4507  002026  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4508  002028                     u1671:
  4509  002028  5034               	movf	??___ftadd,w,c
  4510  00202A  6E39               	movwf	___ftadd@exp1,c
  4511  00202C  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4512  002030  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4513  002032  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4514  002034  3432               	rlcf	___ftadd@f2+1,w,c
  4515  002036  3634               	rlcf	??___ftadd& (0+255),f,c
  4516  002038  E301               	bnc	u1681
  4517  00203A  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4518  00203C                     u1681:
  4519  00203C  5034               	movf	??___ftadd,w,c
  4520  00203E  6E38               	movwf	___ftadd@exp2,c
  4521  002040  5039               	movf	___ftadd@exp1,w,c
  4522  002042  B4D8               	btfsc	status,2,c
  4523  002044  D00B               	goto	l650
  4524  002046  5038               	movf	___ftadd@exp2,w,c
  4525  002048  5C39               	subwf	___ftadd@exp1,w,c
  4526  00204A  B0D8               	btfsc	status,0,c
  4527  00204C  D00E               	goto	l1972
  4528  00204E  5039               	movf	___ftadd@exp1,w,c
  4529  002050  0800               	sublw	0
  4530  002052  2438               	addwf	___ftadd@exp2,w,c
  4531  002054  6E34               	movwf	??___ftadd& (0+255),c
  4532  002056  0E18               	movlw	24
  4533  002058  6434               	cpfsgt	??___ftadd,c
  4534  00205A  D007               	goto	l1972
  4535  00205C                     l650:
  4536  00205C  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4537  002060  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4538  002064  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4539  002068  D0B8               	goto	l651
  4540  00206A                     l1972:
  4541  00206A  5038               	movf	___ftadd@exp2,w,c
  4542  00206C  B4D8               	btfsc	status,2,c
  4543  00206E  D00B               	goto	l654
  4544  002070  5039               	movf	___ftadd@exp1,w,c
  4545  002072  5C38               	subwf	___ftadd@exp2,w,c
  4546  002074  B0D8               	btfsc	status,0,c
  4547  002076  D00E               	goto	l1978
  4548  002078  5038               	movf	___ftadd@exp2,w,c
  4549  00207A  0800               	sublw	0
  4550  00207C  2439               	addwf	___ftadd@exp1,w,c
  4551  00207E  6E34               	movwf	??___ftadd& (0+255),c
  4552  002080  0E18               	movlw	24
  4553  002082  6434               	cpfsgt	??___ftadd,c
  4554  002084  D007               	goto	l1978
  4555  002086                     l654:
  4556  002086  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4557  00208A  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4558  00208E  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4559  002092  D0A3               	goto	l651
  4560  002094                     l1978:
  4561  002094  0E06               	movlw	6
  4562  002096  6E37               	movwf	___ftadd@sign,c
  4563  002098  AE30               	btfss	___ftadd@f1+2,7,c
  4564  00209A  D002               	goto	l1984
  4565  00209C  8E37               	bsf	___ftadd@sign,7,c
  4566  00209E  D000               	goto	l1984
  4567  0020A0                     l1984:
  4568  0020A0  BE33               	btfsc	___ftadd@f2+2,7,c
  4569  0020A2  8C37               	bsf	___ftadd@sign,6,c
  4570  0020A4  8E2F               	bsf	___ftadd@f1+1,7,c
  4571  0020A6  0EFF               	movlw	255
  4572  0020A8  162E               	andwf	___ftadd@f1,f,c
  4573  0020AA  0EFF               	movlw	255
  4574  0020AC  162F               	andwf	___ftadd@f1+1,f,c
  4575  0020AE  0E00               	movlw	0
  4576  0020B0  1630               	andwf	___ftadd@f1+2,f,c
  4577  0020B2  8E32               	bsf	___ftadd@f2+1,7,c
  4578  0020B4  0EFF               	movlw	255
  4579  0020B6  1631               	andwf	___ftadd@f2,f,c
  4580  0020B8  0EFF               	movlw	255
  4581  0020BA  1632               	andwf	___ftadd@f2+1,f,c
  4582  0020BC  0E00               	movlw	0
  4583  0020BE  1633               	andwf	___ftadd@f2+2,f,c
  4584  0020C0  5038               	movf	___ftadd@exp2,w,c
  4585  0020C2  5C39               	subwf	___ftadd@exp1,w,c
  4586  0020C4  B0D8               	btfsc	status,0,c
  4587  0020C6  D01E               	goto	l2004
  4588  0020C8                     l1994:
  4589  0020C8  90D8               	bcf	status,0,c
  4590  0020CA  3631               	rlcf	___ftadd@f2,f,c
  4591  0020CC  3632               	rlcf	___ftadd@f2+1,f,c
  4592  0020CE  3633               	rlcf	___ftadd@f2+2,f,c
  4593  0020D0  0638               	decf	___ftadd@exp2,f,c
  4594  0020D2  5039               	movf	___ftadd@exp1,w,c
  4595  0020D4  1838               	xorwf	___ftadd@exp2,w,c
  4596  0020D6  B4D8               	btfsc	status,2,c
  4597  0020D8  D00F               	goto	l2002
  4598  0020DA  0637               	decf	___ftadd@sign,f,c
  4599  0020DC  C037  F034         	movff	___ftadd@sign,??___ftadd
  4600  0020E0  0E07               	movlw	7
  4601  0020E2  1634               	andwf	??___ftadd,f,c
  4602  0020E4  B4D8               	btfsc	status,2,c
  4603  0020E6  D008               	goto	l2002
  4604  0020E8  D7EF               	goto	l1994
  4605  0020EA  D006               	goto	l2002
  4606  0020EC                     l2000:
  4607  0020EC  90D8               	bcf	status,0,c
  4608  0020EE  3230               	rrcf	___ftadd@f1+2,f,c
  4609  0020F0  322F               	rrcf	___ftadd@f1+1,f,c
  4610  0020F2  322E               	rrcf	___ftadd@f1,f,c
  4611  0020F4  2A39               	incf	___ftadd@exp1,f,c
  4612  0020F6  D000               	goto	l2002
  4613  0020F8                     l2002:
  4614  0020F8  5038               	movf	___ftadd@exp2,w,c
  4615  0020FA  1839               	xorwf	___ftadd@exp1,w,c
  4616  0020FC  B4D8               	btfsc	status,2,c
  4617  0020FE  D024               	goto	l665
  4618  002100  D7F5               	goto	l2000
  4619  002102  D022               	goto	l665
  4620  002104                     l2004:
  4621  002104  5039               	movf	___ftadd@exp1,w,c
  4622  002106  5C38               	subwf	___ftadd@exp2,w,c
  4623  002108  B0D8               	btfsc	status,0,c
  4624  00210A  D01E               	goto	l665
  4625  00210C                     l2006:
  4626  00210C  90D8               	bcf	status,0,c
  4627  00210E  362E               	rlcf	___ftadd@f1,f,c
  4628  002110  362F               	rlcf	___ftadd@f1+1,f,c
  4629  002112  3630               	rlcf	___ftadd@f1+2,f,c
  4630  002114  0639               	decf	___ftadd@exp1,f,c
  4631  002116  5039               	movf	___ftadd@exp1,w,c
  4632  002118  1838               	xorwf	___ftadd@exp2,w,c
  4633  00211A  B4D8               	btfsc	status,2,c
  4634  00211C  D00F               	goto	l2014
  4635  00211E  0637               	decf	___ftadd@sign,f,c
  4636  002120  C037  F034         	movff	___ftadd@sign,??___ftadd
  4637  002124  0E07               	movlw	7
  4638  002126  1634               	andwf	??___ftadd,f,c
  4639  002128  B4D8               	btfsc	status,2,c
  4640  00212A  D008               	goto	l2014
  4641  00212C  D7EF               	goto	l2006
  4642  00212E  D006               	goto	l2014
  4643  002130                     l2012:
  4644  002130  90D8               	bcf	status,0,c
  4645  002132  3233               	rrcf	___ftadd@f2+2,f,c
  4646  002134  3232               	rrcf	___ftadd@f2+1,f,c
  4647  002136  3231               	rrcf	___ftadd@f2,f,c
  4648  002138  2A38               	incf	___ftadd@exp2,f,c
  4649  00213A  D000               	goto	l2014
  4650  00213C                     l2014:
  4651  00213C  5038               	movf	___ftadd@exp2,w,c
  4652  00213E  1839               	xorwf	___ftadd@exp1,w,c
  4653  002140  B4D8               	btfsc	status,2,c
  4654  002142  D002               	goto	l665
  4655  002144  D7F5               	goto	l2012
  4656  002146  D000               	goto	l665
  4657  002148                     l665:
  4658  002148  AE37               	btfss	___ftadd@sign,7,c
  4659  00214A  D00C               	goto	l674
  4660  00214C  0EFF               	movlw	255
  4661  00214E  1A2E               	xorwf	___ftadd@f1,f,c
  4662  002150  0EFF               	movlw	255
  4663  002152  1A2F               	xorwf	___ftadd@f1+1,f,c
  4664  002154  0EFF               	movlw	255
  4665  002156  1A30               	xorwf	___ftadd@f1+2,f,c
  4666  002158  0E01               	movlw	1
  4667  00215A  262E               	addwf	___ftadd@f1,f,c
  4668  00215C  0E00               	movlw	0
  4669  00215E  222F               	addwfc	___ftadd@f1+1,f,c
  4670  002160  0E00               	movlw	0
  4671  002162  2230               	addwfc	___ftadd@f1+2,f,c
  4672  002164                     l674:
  4673  002164  AC37               	btfss	___ftadd@sign,6,c
  4674  002166  D00D               	goto	l2020
  4675  002168  0EFF               	movlw	255
  4676  00216A  1A31               	xorwf	___ftadd@f2,f,c
  4677  00216C  0EFF               	movlw	255
  4678  00216E  1A32               	xorwf	___ftadd@f2+1,f,c
  4679  002170  0EFF               	movlw	255
  4680  002172  1A33               	xorwf	___ftadd@f2+2,f,c
  4681  002174  0E01               	movlw	1
  4682  002176  2631               	addwf	___ftadd@f2,f,c
  4683  002178  0E00               	movlw	0
  4684  00217A  2232               	addwfc	___ftadd@f2+1,f,c
  4685  00217C  0E00               	movlw	0
  4686  00217E  2233               	addwfc	___ftadd@f2+2,f,c
  4687  002180  D000               	goto	l2020
  4688  002182                     l2020:
  4689  002182  0E00               	movlw	0
  4690  002184  6E37               	movwf	___ftadd@sign,c
  4691  002186  502E               	movf	___ftadd@f1,w,c
  4692  002188  2631               	addwf	___ftadd@f2,f,c
  4693  00218A  502F               	movf	___ftadd@f1+1,w,c
  4694  00218C  2232               	addwfc	___ftadd@f2+1,f,c
  4695  00218E  5030               	movf	___ftadd@f1+2,w,c
  4696  002190  2233               	addwfc	___ftadd@f2+2,f,c
  4697  002192  AE33               	btfss	___ftadd@f2+2,7,c
  4698  002194  D00F               	goto	l2030
  4699  002196  0EFF               	movlw	255
  4700  002198  1A31               	xorwf	___ftadd@f2,f,c
  4701  00219A  0EFF               	movlw	255
  4702  00219C  1A32               	xorwf	___ftadd@f2+1,f,c
  4703  00219E  0EFF               	movlw	255
  4704  0021A0  1A33               	xorwf	___ftadd@f2+2,f,c
  4705  0021A2  0E01               	movlw	1
  4706  0021A4  2631               	addwf	___ftadd@f2,f,c
  4707  0021A6  0E00               	movlw	0
  4708  0021A8  2232               	addwfc	___ftadd@f2+1,f,c
  4709  0021AA  0E00               	movlw	0
  4710  0021AC  2233               	addwfc	___ftadd@f2+2,f,c
  4711  0021AE  0E01               	movlw	1
  4712  0021B0  6E37               	movwf	___ftadd@sign,c
  4713  0021B2  D000               	goto	l2030
  4714  0021B4                     l2030:
  4715  0021B4  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  4716  0021B8  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4717  0021BC  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4718  0021C0  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  4719  0021C4  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  4720  0021C8  EC5B  F013         	call	___ftpack	;wreg free
  4721  0021CC  C001  F02E         	movff	?___ftpack,?___ftadd
  4722  0021D0  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  4723  0021D4  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  4724  0021D8  D000               	goto	l651
  4725  0021DA                     l651:
  4726  0021DA  0012               	return		;funcret
  4727  0021DC                     __end_of___ftadd:
  4728                           	opt stack 0
  4729                           tblptru	equ	0xFF8
  4730                           tblptrh	equ	0xFF7
  4731                           tblptrl	equ	0xFF6
  4732                           tablat	equ	0xFF5
  4733                           prodh	equ	0xFF4
  4734                           prodl	equ	0xFF3
  4735                           postinc0	equ	0xFEE
  4736                           wreg	equ	0xFE8
  4737                           postdec1	equ	0xFE5
  4738                           fsr1l	equ	0xFE1
  4739                           postinc2	equ	0xFDE
  4740                           postdec2	equ	0xFDD
  4741                           fsr2h	equ	0xFDA
  4742                           fsr2l	equ	0xFD9
  4743                           status	equ	0xFD8
  4744                           
  4745 ;; *************** function ___ftneg *****************
  4746 ;; Defined at:
  4747 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  f1              3    0[COMRAM] float 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  3    0[COMRAM] float 
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4761 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4764 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4765 ;;Total ram usage:        3 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; This function calls:
  4768 ;;		Nothing
  4769 ;; This function is called by:
  4770 ;;		_main
  4771 ;;		_printf
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           	psect	text16
  4776  002D90                     __ptext16:
  4777                           	opt stack 0
  4778  002D90                     ___ftneg:
  4779                           	opt stack 29
  4780                           
  4781                           ;incstack = 0
  4782  002D90  5001               	movf	___ftneg@f1,w,c
  4783  002D92  1002               	iorwf	___ftneg@f1+1,w,c
  4784  002D94  1003               	iorwf	___ftneg@f1+2,w,c
  4785  002D96  B4D8               	btfsc	status,2,c
  4786  002D98  D006               	goto	l724
  4787  002D9A  0E00               	movlw	0
  4788  002D9C  1A01               	xorwf	___ftneg@f1,f,c
  4789  002D9E  0E00               	movlw	0
  4790  002DA0  1A02               	xorwf	___ftneg@f1+1,f,c
  4791  002DA2  0E80               	movlw	128
  4792  002DA4  1A03               	xorwf	___ftneg@f1+2,f,c
  4793  002DA6                     l724:
  4794  002DA6  C001  F001         	movff	___ftneg@f1,?___ftneg
  4795  002DAA  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4796  002DAE  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4797  002DB2  0012               	return		;funcret
  4798  002DB4                     __end_of___ftneg:
  4799                           	opt stack 0
  4800                           tblptru	equ	0xFF8
  4801                           tblptrh	equ	0xFF7
  4802                           tblptrl	equ	0xFF6
  4803                           tablat	equ	0xFF5
  4804                           prodh	equ	0xFF4
  4805                           prodl	equ	0xFF3
  4806                           postinc0	equ	0xFEE
  4807                           wreg	equ	0xFE8
  4808                           postdec1	equ	0xFE5
  4809                           fsr1l	equ	0xFE1
  4810                           postinc2	equ	0xFDE
  4811                           postdec2	equ	0xFDD
  4812                           fsr2h	equ	0xFDA
  4813                           fsr2l	equ	0xFD9
  4814                           status	equ	0xFD8
  4815                           
  4816 ;; *************** function ___ftge *****************
  4817 ;; Defined at:
  4818 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  ff1             3    0[COMRAM] float 
  4821 ;;  ff2             3    3[COMRAM] float 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;		None               void
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4833 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4835 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;Total ram usage:        9 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_printf
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           
  4846                           	psect	text17
  4847  00281C                     __ptext17:
  4848                           	opt stack 0
  4849  00281C                     ___ftge:
  4850                           	opt stack 29
  4851                           
  4852                           ;incstack = 0
  4853  00281C  AE03               	btfss	___ftge@ff1+2,7,c
  4854  00281E  D017               	goto	l2404
  4855  002820  C001  F007         	movff	___ftge@ff1,??___ftge
  4856  002824  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4857  002828  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4858  00282C  1E07               	comf	??___ftge,f,c
  4859  00282E  1E08               	comf	??___ftge+1,f,c
  4860  002830  1E09               	comf	??___ftge+2,f,c
  4861  002832  2A07               	incf	??___ftge,f,c
  4862  002834  0E00               	movlw	0
  4863  002836  2208               	addwfc	??___ftge+1,f,c
  4864  002838  2209               	addwfc	??___ftge+2,f,c
  4865  00283A  0E00               	movlw	0
  4866  00283C  2407               	addwf	??___ftge,w,c
  4867  00283E  6E01               	movwf	___ftge@ff1,c
  4868  002840  0E00               	movlw	0
  4869  002842  2008               	addwfc	??___ftge+1,w,c
  4870  002844  6E02               	movwf	___ftge@ff1+1,c
  4871  002846  0E80               	movlw	128
  4872  002848  2009               	addwfc	??___ftge+2,w,c
  4873  00284A  6E03               	movwf	___ftge@ff1+2,c
  4874  00284C  D000               	goto	l2404
  4875  00284E                     l2404:
  4876  00284E  AE06               	btfss	___ftge@ff2+2,7,c
  4877  002850  D017               	goto	l2408
  4878  002852  C004  F007         	movff	___ftge@ff2,??___ftge
  4879  002856  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4880  00285A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4881  00285E  1E07               	comf	??___ftge,f,c
  4882  002860  1E08               	comf	??___ftge+1,f,c
  4883  002862  1E09               	comf	??___ftge+2,f,c
  4884  002864  2A07               	incf	??___ftge,f,c
  4885  002866  0E00               	movlw	0
  4886  002868  2208               	addwfc	??___ftge+1,f,c
  4887  00286A  2209               	addwfc	??___ftge+2,f,c
  4888  00286C  0E00               	movlw	0
  4889  00286E  2407               	addwf	??___ftge,w,c
  4890  002870  6E04               	movwf	___ftge@ff2,c
  4891  002872  0E00               	movlw	0
  4892  002874  2008               	addwfc	??___ftge+1,w,c
  4893  002876  6E05               	movwf	___ftge@ff2+1,c
  4894  002878  0E80               	movlw	128
  4895  00287A  2009               	addwfc	??___ftge+2,w,c
  4896  00287C  6E06               	movwf	___ftge@ff2+2,c
  4897  00287E  D000               	goto	l2408
  4898  002880                     l2408:
  4899  002880  0E00               	movlw	0
  4900  002882  1A01               	xorwf	___ftge@ff1,f,c
  4901  002884  0E00               	movlw	0
  4902  002886  1A02               	xorwf	___ftge@ff1+1,f,c
  4903  002888  0E80               	movlw	128
  4904  00288A  1A03               	xorwf	___ftge@ff1+2,f,c
  4905  00288C  0E00               	movlw	0
  4906  00288E  1A04               	xorwf	___ftge@ff2,f,c
  4907  002890  0E00               	movlw	0
  4908  002892  1A05               	xorwf	___ftge@ff2+1,f,c
  4909  002894  0E80               	movlw	128
  4910  002896  1A06               	xorwf	___ftge@ff2+2,f,c
  4911  002898  5004               	movf	___ftge@ff2,w,c
  4912  00289A  5C01               	subwf	___ftge@ff1,w,c
  4913  00289C  5005               	movf	___ftge@ff2+1,w,c
  4914  00289E  5802               	subwfb	___ftge@ff1+1,w,c
  4915  0028A0  5006               	movf	___ftge@ff2+2,w,c
  4916  0028A2  5803               	subwfb	___ftge@ff1+2,w,c
  4917  0028A4  B0D8               	btfsc	status,0,c
  4918  0028A6  D002               	goto	l2414
  4919  0028A8  90D8               	bcf	status,0,c
  4920  0028AA  D002               	goto	l708
  4921  0028AC                     l2414:
  4922  0028AC  80D8               	bsf	status,0,c
  4923  0028AE  D000               	goto	l708
  4924  0028B0                     l708:
  4925  0028B0  0012               	return		;funcret
  4926  0028B2                     __end_of___ftge:
  4927                           	opt stack 0
  4928                           tblptru	equ	0xFF8
  4929                           tblptrh	equ	0xFF7
  4930                           tblptrl	equ	0xFF6
  4931                           tablat	equ	0xFF5
  4932                           prodh	equ	0xFF4
  4933                           prodl	equ	0xFF3
  4934                           postinc0	equ	0xFEE
  4935                           wreg	equ	0xFE8
  4936                           postdec1	equ	0xFE5
  4937                           fsr1l	equ	0xFE1
  4938                           postinc2	equ	0xFDE
  4939                           postdec2	equ	0xFDD
  4940                           fsr2h	equ	0xFDA
  4941                           fsr2l	equ	0xFD9
  4942                           status	equ	0xFD8
  4943                           
  4944 ;; *************** function ___ftdiv *****************
  4945 ;; Defined at:
  4946 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  f1              3   57[COMRAM] float 
  4949 ;;  f2              3   60[COMRAM] float 
  4950 ;; Auto vars:     Size  Location     Type
  4951 ;;  f3              3   67[COMRAM] float 
  4952 ;;  sign            1   71[COMRAM] unsigned char 
  4953 ;;  exp             1   70[COMRAM] unsigned char 
  4954 ;;  cntr            1   66[COMRAM] unsigned char 
  4955 ;; Return value:  Size  Location     Type
  4956 ;;                  3   57[COMRAM] float 
  4957 ;; Registers used:
  4958 ;;		wreg, status,2, status,0, cstack
  4959 ;; Tracked objects:
  4960 ;;		On entry : 0/0
  4961 ;;		On exit  : 0/0
  4962 ;;		Unchanged: 0/0
  4963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4964 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4965 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4966 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4967 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4968 ;;Total ram usage:       15 bytes
  4969 ;; Hardware stack levels used:    1
  4970 ;; Hardware stack levels required when called:    1
  4971 ;; This function calls:
  4972 ;;		___ftpack
  4973 ;; This function is called by:
  4974 ;;		_main
  4975 ;; This function uses a non-reentrant model
  4976 ;;
  4977                           
  4978                           	psect	text18
  4979  0025D4                     __ptext18:
  4980                           	opt stack 0
  4981  0025D4                     ___ftdiv:
  4982                           	opt stack 29
  4983                           
  4984                           ;incstack = 0
  4985  0025D4  C03C  F040         	movff	___ftdiv@f1+2,??___ftdiv
  4986  0025D8  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  4987  0025DA  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  4988  0025DC  343B               	rlcf	___ftdiv@f1+1,w,c
  4989  0025DE  3640               	rlcf	??___ftdiv& (0+255),f,c
  4990  0025E0  E301               	bnc	u3081
  4991  0025E2  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  4992  0025E4                     u3081:
  4993  0025E4  5040               	movf	??___ftdiv,w,c
  4994  0025E6  6E47               	movwf	___ftdiv@exp,c
  4995  0025E8  5047               	movf	___ftdiv@exp,w,c
  4996  0025EA  A4D8               	btfss	status,2,c
  4997  0025EC  D002               	goto	l2772
  4998  0025EE  D00E               	goto	l2774
  4999  0025F0  D061               	goto	l682
  5000  0025F2                     l2772:
  5001  0025F2  C03F  F040         	movff	___ftdiv@f2+2,??___ftdiv
  5002  0025F6  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  5003  0025F8  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  5004  0025FA  343E               	rlcf	___ftdiv@f2+1,w,c
  5005  0025FC  3640               	rlcf	??___ftdiv& (0+255),f,c
  5006  0025FE  E301               	bnc	u3101
  5007  002600  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  5008  002602                     u3101:
  5009  002602  5040               	movf	??___ftdiv,w,c
  5010  002604  6E48               	movwf	___ftdiv@sign,c
  5011  002606  5048               	movf	___ftdiv@sign,w,c
  5012  002608  A4D8               	btfss	status,2,c
  5013  00260A  D007               	goto	l2778
  5014  00260C                     l2774:
  5015  00260C  0E00               	movlw	0
  5016  00260E  6E3A               	movwf	?___ftdiv,c
  5017  002610  0E00               	movlw	0
  5018  002612  6E3B               	movwf	?___ftdiv+1,c
  5019  002614  0E00               	movlw	0
  5020  002616  6E3C               	movwf	?___ftdiv+2,c
  5021  002618  D04D               	goto	l682
  5022  00261A                     l2778:
  5023  00261A  0E00               	movlw	0
  5024  00261C  6E44               	movwf	___ftdiv@f3,c
  5025  00261E  0E00               	movlw	0
  5026  002620  6E45               	movwf	___ftdiv@f3+1,c
  5027  002622  0E00               	movlw	0
  5028  002624  6E46               	movwf	___ftdiv@f3+2,c
  5029  002626  5048               	movf	___ftdiv@sign,w,c
  5030  002628  0F89               	addlw	137
  5031  00262A  5E47               	subwf	___ftdiv@exp,f,c
  5032  00262C  C03C  F048         	movff	___ftdiv@f1+2,___ftdiv@sign
  5033  002630  503F               	movf	___ftdiv@f2+2,w,c
  5034  002632  1A48               	xorwf	___ftdiv@sign,f,c
  5035  002634  0E80               	movlw	128
  5036  002636  1648               	andwf	___ftdiv@sign,f,c
  5037  002638  8E3B               	bsf	___ftdiv@f1+1,7,c
  5038  00263A  0EFF               	movlw	255
  5039  00263C  163A               	andwf	___ftdiv@f1,f,c
  5040  00263E  0EFF               	movlw	255
  5041  002640  163B               	andwf	___ftdiv@f1+1,f,c
  5042  002642  0E00               	movlw	0
  5043  002644  163C               	andwf	___ftdiv@f1+2,f,c
  5044  002646  8E3E               	bsf	___ftdiv@f2+1,7,c
  5045  002648  0EFF               	movlw	255
  5046  00264A  163D               	andwf	___ftdiv@f2,f,c
  5047  00264C  0EFF               	movlw	255
  5048  00264E  163E               	andwf	___ftdiv@f2+1,f,c
  5049  002650  0E00               	movlw	0
  5050  002652  163F               	andwf	___ftdiv@f2+2,f,c
  5051  002654  0E18               	movlw	24
  5052  002656  6E43               	movwf	___ftdiv@cntr,c
  5053  002658  D000               	goto	l2798
  5054  00265A                     l2798:
  5055  00265A  90D8               	bcf	status,0,c
  5056  00265C  3644               	rlcf	___ftdiv@f3,f,c
  5057  00265E  3645               	rlcf	___ftdiv@f3+1,f,c
  5058  002660  3646               	rlcf	___ftdiv@f3+2,f,c
  5059  002662  503D               	movf	___ftdiv@f2,w,c
  5060  002664  5C3A               	subwf	___ftdiv@f1,w,c
  5061  002666  503E               	movf	___ftdiv@f2+1,w,c
  5062  002668  583B               	subwfb	___ftdiv@f1+1,w,c
  5063  00266A  503F               	movf	___ftdiv@f2+2,w,c
  5064  00266C  583C               	subwfb	___ftdiv@f1+2,w,c
  5065  00266E  A0D8               	btfss	status,0,c
  5066  002670  D007               	goto	l685
  5067  002672  503D               	movf	___ftdiv@f2,w,c
  5068  002674  5E3A               	subwf	___ftdiv@f1,f,c
  5069  002676  503E               	movf	___ftdiv@f2+1,w,c
  5070  002678  5A3B               	subwfb	___ftdiv@f1+1,f,c
  5071  00267A  503F               	movf	___ftdiv@f2+2,w,c
  5072  00267C  5A3C               	subwfb	___ftdiv@f1+2,f,c
  5073  00267E  8044               	bsf	___ftdiv@f3,0,c
  5074  002680                     l685:
  5075  002680  90D8               	bcf	status,0,c
  5076  002682  363A               	rlcf	___ftdiv@f1,f,c
  5077  002684  363B               	rlcf	___ftdiv@f1+1,f,c
  5078  002686  363C               	rlcf	___ftdiv@f1+2,f,c
  5079  002688  2E43               	decfsz	___ftdiv@cntr,f,c
  5080  00268A  D7E7               	goto	l2798
  5081  00268C  D000               	goto	l2808
  5082  00268E                     l2808:
  5083  00268E  C044  F001         	movff	___ftdiv@f3,___ftpack@arg
  5084  002692  C045  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5085  002696  C046  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5086  00269A  C047  F004         	movff	___ftdiv@exp,___ftpack@exp
  5087  00269E  C048  F005         	movff	___ftdiv@sign,___ftpack@sign
  5088  0026A2  EC5B  F013         	call	___ftpack	;wreg free
  5089  0026A6  C001  F03A         	movff	?___ftpack,?___ftdiv
  5090  0026AA  C002  F03B         	movff	?___ftpack+1,?___ftdiv+1
  5091  0026AE  C003  F03C         	movff	?___ftpack+2,?___ftdiv+2
  5092  0026B2  D000               	goto	l682
  5093  0026B4                     l682:
  5094  0026B4  0012               	return		;funcret
  5095  0026B6                     __end_of___ftdiv:
  5096                           	opt stack 0
  5097                           tblptru	equ	0xFF8
  5098                           tblptrh	equ	0xFF7
  5099                           tblptrl	equ	0xFF6
  5100                           tablat	equ	0xFF5
  5101                           prodh	equ	0xFF4
  5102                           prodl	equ	0xFF3
  5103                           postinc0	equ	0xFEE
  5104                           wreg	equ	0xFE8
  5105                           postdec1	equ	0xFE5
  5106                           fsr1l	equ	0xFE1
  5107                           postinc2	equ	0xFDE
  5108                           postdec2	equ	0xFDD
  5109                           fsr2h	equ	0xFDA
  5110                           fsr2l	equ	0xFD9
  5111                           status	equ	0xFD8
  5112                           
  5113 ;; *************** function ___awtoft *****************
  5114 ;; Defined at:
  5115 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  c               2    8[COMRAM] int 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  sign            1   11[COMRAM] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;                  3    8[COMRAM] float 
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0, cstack
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5129 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5132 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;Total ram usage:        4 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; Hardware stack levels required when called:    1
  5136 ;; This function calls:
  5137 ;;		___ftpack
  5138 ;; This function is called by:
  5139 ;;		_main
  5140 ;; This function uses a non-reentrant model
  5141 ;;
  5142                           
  5143                           	psect	text19
  5144  002CDC                     __ptext19:
  5145                           	opt stack 0
  5146  002CDC                     ___awtoft:
  5147                           	opt stack 29
  5148                           
  5149                           ;incstack = 0
  5150  002CDC  0E00               	movlw	0
  5151  002CDE  6E0C               	movwf	___awtoft@sign,c
  5152  002CE0  AE0A               	btfss	___awtoft@c+1,7,c
  5153  002CE2  D007               	goto	l2820
  5154  002CE4  6C09               	negf	___awtoft@c,c
  5155  002CE6  1E0A               	comf	___awtoft@c+1,f,c
  5156  002CE8  B0D8               	btfsc	status,0,c
  5157  002CEA  2A0A               	incf	___awtoft@c+1,f,c
  5158  002CEC  0E01               	movlw	1
  5159  002CEE  6E0C               	movwf	___awtoft@sign,c
  5160  002CF0  D000               	goto	l2820
  5161  002CF2                     l2820:
  5162  002CF2  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5163  002CF6  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5164  002CFA  6A03               	clrf	___ftpack@arg+2,c
  5165  002CFC  0E8E               	movlw	142
  5166  002CFE  6E04               	movwf	___ftpack@exp,c
  5167  002D00  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5168  002D04  EC5B  F013         	call	___ftpack	;wreg free
  5169  002D08  C001  F009         	movff	?___ftpack,?___awtoft
  5170  002D0C  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5171  002D10  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5172  002D14  D000               	goto	l503
  5173  002D16                     l503:
  5174  002D16  0012               	return		;funcret
  5175  002D18                     __end_of___awtoft:
  5176                           	opt stack 0
  5177                           tblptru	equ	0xFF8
  5178                           tblptrh	equ	0xFF7
  5179                           tblptrl	equ	0xFF6
  5180                           tablat	equ	0xFF5
  5181                           prodh	equ	0xFF4
  5182                           prodl	equ	0xFF3
  5183                           postinc0	equ	0xFEE
  5184                           wreg	equ	0xFE8
  5185                           postdec1	equ	0xFE5
  5186                           fsr1l	equ	0xFE1
  5187                           postinc2	equ	0xFDE
  5188                           postdec2	equ	0xFDD
  5189                           fsr2h	equ	0xFDA
  5190                           fsr2l	equ	0xFD9
  5191                           status	equ	0xFD8
  5192                           
  5193 ;; *************** function ___ftpack *****************
  5194 ;; Defined at:
  5195 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;  arg             3    0[COMRAM] unsigned um
  5198 ;;  exp             1    3[COMRAM] unsigned char 
  5199 ;;  sign            1    4[COMRAM] unsigned char 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;		None
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  3    0[COMRAM] float 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2, status,0
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5211 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5214 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;Total ram usage:        8 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; This function calls:
  5218 ;;		Nothing
  5219 ;; This function is called by:
  5220 ;;		___awtoft
  5221 ;;		___ftadd
  5222 ;;		___ftdiv
  5223 ;;		___ftmul
  5224 ;;		___lltoft
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text20
  5229  0026B6                     __ptext20:
  5230                           	opt stack 0
  5231  0026B6                     ___ftpack:
  5232                           	opt stack 27
  5233                           
  5234                           ;incstack = 0
  5235  0026B6  5004               	movf	___ftpack@exp,w,c
  5236  0026B8  B4D8               	btfsc	status,2,c
  5237  0026BA  D005               	goto	l1926
  5238  0026BC  5001               	movf	___ftpack@arg,w,c
  5239  0026BE  1002               	iorwf	___ftpack@arg+1,w,c
  5240  0026C0  1003               	iorwf	___ftpack@arg+2,w,c
  5241  0026C2  A4D8               	btfss	status,2,c
  5242  0026C4  D00E               	goto	l1932
  5243  0026C6                     l1926:
  5244  0026C6  0E00               	movlw	0
  5245  0026C8  6E01               	movwf	?___ftpack,c
  5246  0026CA  0E00               	movlw	0
  5247  0026CC  6E02               	movwf	?___ftpack+1,c
  5248  0026CE  0E00               	movlw	0
  5249  0026D0  6E03               	movwf	?___ftpack+2,c
  5250  0026D2  D053               	goto	l610
  5251  0026D4  D006               	goto	l1932
  5252  0026D6                     l1930:
  5253  0026D6  2A04               	incf	___ftpack@exp,f,c
  5254  0026D8  90D8               	bcf	status,0,c
  5255  0026DA  3203               	rrcf	___ftpack@arg+2,f,c
  5256  0026DC  3202               	rrcf	___ftpack@arg+1,f,c
  5257  0026DE  3201               	rrcf	___ftpack@arg,f,c
  5258  0026E0  D000               	goto	l1932
  5259  0026E2                     l1932:
  5260  0026E2  0E00               	movlw	0
  5261  0026E4  1401               	andwf	___ftpack@arg,w,c
  5262  0026E6  6E06               	movwf	??___ftpack& (0+255),c
  5263  0026E8  0E00               	movlw	0
  5264  0026EA  1402               	andwf	___ftpack@arg+1,w,c
  5265  0026EC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5266  0026EE  0EFE               	movlw	254
  5267  0026F0  1403               	andwf	___ftpack@arg+2,w,c
  5268  0026F2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5269  0026F4  5006               	movf	??___ftpack,w,c
  5270  0026F6  1007               	iorwf	??___ftpack+1,w,c
  5271  0026F8  1008               	iorwf	??___ftpack+2,w,c
  5272  0026FA  B4D8               	btfsc	status,2,c
  5273  0026FC  D00E               	goto	l1938
  5274  0026FE  D7EB               	goto	l1930
  5275  002700  D00C               	goto	l1938
  5276  002702                     l1934:
  5277  002702  2A04               	incf	___ftpack@exp,f,c
  5278  002704  0E01               	movlw	1
  5279  002706  2601               	addwf	___ftpack@arg,f,c
  5280  002708  0E00               	movlw	0
  5281  00270A  2202               	addwfc	___ftpack@arg+1,f,c
  5282  00270C  0E00               	movlw	0
  5283  00270E  2203               	addwfc	___ftpack@arg+2,f,c
  5284  002710  90D8               	bcf	status,0,c
  5285  002712  3203               	rrcf	___ftpack@arg+2,f,c
  5286  002714  3202               	rrcf	___ftpack@arg+1,f,c
  5287  002716  3201               	rrcf	___ftpack@arg,f,c
  5288  002718  D000               	goto	l1938
  5289  00271A                     l1938:
  5290  00271A  0E00               	movlw	0
  5291  00271C  1401               	andwf	___ftpack@arg,w,c
  5292  00271E  6E06               	movwf	??___ftpack& (0+255),c
  5293  002720  0E00               	movlw	0
  5294  002722  1402               	andwf	___ftpack@arg+1,w,c
  5295  002724  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5296  002726  0EFF               	movlw	255
  5297  002728  1403               	andwf	___ftpack@arg+2,w,c
  5298  00272A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5299  00272C  5006               	movf	??___ftpack,w,c
  5300  00272E  1007               	iorwf	??___ftpack+1,w,c
  5301  002730  1008               	iorwf	??___ftpack+2,w,c
  5302  002732  B4D8               	btfsc	status,2,c
  5303  002734  D008               	goto	l1942
  5304  002736  D7E5               	goto	l1934
  5305  002738  D006               	goto	l1942
  5306  00273A                     l1940:
  5307  00273A  0604               	decf	___ftpack@exp,f,c
  5308  00273C  90D8               	bcf	status,0,c
  5309  00273E  3601               	rlcf	___ftpack@arg,f,c
  5310  002740  3602               	rlcf	___ftpack@arg+1,f,c
  5311  002742  3603               	rlcf	___ftpack@arg+2,f,c
  5312  002744  D000               	goto	l1942
  5313  002746                     l1942:
  5314  002746  BE02               	btfsc	___ftpack@arg+1,7,c
  5315  002748  D004               	goto	l621
  5316  00274A  0E02               	movlw	2
  5317  00274C  6004               	cpfslt	___ftpack@exp,c
  5318  00274E  D7F5               	goto	l1940
  5319  002750  D000               	goto	l621
  5320  002752                     l621:
  5321  002752  B004               	btfsc	___ftpack@exp,0,c
  5322  002754  D002               	goto	l1948
  5323  002756  9E02               	bcf	___ftpack@arg+1,7,c
  5324  002758  D000               	goto	l1948
  5325  00275A                     l1948:
  5326  00275A  90D8               	bcf	status,0,c
  5327  00275C  3204               	rrcf	___ftpack@exp,f,c
  5328  00275E  5004               	movf	___ftpack@exp,w,c
  5329  002760  1203               	iorwf	___ftpack@arg+2,f,c
  5330  002762  5005               	movf	___ftpack@sign,w,c
  5331  002764  B4D8               	btfsc	status,2,c
  5332  002766  D002               	goto	l1954
  5333  002768  8E03               	bsf	___ftpack@arg+2,7,c
  5334  00276A  D000               	goto	l1954
  5335  00276C                     l1954:
  5336  00276C  C001  F001         	movff	___ftpack@arg,?___ftpack
  5337  002770  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5338  002774  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5339  002778  D000               	goto	l610
  5340  00277A                     l610:
  5341  00277A  0012               	return		;funcret
  5342  00277C                     __end_of___ftpack:
  5343                           	opt stack 0
  5344                           tblptru	equ	0xFF8
  5345                           tblptrh	equ	0xFF7
  5346                           tblptrl	equ	0xFF6
  5347                           tablat	equ	0xFF5
  5348                           prodh	equ	0xFF4
  5349                           prodl	equ	0xFF3
  5350                           postinc0	equ	0xFEE
  5351                           wreg	equ	0xFE8
  5352                           postdec1	equ	0xFE5
  5353                           fsr1l	equ	0xFE1
  5354                           postinc2	equ	0xFDE
  5355                           postdec2	equ	0xFDD
  5356                           fsr2h	equ	0xFDA
  5357                           fsr2l	equ	0xFD9
  5358                           status	equ	0xFD8
  5359                           
  5360 ;; *************** function _WAIT_1_SEC *****************
  5361 ;; Defined at:
  5362 ;;		line 60 in file "Lab5p6.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;  j               2    0[COMRAM] int 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;		None               void
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5377 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5379 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;Total ram usage:        2 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		_main
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           	psect	text21
  5390  002DB4                     __ptext21:
  5391                           	opt stack 0
  5392  002DB4                     _WAIT_1_SEC:
  5393                           	opt stack 30
  5394                           
  5395                           ;Lab5p6.c: 62: for (int j=0; j<17000; j++);
  5396                           
  5397                           ;incstack = 0
  5398  002DB4  0E00               	movlw	0
  5399  002DB6  6E02               	movwf	WAIT_1_SEC@j+1,c
  5400  002DB8  0E00               	movlw	0
  5401  002DBA  6E01               	movwf	WAIT_1_SEC@j,c
  5402  002DBC                     l1530:
  5403  002DBC  BE02               	btfsc	WAIT_1_SEC@j+1,7,c
  5404  002DBE  D008               	goto	l1534
  5405  002DC0  0E68               	movlw	104
  5406  002DC2  5C01               	subwf	WAIT_1_SEC@j,w,c
  5407  002DC4  0E42               	movlw	66
  5408  002DC6  5802               	subwfb	WAIT_1_SEC@j+1,w,c
  5409  002DC8  B0D8               	btfsc	status,0,c
  5410  002DCA  D005               	goto	l85
  5411  002DCC  D001               	goto	l1534
  5412  002DCE  D003               	goto	l85
  5413  002DD0                     l1534:
  5414  002DD0  4A01               	infsnz	WAIT_1_SEC@j,f,c
  5415  002DD2  2A02               	incf	WAIT_1_SEC@j+1,f,c
  5416  002DD4  D7F3               	goto	l1530
  5417  002DD6                     l85:
  5418  002DD6  0012               	return		;funcret
  5419  002DD8                     __end_of_WAIT_1_SEC:
  5420                           	opt stack 0
  5421                           tblptru	equ	0xFF8
  5422                           tblptrh	equ	0xFF7
  5423                           tblptrl	equ	0xFF6
  5424                           tablat	equ	0xFF5
  5425                           prodh	equ	0xFF4
  5426                           prodl	equ	0xFF3
  5427                           postinc0	equ	0xFEE
  5428                           wreg	equ	0xFE8
  5429                           postdec1	equ	0xFE5
  5430                           fsr1l	equ	0xFE1
  5431                           postinc2	equ	0xFDE
  5432                           postdec2	equ	0xFDD
  5433                           fsr2h	equ	0xFDA
  5434                           fsr2l	equ	0xFD9
  5435                           status	equ	0xFD8
  5436                           
  5437 ;; *************** function _Select_ADC_Channel *****************
  5438 ;; Defined at:
  5439 ;;		line 41 in file "Lab5p6.c"
  5440 ;; Parameters:    Size  Location     Type
  5441 ;;  channel         1    wreg     unsigned char 
  5442 ;; Auto vars:     Size  Location     Type
  5443 ;;  channel         1    0[COMRAM] unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;		None               void
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0, prodl, prodh
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5454 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5457 ;;Total ram usage:        1 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; This function calls:
  5460 ;;		Nothing
  5461 ;; This function is called by:
  5462 ;;		_main
  5463 ;; This function uses a non-reentrant model
  5464 ;;
  5465                           
  5466                           	psect	text22
  5467  002E36                     __ptext22:
  5468                           	opt stack 0
  5469  002E36                     _Select_ADC_Channel:
  5470                           	opt stack 30
  5471                           
  5472                           ;incstack = 0
  5473                           ;Select_ADC_Channel@channel stored from wreg
  5474  002E36  6E01               	movwf	Select_ADC_Channel@channel,c
  5475                           
  5476                           ;Lab5p6.c: 43: ADCON0 = channel * 4 + 1;
  5477  002E38  5001               	movf	Select_ADC_Channel@channel,w,c
  5478  002E3A  0D04               	mullw	4
  5479  002E3C  28F3               	incf	prodl,w,c
  5480  002E3E  6EC2               	movwf	4034,c	;volatile
  5481  002E40  0012               	return		;funcret
  5482  002E42                     __end_of_Select_ADC_Channel:
  5483                           	opt stack 0
  5484                           tblptru	equ	0xFF8
  5485                           tblptrh	equ	0xFF7
  5486                           tblptrl	equ	0xFF6
  5487                           tablat	equ	0xFF5
  5488                           prodh	equ	0xFF4
  5489                           prodl	equ	0xFF3
  5490                           postinc0	equ	0xFEE
  5491                           wreg	equ	0xFE8
  5492                           postdec1	equ	0xFE5
  5493                           fsr1l	equ	0xFE1
  5494                           postinc2	equ	0xFDE
  5495                           postdec2	equ	0xFDD
  5496                           fsr2h	equ	0xFDA
  5497                           fsr2l	equ	0xFD9
  5498                           status	equ	0xFD8
  5499                           
  5500 ;; *************** function _Init_UART *****************
  5501 ;; Defined at:
  5502 ;;		line 52 in file "Lab5p6.c"
  5503 ;; Parameters:    Size  Location     Type
  5504 ;;		None
  5505 ;; Auto vars:     Size  Location     Type
  5506 ;;		None
  5507 ;; Return value:  Size  Location     Type
  5508 ;;		None               void
  5509 ;; Registers used:
  5510 ;;		wreg, status,2, cstack
  5511 ;; Tracked objects:
  5512 ;;		On entry : 0/0
  5513 ;;		On exit  : 0/0
  5514 ;;		Unchanged: 0/0
  5515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5520 ;;Total ram usage:        0 bytes
  5521 ;; Hardware stack levels used:    1
  5522 ;; Hardware stack levels required when called:    1
  5523 ;; This function calls:
  5524 ;;		_OpenUSART
  5525 ;; This function is called by:
  5526 ;;		_main
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           
  5530                           	psect	text23
  5531  002E06                     __ptext23:
  5532                           	opt stack 0
  5533  002E06                     _Init_UART:
  5534                           	opt stack 29
  5535                           
  5536                           ;Lab5p6.c: 54: OpenUSART (0b01111111 & 0b10111111 &
  5537                           ;Lab5p6.c: 55: 0b11111110 & 0b11111101 & 0b11111111 &
  5538                           ;Lab5p6.c: 56: 0b11111111, 25);
  5539                           
  5540                           ;incstack = 0
  5541  002E06  0E00               	movlw	0
  5542  002E08  6E02               	movwf	OpenUSART@spbrg+1,c
  5543  002E0A  0E19               	movlw	25
  5544  002E0C  6E01               	movwf	OpenUSART@spbrg,c
  5545  002E0E  0E3C               	movlw	60
  5546  002E10  EC63  F015         	call	_OpenUSART
  5547                           
  5548                           ;Lab5p6.c: 57: OSCCON = 0x60;
  5549  002E14  0E60               	movlw	96
  5550  002E16  6ED3               	movwf	4051,c	;volatile
  5551  002E18  0012               	return		;funcret
  5552  002E1A                     __end_of_Init_UART:
  5553                           	opt stack 0
  5554                           tblptru	equ	0xFF8
  5555                           tblptrh	equ	0xFF7
  5556                           tblptrl	equ	0xFF6
  5557                           tablat	equ	0xFF5
  5558                           prodh	equ	0xFF4
  5559                           prodl	equ	0xFF3
  5560                           postinc0	equ	0xFEE
  5561                           wreg	equ	0xFE8
  5562                           postdec1	equ	0xFE5
  5563                           fsr1l	equ	0xFE1
  5564                           postinc2	equ	0xFDE
  5565                           postdec2	equ	0xFDD
  5566                           fsr2h	equ	0xFDA
  5567                           fsr2l	equ	0xFD9
  5568                           status	equ	0xFD8
  5569                           
  5570 ;; *************** function _OpenUSART *****************
  5571 ;; Defined at:
  5572 ;;		line 73 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  config          1    wreg     unsigned char 
  5575 ;;  spbrg           2    0[COMRAM] unsigned int 
  5576 ;; Auto vars:     Size  Location     Type
  5577 ;;  config          1    2[COMRAM] unsigned char 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;		None               void
  5580 ;; Registers used:
  5581 ;;		wreg, status,2
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5587 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5590 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;Total ram usage:        3 bytes
  5592 ;; Hardware stack levels used:    1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_Init_UART
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text24
  5601  002AC6                     __ptext24:
  5602                           	opt stack 0
  5603  002AC6                     _OpenUSART:
  5604                           	opt stack 29
  5605                           
  5606                           ;incstack = 0
  5607                           ;OpenUSART@config stored from wreg
  5608  002AC6  6E03               	movwf	OpenUSART@config,c
  5609  002AC8  0E00               	movlw	0
  5610  002ACA  6EAC               	movwf	4012,c	;volatile
  5611  002ACC  0E00               	movlw	0
  5612  002ACE  6EAB               	movwf	4011,c	;volatile
  5613  002AD0  A003               	btfss	OpenUSART@config,0,c
  5614  002AD2  D002               	goto	l2172
  5615  002AD4  88AC               	bsf	4012,4,c	;volatile
  5616  002AD6  D000               	goto	l2172
  5617  002AD8                     l2172:
  5618  002AD8  A203               	btfss	OpenUSART@config,1,c
  5619  002ADA  D003               	goto	l2176
  5620  002ADC  8CAC               	bsf	4012,6,c	;volatile
  5621  002ADE  8CAB               	bsf	4011,6,c	;volatile
  5622  002AE0  D000               	goto	l2176
  5623  002AE2                     l2176:
  5624  002AE2  A403               	btfss	OpenUSART@config,2,c
  5625  002AE4  D002               	goto	l2180
  5626  002AE6  8EAC               	bsf	4012,7,c	;volatile
  5627  002AE8  D000               	goto	l2180
  5628  002AEA                     l2180:
  5629  002AEA  A603               	btfss	OpenUSART@config,3,c
  5630  002AEC  D002               	goto	l273
  5631  002AEE  88AB               	bsf	4011,4,c	;volatile
  5632  002AF0  D002               	goto	l2184
  5633  002AF2                     l273:
  5634  002AF2  8AAB               	bsf	4011,5,c	;volatile
  5635  002AF4  D000               	goto	l2184
  5636  002AF6                     l2184:
  5637  002AF6  B803               	btfsc	OpenUSART@config,4,c
  5638  002AF8  84AC               	bsf	4012,2,c	;volatile
  5639  002AFA  989E               	bcf	3998,4,c	;volatile
  5640  002AFC  AA03               	btfss	OpenUSART@config,5,c
  5641  002AFE  D002               	goto	l2192
  5642  002B00  86AB               	bsf	4011,3,c	;volatile
  5643  002B02  D000               	goto	l2192
  5644  002B04                     l2192:
  5645  002B04  AC03               	btfss	OpenUSART@config,6,c
  5646  002B06  D002               	goto	l277
  5647  002B08  8A9D               	bsf	3997,5,c	;volatile
  5648  002B0A  D001               	goto	l278
  5649  002B0C                     l277:
  5650  002B0C  9A9D               	bcf	3997,5,c	;volatile
  5651  002B0E                     l278:
  5652  002B0E  9A9E               	bcf	3998,5,c	;volatile
  5653  002B10  AE03               	btfss	OpenUSART@config,7,c
  5654  002B12  D002               	goto	l279
  5655  002B14  889D               	bsf	3997,4,c	;volatile
  5656  002B16  D001               	goto	l280
  5657  002B18                     l279:
  5658  002B18  989D               	bcf	3997,4,c	;volatile
  5659  002B1A                     l280:
  5660  002B1A  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5661  002B1E  5002               	movf	OpenUSART@spbrg+1,w,c
  5662  002B20  6EB0               	movwf	4016,c	;volatile
  5663  002B22  8AAC               	bsf	4012,5,c	;volatile
  5664  002B24  8EAB               	bsf	4011,7,c	;volatile
  5665  002B26  9C94               	bcf	3988,6,c	;volatile
  5666  002B28  8E94               	bsf	3988,7,c	;volatile
  5667  002B2A  B8AC               	btfsc	4012,4,c	;volatile
  5668  002B2C  BEAC               	btfsc	4012,7,c	;volatile
  5669  002B2E  D002               	goto	l282
  5670  002B30  8C94               	bsf	3988,6,c	;volatile
  5671  002B32  D000               	goto	l282
  5672  002B34                     l282:
  5673  002B34  0012               	return		;funcret
  5674  002B36                     __end_of_OpenUSART:
  5675                           	opt stack 0
  5676                           tblptru	equ	0xFF8
  5677                           tblptrh	equ	0xFF7
  5678                           tblptrl	equ	0xFF6
  5679                           tablat	equ	0xFF5
  5680                           prodh	equ	0xFF4
  5681                           prodl	equ	0xFF3
  5682                           postinc0	equ	0xFEE
  5683                           wreg	equ	0xFE8
  5684                           postdec1	equ	0xFE5
  5685                           fsr1l	equ	0xFE1
  5686                           postinc2	equ	0xFDE
  5687                           postdec2	equ	0xFDD
  5688                           fsr2h	equ	0xFDA
  5689                           fsr2l	equ	0xFD9
  5690                           status	equ	0xFD8
  5691                           
  5692 ;; *************** function _Init_TRIS *****************
  5693 ;; Defined at:
  5694 ;;		line 104 in file "Lab5p6.c"
  5695 ;; Parameters:    Size  Location     Type
  5696 ;;		None
  5697 ;; Auto vars:     Size  Location     Type
  5698 ;;		None
  5699 ;; Return value:  Size  Location     Type
  5700 ;;		None               void
  5701 ;; Registers used:
  5702 ;;		wreg, status,2
  5703 ;; Tracked objects:
  5704 ;;		On entry : 0/0
  5705 ;;		On exit  : 0/0
  5706 ;;		Unchanged: 0/0
  5707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;Total ram usage:        0 bytes
  5713 ;; Hardware stack levels used:    1
  5714 ;; This function calls:
  5715 ;;		Nothing
  5716 ;; This function is called by:
  5717 ;;		_main
  5718 ;; This function uses a non-reentrant model
  5719 ;;
  5720                           
  5721                           	psect	text25
  5722  002DF0                     __ptext25:
  5723                           	opt stack 0
  5724  002DF0                     _Init_TRIS:
  5725                           	opt stack 30
  5726                           
  5727                           ;Lab5p6.c: 106: TRISA = 0x0F;
  5728                           
  5729                           ;incstack = 0
  5730  002DF0  0E0F               	movlw	15
  5731  002DF2  6E92               	movwf	3986,c	;volatile
  5732                           
  5733                           ;Lab5p6.c: 107: TRISB = 0x00;
  5734  002DF4  0E00               	movlw	0
  5735  002DF6  6E93               	movwf	3987,c	;volatile
  5736                           
  5737                           ;Lab5p6.c: 108: TRISC = 0x00;
  5738  002DF8  0E00               	movlw	0
  5739  002DFA  6E94               	movwf	3988,c	;volatile
  5740                           
  5741                           ;Lab5p6.c: 109: TRISD = 0x00;
  5742  002DFC  0E00               	movlw	0
  5743  002DFE  6E95               	movwf	3989,c	;volatile
  5744                           
  5745                           ;Lab5p6.c: 110: TRISE = 0x00;
  5746  002E00  0E00               	movlw	0
  5747  002E02  6E96               	movwf	3990,c	;volatile
  5748  002E04  0012               	return		;funcret
  5749  002E06                     __end_of_Init_TRIS:
  5750                           	opt stack 0
  5751                           tblptru	equ	0xFF8
  5752                           tblptrh	equ	0xFF7
  5753                           tblptrl	equ	0xFF6
  5754                           tablat	equ	0xFF5
  5755                           prodh	equ	0xFF4
  5756                           prodl	equ	0xFF3
  5757                           postinc0	equ	0xFEE
  5758                           wreg	equ	0xFE8
  5759                           postdec1	equ	0xFE5
  5760                           fsr1l	equ	0xFE1
  5761                           postinc2	equ	0xFDE
  5762                           postdec2	equ	0xFDD
  5763                           fsr2h	equ	0xFDA
  5764                           fsr2l	equ	0xFD9
  5765                           status	equ	0xFD8
  5766                           
  5767 ;; *************** function _Init_ADC *****************
  5768 ;; Defined at:
  5769 ;;		line 112 in file "Lab5p6.c"
  5770 ;; Parameters:    Size  Location     Type
  5771 ;;		None
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;		None
  5774 ;; Return value:  Size  Location     Type
  5775 ;;		None               void
  5776 ;; Registers used:
  5777 ;;		wreg, status,2
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/0
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;Total ram usage:        0 bytes
  5788 ;; Hardware stack levels used:    1
  5789 ;; This function calls:
  5790 ;;		Nothing
  5791 ;; This function is called by:
  5792 ;;		_main
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text26
  5797  002E28                     __ptext26:
  5798                           	opt stack 0
  5799  002E28                     _Init_ADC:
  5800                           	opt stack 30
  5801                           
  5802                           ;Lab5p6.c: 114: ADCON0 = 0x01;
  5803                           
  5804                           ;incstack = 0
  5805  002E28  0E01               	movlw	1
  5806  002E2A  6EC2               	movwf	4034,c	;volatile
  5807                           
  5808                           ;Lab5p6.c: 115: ADCON1 = 0x1B;
  5809  002E2C  0E1B               	movlw	27
  5810  002E2E  6EC1               	movwf	4033,c	;volatile
  5811                           
  5812                           ;Lab5p6.c: 116: ADCON2 = 0xA9;
  5813  002E30  0EA9               	movlw	169
  5814  002E32  6EC0               	movwf	4032,c	;volatile
  5815  002E34  0012               	return		;funcret
  5816  002E36                     __end_of_Init_ADC:
  5817                           	opt stack 0
  5818                           tblptru	equ	0xFF8
  5819                           tblptrh	equ	0xFF7
  5820                           tblptrl	equ	0xFF6
  5821                           tablat	equ	0xFF5
  5822                           prodh	equ	0xFF4
  5823                           prodl	equ	0xFF3
  5824                           postinc0	equ	0xFEE
  5825                           wreg	equ	0xFE8
  5826                           postdec1	equ	0xFE5
  5827                           fsr1l	equ	0xFE1
  5828                           postinc2	equ	0xFDE
  5829                           postdec2	equ	0xFDD
  5830                           fsr2h	equ	0xFDA
  5831                           fsr2l	equ	0xFD9
  5832                           status	equ	0xFD8
  5833                           
  5834 ;; *************** function _Get_Full_ADC *****************
  5835 ;; Defined at:
  5836 ;;		line 119 in file "Lab5p6.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;		None
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;  result          2    4[COMRAM] int 
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  2    0[COMRAM] unsigned int 
  5843 ;; Registers used:
  5844 ;;		wreg, status,2, status,0
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5850 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5851 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;Total ram usage:        6 bytes
  5855 ;; Hardware stack levels used:    1
  5856 ;; This function calls:
  5857 ;;		Nothing
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text27
  5864  002D6A                     __ptext27:
  5865                           	opt stack 0
  5866  002D6A                     _Get_Full_ADC:
  5867                           	opt stack 30
  5868                           
  5869                           ;Lab5p6.c: 121: int result;
  5870                           ;Lab5p6.c: 122: ADCON0bits.GO=1;
  5871                           
  5872                           ;incstack = 0
  5873  002D6A  82C2               	bsf	4034,1,c	;volatile
  5874                           
  5875                           ;Lab5p6.c: 123: while(ADCON0bits.DONE==1);
  5876  002D6C  D000               	goto	l102
  5877  002D6E                     l102:
  5878  002D6E  B2C2               	btfsc	4034,1,c	;volatile
  5879  002D70  D7FE               	goto	l102
  5880                           
  5881                           ;Lab5p6.c: 124: result = (ADRESH * 0x100) + ADRESL;
  5882  002D72  50C4               	movf	4036,w,c	;volatile
  5883  002D74  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  5884  002D76  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  5885  002D78  50C3               	movf	4035,w,c	;volatile
  5886  002D7A  2403               	addwf	??_Get_Full_ADC,w,c
  5887  002D7C  6E05               	movwf	Get_Full_ADC@result,c
  5888  002D7E  0E00               	movlw	0
  5889  002D80  2004               	addwfc	??_Get_Full_ADC+1,w,c
  5890  002D82  6E06               	movwf	Get_Full_ADC@result+1,c
  5891                           
  5892                           ;Lab5p6.c: 126: return result;
  5893  002D84  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  5894  002D88  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  5895  002D8C  D000               	goto	l105
  5896  002D8E                     l105:
  5897  002D8E  0012               	return		;funcret
  5898  002D90                     __end_of_Get_Full_ADC:
  5899                           	opt stack 0
  5900                           tblptru	equ	0xFF8
  5901                           tblptrh	equ	0xFF7
  5902                           tblptrl	equ	0xFF6
  5903                           tablat	equ	0xFF5
  5904                           prodh	equ	0xFF4
  5905                           prodl	equ	0xFF3
  5906                           postinc0	equ	0xFEE
  5907                           wreg	equ	0xFE8
  5908                           postdec1	equ	0xFE5
  5909                           fsr1l	equ	0xFE1
  5910                           postinc2	equ	0xFDE
  5911                           postdec2	equ	0xFDD
  5912                           fsr2h	equ	0xFDA
  5913                           fsr2l	equ	0xFD9
  5914                           status	equ	0xFD8
  5915                           
  5916 ;; *************** function _Display_Upper_Digit *****************
  5917 ;; Defined at:
  5918 ;;		line 129 in file "Lab5p6.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  digit           1    wreg     unsigned char 
  5921 ;; Auto vars:     Size  Location     Type
  5922 ;;  digit           1    1[COMRAM] unsigned char 
  5923 ;;  PE              1    0[COMRAM] unsigned char 
  5924 ;; Return value:  Size  Location     Type
  5925 ;;		None               void
  5926 ;; Registers used:
  5927 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5928 ;; Tracked objects:
  5929 ;;		On entry : 0/0
  5930 ;;		On exit  : 0/0
  5931 ;;		Unchanged: 0/0
  5932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;Total ram usage:        2 bytes
  5938 ;; Hardware stack levels used:    1
  5939 ;; This function calls:
  5940 ;;		Nothing
  5941 ;; This function is called by:
  5942 ;;		_main
  5943 ;; This function uses a non-reentrant model
  5944 ;;
  5945                           
  5946                           	psect	text28
  5947  002C9C                     __ptext28:
  5948                           	opt stack 0
  5949  002C9C                     _Display_Upper_Digit:
  5950                           	opt stack 30
  5951                           
  5952                           ;incstack = 0
  5953                           ;Display_Upper_Digit@digit stored from wreg
  5954  002C9C  6E02               	movwf	Display_Upper_Digit@digit,c
  5955                           
  5956                           ;Lab5p6.c: 131: PORTC = array[digit] & 0x3F;
  5957  002C9E  5002               	movf	Display_Upper_Digit@digit,w,c
  5958  002CA0  0D01               	mullw	1
  5959  002CA2  0E75               	movlw	low _array
  5960  002CA4  24F3               	addwf	prodl,w,c
  5961  002CA6  6ED9               	movwf	fsr2l,c
  5962  002CA8  0E00               	movlw	high _array
  5963  002CAA  20F4               	addwfc	prodh,w,c
  5964  002CAC  6EDA               	movwf	fsr2h,c
  5965  002CAE  50DF               	movf	indf2,w,c
  5966  002CB0  0B3F               	andlw	63
  5967  002CB2  6E82               	movwf	3970,c	;volatile
  5968                           
  5969                           ;Lab5p6.c: 132: char PE = array[digit] & 0x40;
  5970  002CB4  5002               	movf	Display_Upper_Digit@digit,w,c
  5971  002CB6  0D01               	mullw	1
  5972  002CB8  0E75               	movlw	low _array
  5973  002CBA  24F3               	addwf	prodl,w,c
  5974  002CBC  6ED9               	movwf	fsr2l,c
  5975  002CBE  0E00               	movlw	high _array
  5976  002CC0  20F4               	addwfc	prodh,w,c
  5977  002CC2  6EDA               	movwf	fsr2h,c
  5978  002CC4  50DF               	movf	indf2,w,c
  5979  002CC6  0B40               	andlw	64
  5980  002CC8  6E01               	movwf	Display_Upper_Digit@PE,c
  5981                           
  5982                           ;Lab5p6.c: 133: if (PE == 0) PORTE = 0x00;
  5983  002CCA  5001               	movf	Display_Upper_Digit@PE,w,c
  5984  002CCC  A4D8               	btfss	status,2,c
  5985  002CCE  D002               	goto	l1556
  5986  002CD0  0E00               	movlw	0
  5987  002CD2  D001               	goto	L8
  5988  002CD4                     l1556:
  5989                           
  5990                           ;Lab5p6.c: 134: else PORTE = 0x03;
  5991  002CD4  0E03               	movlw	3
  5992  002CD6                     L8:
  5993  002CD6  6E84               	movwf	3972,c	;volatile
  5994  002CD8  D000               	goto	l110
  5995  002CDA                     l110:
  5996  002CDA  0012               	return		;funcret
  5997  002CDC                     __end_of_Display_Upper_Digit:
  5998                           	opt stack 0
  5999                           tblptru	equ	0xFF8
  6000                           tblptrh	equ	0xFF7
  6001                           tblptrl	equ	0xFF6
  6002                           tablat	equ	0xFF5
  6003                           prodh	equ	0xFF4
  6004                           prodl	equ	0xFF3
  6005                           postinc0	equ	0xFEE
  6006                           wreg	equ	0xFE8
  6007                           postdec1	equ	0xFE5
  6008                           fsr1l	equ	0xFE1
  6009                           indf2	equ	0xFDF
  6010                           postinc2	equ	0xFDE
  6011                           postdec2	equ	0xFDD
  6012                           fsr2h	equ	0xFDA
  6013                           fsr2l	equ	0xFD9
  6014                           status	equ	0xFD8
  6015                           
  6016 ;; *************** function _Display_Lower_Digit *****************
  6017 ;; Defined at:
  6018 ;;		line 137 in file "Lab5p6.c"
  6019 ;; Parameters:    Size  Location     Type
  6020 ;;  digit           1    wreg     unsigned char 
  6021 ;; Auto vars:     Size  Location     Type
  6022 ;;  digit           1    0[COMRAM] unsigned char 
  6023 ;; Return value:  Size  Location     Type
  6024 ;;		None               void
  6025 ;; Registers used:
  6026 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6027 ;; Tracked objects:
  6028 ;;		On entry : 0/0
  6029 ;;		On exit  : 0/0
  6030 ;;		Unchanged: 0/0
  6031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6033 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6035 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6036 ;;Total ram usage:        1 bytes
  6037 ;; Hardware stack levels used:    1
  6038 ;; This function calls:
  6039 ;;		Nothing
  6040 ;; This function is called by:
  6041 ;;		_main
  6042 ;; This function uses a non-reentrant model
  6043 ;;
  6044                           
  6045                           	psect	text29
  6046  002DD8                     __ptext29:
  6047                           	opt stack 0
  6048  002DD8                     _Display_Lower_Digit:
  6049                           	opt stack 30
  6050                           
  6051                           ;incstack = 0
  6052                           ;Display_Lower_Digit@digit stored from wreg
  6053  002DD8  6E01               	movwf	Display_Lower_Digit@digit,c
  6054                           
  6055                           ;Lab5p6.c: 139: PORTD = array[digit];
  6056  002DDA  5001               	movf	Display_Lower_Digit@digit,w,c
  6057  002DDC  0D01               	mullw	1
  6058  002DDE  0E75               	movlw	low _array
  6059  002DE0  24F3               	addwf	prodl,w,c
  6060  002DE2  6ED9               	movwf	fsr2l,c
  6061  002DE4  0E00               	movlw	high _array
  6062  002DE6  20F4               	addwfc	prodh,w,c
  6063  002DE8  6EDA               	movwf	fsr2h,c
  6064  002DEA  50DF               	movf	indf2,w,c
  6065  002DEC  6E83               	movwf	3971,c	;volatile
  6066  002DEE  0012               	return		;funcret
  6067  002DF0                     __end_of_Display_Lower_Digit:
  6068                           	opt stack 0
  6069                           tblptru	equ	0xFF8
  6070                           tblptrh	equ	0xFF7
  6071                           tblptrl	equ	0xFF6
  6072                           tablat	equ	0xFF5
  6073                           prodh	equ	0xFF4
  6074                           prodl	equ	0xFF3
  6075                           postinc0	equ	0xFEE
  6076                           wreg	equ	0xFE8
  6077                           postdec1	equ	0xFE5
  6078                           fsr1l	equ	0xFE1
  6079                           indf2	equ	0xFDF
  6080                           postinc2	equ	0xFDE
  6081                           postdec2	equ	0xFDD
  6082                           fsr2h	equ	0xFDA
  6083                           fsr2l	equ	0xFD9
  6084                           status	equ	0xFD8
  6085                           
  6086 ;; *************** function _DO_DISPLAY_D3 *****************
  6087 ;; Defined at:
  6088 ;;		line 189 in file "Lab5p6.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;  voltage         2    0[COMRAM] int 
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;		None               void
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6102 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;Total ram usage:        2 bytes
  6107 ;; Hardware stack levels used:    1
  6108 ;; Hardware stack levels required when called:    1
  6109 ;; This function calls:
  6110 ;;		_SET_D3_GREEN
  6111 ;;		_SET_D3_RED
  6112 ;;		_SET_D3_YELLOW
  6113 ;; This function is called by:
  6114 ;;		_main
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text30
  6119  002C04                     __ptext30:
  6120                           	opt stack 0
  6121  002C04                     _DO_DISPLAY_D3:
  6122                           	opt stack 29
  6123                           
  6124                           ;Lab5p6.c: 191: if (voltage < 2500)
  6125                           
  6126                           ;incstack = 0
  6127  002C04  BE02               	btfsc	DO_DISPLAY_D3@voltage+1,7,c
  6128  002C06  D006               	goto	l2754
  6129  002C08  0EC4               	movlw	196
  6130  002C0A  5C01               	subwf	DO_DISPLAY_D3@voltage,w,c
  6131  002C0C  0E09               	movlw	9
  6132  002C0E  5802               	subwfb	DO_DISPLAY_D3@voltage+1,w,c
  6133  002C10  B0D8               	btfsc	status,0,c
  6134  002C12  D003               	goto	l2756
  6135  002C14                     l2754:
  6136                           
  6137                           ;Lab5p6.c: 192: {
  6138                           ;Lab5p6.c: 193: SET_D3_RED();
  6139  002C14  EC29  F017         	call	_SET_D3_RED	;wreg free
  6140  002C18  D000               	goto	l2756
  6141  002C1A                     l2756:
  6142                           
  6143                           ;Lab5p6.c: 194: }
  6144                           ;Lab5p6.c: 195: if (voltage >= 2500 && voltage < 3500)
  6145  002C1A  BE02               	btfsc	DO_DISPLAY_D3@voltage+1,7,c
  6146  002C1C  D011               	goto	l2762
  6147  002C1E  0EC4               	movlw	196
  6148  002C20  5C01               	subwf	DO_DISPLAY_D3@voltage,w,c
  6149  002C22  0E09               	movlw	9
  6150  002C24  5802               	subwfb	DO_DISPLAY_D3@voltage+1,w,c
  6151  002C26  A0D8               	btfss	status,0,c
  6152  002C28  D00B               	goto	l2762
  6153  002C2A  BE02               	btfsc	DO_DISPLAY_D3@voltage+1,7,c
  6154  002C2C  D006               	goto	l2760
  6155  002C2E  0EAC               	movlw	172
  6156  002C30  5C01               	subwf	DO_DISPLAY_D3@voltage,w,c
  6157  002C32  0E0D               	movlw	13
  6158  002C34  5802               	subwfb	DO_DISPLAY_D3@voltage+1,w,c
  6159  002C36  B0D8               	btfsc	status,0,c
  6160  002C38  D003               	goto	l2762
  6161  002C3A                     l2760:
  6162                           
  6163                           ;Lab5p6.c: 196: {
  6164                           ;Lab5p6.c: 197: SET_D3_GREEN();
  6165  002C3A  EC2C  F017         	call	_SET_D3_GREEN	;wreg free
  6166  002C3E  D000               	goto	l2762
  6167  002C40                     l2762:
  6168                           
  6169                           ;Lab5p6.c: 198: }
  6170                           ;Lab5p6.c: 199: if (voltage >= 3500)
  6171  002C40  BE02               	btfsc	DO_DISPLAY_D3@voltage+1,7,c
  6172  002C42  D009               	goto	l133
  6173  002C44  0EAC               	movlw	172
  6174  002C46  5C01               	subwf	DO_DISPLAY_D3@voltage,w,c
  6175  002C48  0E0D               	movlw	13
  6176  002C4A  5802               	subwfb	DO_DISPLAY_D3@voltage+1,w,c
  6177  002C4C  A0D8               	btfss	status,0,c
  6178  002C4E  D003               	goto	l133
  6179                           
  6180                           ;Lab5p6.c: 200: {
  6181                           ;Lab5p6.c: 201: SET_D3_YELLOW();
  6182  002C50  EC26  F017         	call	_SET_D3_YELLOW	;wreg free
  6183  002C54  D000               	goto	l133
  6184  002C56                     l133:
  6185  002C56  0012               	return		;funcret
  6186  002C58                     __end_of_DO_DISPLAY_D3:
  6187                           	opt stack 0
  6188                           tblptru	equ	0xFF8
  6189                           tblptrh	equ	0xFF7
  6190                           tblptrl	equ	0xFF6
  6191                           tablat	equ	0xFF5
  6192                           prodh	equ	0xFF4
  6193                           prodl	equ	0xFF3
  6194                           postinc0	equ	0xFEE
  6195                           wreg	equ	0xFE8
  6196                           postdec1	equ	0xFE5
  6197                           fsr1l	equ	0xFE1
  6198                           indf2	equ	0xFDF
  6199                           postinc2	equ	0xFDE
  6200                           postdec2	equ	0xFDD
  6201                           fsr2h	equ	0xFDA
  6202                           fsr2l	equ	0xFD9
  6203                           status	equ	0xFD8
  6204                           
  6205 ;; *************** function _SET_D3_YELLOW *****************
  6206 ;; Defined at:
  6207 ;;		line 252 in file "Lab5p6.c"
  6208 ;; Parameters:    Size  Location     Type
  6209 ;;		None
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;		None
  6212 ;; Return value:  Size  Location     Type
  6213 ;;		None               void
  6214 ;; Registers used:
  6215 ;;		None
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/0
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;Total ram usage:        0 bytes
  6226 ;; Hardware stack levels used:    1
  6227 ;; This function calls:
  6228 ;;		Nothing
  6229 ;; This function is called by:
  6230 ;;		_DO_DISPLAY_D3
  6231 ;; This function uses a non-reentrant model
  6232 ;;
  6233                           
  6234                           	psect	text31
  6235  002E4C                     __ptext31:
  6236                           	opt stack 0
  6237  002E4C                     _SET_D3_YELLOW:
  6238                           	opt stack 29
  6239                           
  6240                           ;Lab5p6.c: 254: PORTAbits.RA4 = 1;
  6241                           
  6242                           ;incstack = 0
  6243  002E4C  8880               	bsf	3968,4,c	;volatile
  6244                           
  6245                           ;Lab5p6.c: 255: PORTAbits.RA5 = 1;
  6246  002E4E  8A80               	bsf	3968,5,c	;volatile
  6247  002E50  0012               	return		;funcret
  6248  002E52                     __end_of_SET_D3_YELLOW:
  6249                           	opt stack 0
  6250                           tblptru	equ	0xFF8
  6251                           tblptrh	equ	0xFF7
  6252                           tblptrl	equ	0xFF6
  6253                           tablat	equ	0xFF5
  6254                           prodh	equ	0xFF4
  6255                           prodl	equ	0xFF3
  6256                           postinc0	equ	0xFEE
  6257                           wreg	equ	0xFE8
  6258                           postdec1	equ	0xFE5
  6259                           fsr1l	equ	0xFE1
  6260                           indf2	equ	0xFDF
  6261                           postinc2	equ	0xFDE
  6262                           postdec2	equ	0xFDD
  6263                           fsr2h	equ	0xFDA
  6264                           fsr2l	equ	0xFD9
  6265                           status	equ	0xFD8
  6266                           
  6267 ;; *************** function _SET_D3_RED *****************
  6268 ;; Defined at:
  6269 ;;		line 240 in file "Lab5p6.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;		None
  6272 ;; Auto vars:     Size  Location     Type
  6273 ;;		None
  6274 ;; Return value:  Size  Location     Type
  6275 ;;		None               void
  6276 ;; Registers used:
  6277 ;;		None
  6278 ;; Tracked objects:
  6279 ;;		On entry : 0/0
  6280 ;;		On exit  : 0/0
  6281 ;;		Unchanged: 0/0
  6282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6287 ;;Total ram usage:        0 bytes
  6288 ;; Hardware stack levels used:    1
  6289 ;; This function calls:
  6290 ;;		Nothing
  6291 ;; This function is called by:
  6292 ;;		_DO_DISPLAY_D3
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           	psect	text32
  6297  002E52                     __ptext32:
  6298                           	opt stack 0
  6299  002E52                     _SET_D3_RED:
  6300                           	opt stack 29
  6301                           
  6302                           ;Lab5p6.c: 242: PORTAbits.RA4 = 1;
  6303                           
  6304                           ;incstack = 0
  6305  002E52  8880               	bsf	3968,4,c	;volatile
  6306                           
  6307                           ;Lab5p6.c: 243: PORTAbits.RA5 = 0;
  6308  002E54  9A80               	bcf	3968,5,c	;volatile
  6309  002E56  0012               	return		;funcret
  6310  002E58                     __end_of_SET_D3_RED:
  6311                           	opt stack 0
  6312                           tblptru	equ	0xFF8
  6313                           tblptrh	equ	0xFF7
  6314                           tblptrl	equ	0xFF6
  6315                           tablat	equ	0xFF5
  6316                           prodh	equ	0xFF4
  6317                           prodl	equ	0xFF3
  6318                           postinc0	equ	0xFEE
  6319                           wreg	equ	0xFE8
  6320                           postdec1	equ	0xFE5
  6321                           fsr1l	equ	0xFE1
  6322                           indf2	equ	0xFDF
  6323                           postinc2	equ	0xFDE
  6324                           postdec2	equ	0xFDD
  6325                           fsr2h	equ	0xFDA
  6326                           fsr2l	equ	0xFD9
  6327                           status	equ	0xFD8
  6328                           
  6329 ;; *************** function _SET_D3_GREEN *****************
  6330 ;; Defined at:
  6331 ;;		line 246 in file "Lab5p6.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;		None
  6334 ;; Auto vars:     Size  Location     Type
  6335 ;;		None
  6336 ;; Return value:  Size  Location     Type
  6337 ;;		None               void
  6338 ;; Registers used:
  6339 ;;		None
  6340 ;; Tracked objects:
  6341 ;;		On entry : 0/0
  6342 ;;		On exit  : 0/0
  6343 ;;		Unchanged: 0/0
  6344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;Total ram usage:        0 bytes
  6350 ;; Hardware stack levels used:    1
  6351 ;; This function calls:
  6352 ;;		Nothing
  6353 ;; This function is called by:
  6354 ;;		_DO_DISPLAY_D3
  6355 ;; This function uses a non-reentrant model
  6356 ;;
  6357                           
  6358                           	psect	text33
  6359  002E58                     __ptext33:
  6360                           	opt stack 0
  6361  002E58                     _SET_D3_GREEN:
  6362                           	opt stack 29
  6363                           
  6364                           ;Lab5p6.c: 248: PORTAbits.RA4 = 0;
  6365                           
  6366                           ;incstack = 0
  6367  002E58  9880               	bcf	3968,4,c	;volatile
  6368                           
  6369                           ;Lab5p6.c: 249: PORTAbits.RA5 = 1;
  6370  002E5A  8A80               	bsf	3968,5,c	;volatile
  6371  002E5C  0012               	return		;funcret
  6372  002E5E                     __end_of_SET_D3_GREEN:
  6373                           	opt stack 0
  6374                           tblptru	equ	0xFF8
  6375                           tblptrh	equ	0xFF7
  6376                           tblptrl	equ	0xFF6
  6377                           tablat	equ	0xFF5
  6378                           prodh	equ	0xFF4
  6379                           prodl	equ	0xFF3
  6380                           postinc0	equ	0xFEE
  6381                           wreg	equ	0xFE8
  6382                           postdec1	equ	0xFE5
  6383                           fsr1l	equ	0xFE1
  6384                           indf2	equ	0xFDF
  6385                           postinc2	equ	0xFDE
  6386                           postdec2	equ	0xFDD
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function _DO_DISPLAY_D2 *****************
  6392 ;; Defined at:
  6393 ;;		line 171 in file "Lab5p6.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  temp            2   14[COMRAM] int 
  6396 ;; Auto vars:     Size  Location     Type
  6397 ;;  T               2   16[COMRAM] int 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;		None               void
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0, cstack
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6407 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;Total ram usage:        4 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; Hardware stack levels required when called:    1
  6414 ;; This function calls:
  6415 ;;		___awdiv
  6416 ;; This function is called by:
  6417 ;;		_main
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           	psect	text34
  6422  002B36                     __ptext34:
  6423                           	opt stack 0
  6424  002B36                     _DO_DISPLAY_D2:
  6425                           	opt stack 29
  6426                           
  6427                           ;Lab5p6.c: 173: int T = temp / 10;
  6428                           
  6429                           ;incstack = 0
  6430  002B36  C00F  F007         	movff	DO_DISPLAY_D2@temp,___awdiv@dividend
  6431  002B3A  C010  F008         	movff	DO_DISPLAY_D2@temp+1,___awdiv@dividend+1
  6432  002B3E  0E00               	movlw	0
  6433  002B40  6E0A               	movwf	___awdiv@divisor+1,c
  6434  002B42  0E0A               	movlw	10
  6435  002B44  6E09               	movwf	___awdiv@divisor,c
  6436  002B46  EC59  F014         	call	___awdiv	;wreg free
  6437  002B4A  C007  F011         	movff	?___awdiv,DO_DISPLAY_D2@T
  6438  002B4E  C008  F012         	movff	?___awdiv+1,DO_DISPLAY_D2@T+1
  6439                           
  6440                           ;Lab5p6.c: 174: if (T > 0 && T < 8)
  6441  002B52  BE12               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6442  002B54  D010               	goto	l124
  6443  002B56  5012               	movf	DO_DISPLAY_D2@T+1,w,c
  6444  002B58  E103               	bnz	u3000
  6445  002B5A  0411               	decf	DO_DISPLAY_D2@T,w,c
  6446  002B5C  A0D8               	btfss	status,0,c
  6447  002B5E  D00B               	goto	l124
  6448  002B60                     u3000:
  6449  002B60  BE12               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6450  002B62  D006               	goto	l2744
  6451  002B64  5012               	movf	DO_DISPLAY_D2@T+1,w,c
  6452  002B66  E107               	bnz	l124
  6453  002B68  0E08               	movlw	8
  6454  002B6A  5C11               	subwf	DO_DISPLAY_D2@T,w,c
  6455  002B6C  B0D8               	btfsc	status,0,c
  6456  002B6E  D003               	goto	l124
  6457  002B70                     l2744:
  6458                           
  6459                           ;Lab5p6.c: 175: {
  6460                           ;Lab5p6.c: 176: PORTB = T | PORTB;
  6461  002B70  5081               	movf	3969,w,c	;volatile
  6462  002B72  1011               	iorwf	DO_DISPLAY_D2@T,w,c
  6463  002B74  6E81               	movwf	3969,c	;volatile
  6464  002B76                     l124:
  6465                           
  6466                           ;Lab5p6.c: 177: }
  6467                           ;Lab5p6.c: 178: if (T <= 0)
  6468  002B76  BE12               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6469  002B78  D005               	goto	l2746
  6470  002B7A  5012               	movf	DO_DISPLAY_D2@T+1,w,c
  6471  002B7C  E106               	bnz	l2748
  6472  002B7E  0411               	decf	DO_DISPLAY_D2@T,w,c
  6473  002B80  B0D8               	btfsc	status,0,c
  6474  002B82  D003               	goto	l2748
  6475  002B84                     l2746:
  6476                           
  6477                           ;Lab5p6.c: 179: {
  6478                           ;Lab5p6.c: 180: PORTB = 0x00;
  6479  002B84  0E00               	movlw	0
  6480  002B86  6E81               	movwf	3969,c	;volatile
  6481  002B88  D000               	goto	l2748
  6482  002B8A                     l2748:
  6483                           
  6484                           ;Lab5p6.c: 181: }
  6485                           ;Lab5p6.c: 182: if (T >= 8)
  6486  002B8A  BE12               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6487  002B8C  D00A               	goto	l127
  6488  002B8E  5012               	movf	DO_DISPLAY_D2@T+1,w,c
  6489  002B90  E104               	bnz	u3030
  6490  002B92  0E08               	movlw	8
  6491  002B94  5C11               	subwf	DO_DISPLAY_D2@T,w,c
  6492  002B96  A0D8               	btfss	status,0,c
  6493  002B98  D004               	goto	l127
  6494  002B9A                     u3030:
  6495                           
  6496                           ;Lab5p6.c: 183: {
  6497                           ;Lab5p6.c: 184: PORTB = 0x07 | PORTB;
  6498  002B9A  5081               	movf	3969,w,c	;volatile
  6499  002B9C  0907               	iorlw	7
  6500  002B9E  6E81               	movwf	3969,c	;volatile
  6501  002BA0  D000               	goto	l127
  6502  002BA2                     l127:
  6503  002BA2  0012               	return		;funcret
  6504  002BA4                     __end_of_DO_DISPLAY_D2:
  6505                           	opt stack 0
  6506                           tblptru	equ	0xFF8
  6507                           tblptrh	equ	0xFF7
  6508                           tblptrl	equ	0xFF6
  6509                           tablat	equ	0xFF5
  6510                           prodh	equ	0xFF4
  6511                           prodl	equ	0xFF3
  6512                           postinc0	equ	0xFEE
  6513                           wreg	equ	0xFE8
  6514                           postdec1	equ	0xFE5
  6515                           fsr1l	equ	0xFE1
  6516                           indf2	equ	0xFDF
  6517                           postinc2	equ	0xFDE
  6518                           postdec2	equ	0xFDD
  6519                           fsr2h	equ	0xFDA
  6520                           fsr2l	equ	0xFD9
  6521                           status	equ	0xFD8
  6522                           
  6523 ;; *************** function ___awdiv *****************
  6524 ;; Defined at:
  6525 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6526 ;; Parameters:    Size  Location     Type
  6527 ;;  dividend        2    6[COMRAM] int 
  6528 ;;  divisor         2    8[COMRAM] int 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  quotient        2   12[COMRAM] int 
  6531 ;;  sign            1   11[COMRAM] unsigned char 
  6532 ;;  counter         1   10[COMRAM] unsigned char 
  6533 ;; Return value:  Size  Location     Type
  6534 ;;                  2    6[COMRAM] int 
  6535 ;; Registers used:
  6536 ;;		wreg, status,2, status,0
  6537 ;; Tracked objects:
  6538 ;;		On entry : 0/0
  6539 ;;		On exit  : 0/0
  6540 ;;		Unchanged: 0/0
  6541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6542 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6543 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6545 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;Total ram usage:        8 bytes
  6547 ;; Hardware stack levels used:    1
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_main
  6552 ;;		_DO_DISPLAY_D2
  6553 ;;		_fround
  6554 ;;		_scale
  6555 ;;		_printf
  6556 ;; This function uses a non-reentrant model
  6557 ;;
  6558                           
  6559                           	psect	text35
  6560  0028B2                     __ptext35:
  6561                           	opt stack 0
  6562  0028B2                     ___awdiv:
  6563                           	opt stack 28
  6564                           
  6565                           ;incstack = 0
  6566  0028B2  0E00               	movlw	0
  6567  0028B4  6E0C               	movwf	___awdiv@sign,c
  6568  0028B6  AE0A               	btfss	___awdiv@divisor+1,7,c
  6569  0028B8  D007               	goto	l2090
  6570  0028BA  6C09               	negf	___awdiv@divisor,c
  6571  0028BC  1E0A               	comf	___awdiv@divisor+1,f,c
  6572  0028BE  B0D8               	btfsc	status,0,c
  6573  0028C0  2A0A               	incf	___awdiv@divisor+1,f,c
  6574  0028C2  0E01               	movlw	1
  6575  0028C4  6E0C               	movwf	___awdiv@sign,c
  6576  0028C6  D000               	goto	l2090
  6577  0028C8                     l2090:
  6578  0028C8  AE08               	btfss	___awdiv@dividend+1,7,c
  6579  0028CA  D007               	goto	l2096
  6580  0028CC  6C07               	negf	___awdiv@dividend,c
  6581  0028CE  1E08               	comf	___awdiv@dividend+1,f,c
  6582  0028D0  B0D8               	btfsc	status,0,c
  6583  0028D2  2A08               	incf	___awdiv@dividend+1,f,c
  6584  0028D4  0E01               	movlw	1
  6585  0028D6  1A0C               	xorwf	___awdiv@sign,f,c
  6586  0028D8  D000               	goto	l2096
  6587  0028DA                     l2096:
  6588  0028DA  0E00               	movlw	0
  6589  0028DC  6E0E               	movwf	___awdiv@quotient+1,c
  6590  0028DE  0E00               	movlw	0
  6591  0028E0  6E0D               	movwf	___awdiv@quotient,c
  6592  0028E2  5009               	movf	___awdiv@divisor,w,c
  6593  0028E4  100A               	iorwf	___awdiv@divisor+1,w,c
  6594  0028E6  B4D8               	btfsc	status,2,c
  6595  0028E8  D021               	goto	l2118
  6596  0028EA  0E01               	movlw	1
  6597  0028EC  6E0B               	movwf	___awdiv@counter,c
  6598  0028EE  D005               	goto	l2104
  6599  0028F0                     l2102:
  6600  0028F0  90D8               	bcf	status,0,c
  6601  0028F2  3609               	rlcf	___awdiv@divisor,f,c
  6602  0028F4  360A               	rlcf	___awdiv@divisor+1,f,c
  6603  0028F6  2A0B               	incf	___awdiv@counter,f,c
  6604  0028F8  D000               	goto	l2104
  6605  0028FA                     l2104:
  6606  0028FA  BE0A               	btfsc	___awdiv@divisor+1,7,c
  6607  0028FC  D002               	goto	l2106
  6608  0028FE  D7F8               	goto	l2102
  6609  002900  D000               	goto	l2106
  6610  002902                     l2106:
  6611  002902  90D8               	bcf	status,0,c
  6612  002904  360D               	rlcf	___awdiv@quotient,f,c
  6613  002906  360E               	rlcf	___awdiv@quotient+1,f,c
  6614  002908  5009               	movf	___awdiv@divisor,w,c
  6615  00290A  5C07               	subwf	___awdiv@dividend,w,c
  6616  00290C  500A               	movf	___awdiv@divisor+1,w,c
  6617  00290E  5808               	subwfb	___awdiv@dividend+1,w,c
  6618  002910  A0D8               	btfss	status,0,c
  6619  002912  D006               	goto	l2114
  6620  002914  5009               	movf	___awdiv@divisor,w,c
  6621  002916  5E07               	subwf	___awdiv@dividend,f,c
  6622  002918  500A               	movf	___awdiv@divisor+1,w,c
  6623  00291A  5A08               	subwfb	___awdiv@dividend+1,f,c
  6624  00291C  800D               	bsf	___awdiv@quotient,0,c
  6625  00291E  D000               	goto	l2114
  6626  002920                     l2114:
  6627  002920  90D8               	bcf	status,0,c
  6628  002922  320A               	rrcf	___awdiv@divisor+1,f,c
  6629  002924  3209               	rrcf	___awdiv@divisor,f,c
  6630  002926  2E0B               	decfsz	___awdiv@counter,f,c
  6631  002928  D7EC               	goto	l2106
  6632  00292A  D000               	goto	l2118
  6633  00292C                     l2118:
  6634  00292C  500C               	movf	___awdiv@sign,w,c
  6635  00292E  B4D8               	btfsc	status,2,c
  6636  002930  D005               	goto	l2122
  6637  002932  6C0D               	negf	___awdiv@quotient,c
  6638  002934  1E0E               	comf	___awdiv@quotient+1,f,c
  6639  002936  B0D8               	btfsc	status,0,c
  6640  002938  2A0E               	incf	___awdiv@quotient+1,f,c
  6641  00293A  D000               	goto	l2122
  6642  00293C                     l2122:
  6643  00293C  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6644  002940  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6645  002944  D000               	goto	l478
  6646  002946                     l478:
  6647  002946  0012               	return		;funcret
  6648  002948                     __end_of___awdiv:
  6649                           	opt stack 0
  6650                           tblptru	equ	0xFF8
  6651                           tblptrh	equ	0xFF7
  6652                           tblptrl	equ	0xFF6
  6653                           tablat	equ	0xFF5
  6654                           prodh	equ	0xFF4
  6655                           prodl	equ	0xFF3
  6656                           postinc0	equ	0xFEE
  6657                           wreg	equ	0xFE8
  6658                           postdec1	equ	0xFE5
  6659                           fsr1l	equ	0xFE1
  6660                           indf2	equ	0xFDF
  6661                           postinc2	equ	0xFDE
  6662                           postdec2	equ	0xFDD
  6663                           fsr2h	equ	0xFDA
  6664                           fsr2l	equ	0xFD9
  6665                           status	equ	0xFD8
  6666                           
  6667 ;; *************** function _DO_DISPLAY_D1 *****************
  6668 ;; Defined at:
  6669 ;;		line 142 in file "Lab5p6.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  temp            2    0[COMRAM] int 
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;		None
  6674 ;; Return value:  Size  Location     Type
  6675 ;;		None               void
  6676 ;; Registers used:
  6677 ;;		wreg, status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6683 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;Total ram usage:        2 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; This function calls:
  6690 ;;		Nothing
  6691 ;; This function is called by:
  6692 ;;		_main
  6693 ;; This function uses a non-reentrant model
  6694 ;;
  6695                           
  6696                           	psect	text36
  6697  00277C                     __ptext36:
  6698                           	opt stack 0
  6699  00277C                     _DO_DISPLAY_D1:
  6700                           	opt stack 30
  6701                           
  6702                           ;Lab5p6.c: 144: if (temp < 46)
  6703                           
  6704                           ;incstack = 0
  6705  00277C  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6706  00277E  D006               	goto	l2714
  6707  002780  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6708  002782  E107               	bnz	l2716
  6709  002784  0E2E               	movlw	46
  6710  002786  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6711  002788  B0D8               	btfsc	status,0,c
  6712  00278A  D003               	goto	l2716
  6713  00278C                     l2714:
  6714                           
  6715                           ;Lab5p6.c: 145: {
  6716                           ;Lab5p6.c: 146: PORTB = 0x00;
  6717  00278C  0E00               	movlw	0
  6718  00278E  6E81               	movwf	3969,c	;volatile
  6719  002790  D000               	goto	l2716
  6720  002792                     l2716:
  6721                           
  6722                           ;Lab5p6.c: 148: }
  6723                           ;Lab5p6.c: 149: if (temp >= 46 && temp < 56)
  6724  002792  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6725  002794  D011               	goto	l2722
  6726  002796  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6727  002798  E104               	bnz	u2930
  6728  00279A  0E2E               	movlw	46
  6729  00279C  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6730  00279E  A0D8               	btfss	status,0,c
  6731  0027A0  D00B               	goto	l2722
  6732  0027A2                     u2930:
  6733  0027A2  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6734  0027A4  D006               	goto	l2720
  6735  0027A6  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6736  0027A8  E107               	bnz	l2722
  6737  0027AA  0E38               	movlw	56
  6738  0027AC  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6739  0027AE  B0D8               	btfsc	status,0,c
  6740  0027B0  D003               	goto	l2722
  6741  0027B2                     l2720:
  6742                           
  6743                           ;Lab5p6.c: 150: {
  6744                           ;Lab5p6.c: 151: PORTB = 0x20;
  6745  0027B2  0E20               	movlw	32
  6746  0027B4  6E81               	movwf	3969,c	;volatile
  6747  0027B6  D000               	goto	l2722
  6748  0027B8                     l2722:
  6749                           
  6750                           ;Lab5p6.c: 153: }
  6751                           ;Lab5p6.c: 154: if (temp >= 56 && temp < 66)
  6752  0027B8  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6753  0027BA  D011               	goto	l2728
  6754  0027BC  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6755  0027BE  E104               	bnz	u2950
  6756  0027C0  0E38               	movlw	56
  6757  0027C2  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6758  0027C4  A0D8               	btfss	status,0,c
  6759  0027C6  D00B               	goto	l2728
  6760  0027C8                     u2950:
  6761  0027C8  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6762  0027CA  D006               	goto	l2726
  6763  0027CC  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6764  0027CE  E107               	bnz	l2728
  6765  0027D0  0E42               	movlw	66
  6766  0027D2  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6767  0027D4  B0D8               	btfsc	status,0,c
  6768  0027D6  D003               	goto	l2728
  6769  0027D8                     l2726:
  6770                           
  6771                           ;Lab5p6.c: 155: {
  6772                           ;Lab5p6.c: 156: PORTB = 0x40;
  6773  0027D8  0E40               	movlw	64
  6774  0027DA  6E81               	movwf	3969,c	;volatile
  6775  0027DC  D000               	goto	l2728
  6776  0027DE                     l2728:
  6777                           
  6778                           ;Lab5p6.c: 158: }
  6779                           ;Lab5p6.c: 159: if (temp >= 66 && temp < 76)
  6780  0027DE  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6781  0027E0  D011               	goto	l2734
  6782  0027E2  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6783  0027E4  E104               	bnz	u2970
  6784  0027E6  0E42               	movlw	66
  6785  0027E8  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6786  0027EA  A0D8               	btfss	status,0,c
  6787  0027EC  D00B               	goto	l2734
  6788  0027EE                     u2970:
  6789  0027EE  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6790  0027F0  D006               	goto	l2732
  6791  0027F2  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6792  0027F4  E107               	bnz	l2734
  6793  0027F6  0E4C               	movlw	76
  6794  0027F8  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6795  0027FA  B0D8               	btfsc	status,0,c
  6796  0027FC  D003               	goto	l2734
  6797  0027FE                     l2732:
  6798                           
  6799                           ;Lab5p6.c: 160: {
  6800                           ;Lab5p6.c: 161: PORTB = 0x80;
  6801  0027FE  0E80               	movlw	128
  6802  002800  6E81               	movwf	3969,c	;volatile
  6803  002802  D000               	goto	l2734
  6804  002804                     l2734:
  6805                           
  6806                           ;Lab5p6.c: 163: }
  6807                           ;Lab5p6.c: 164: if (temp >= 76)
  6808  002804  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6809  002806  D009               	goto	l121
  6810  002808  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6811  00280A  E104               	bnz	u2990
  6812  00280C  0E4C               	movlw	76
  6813  00280E  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6814  002810  A0D8               	btfss	status,0,c
  6815  002812  D003               	goto	l121
  6816  002814                     u2990:
  6817                           
  6818                           ;Lab5p6.c: 165: {
  6819                           ;Lab5p6.c: 166: PORTB = 0xE0;
  6820  002814  0EE0               	movlw	224
  6821  002816  6E81               	movwf	3969,c	;volatile
  6822  002818  D000               	goto	l121
  6823  00281A                     l121:
  6824  00281A  0012               	return		;funcret
  6825  00281C                     __end_of_DO_DISPLAY_D1:
  6826                           	opt stack 0
  6827                           tblptru	equ	0xFF8
  6828                           tblptrh	equ	0xFF7
  6829                           tblptrl	equ	0xFF6
  6830                           tablat	equ	0xFF5
  6831                           prodh	equ	0xFF4
  6832                           prodl	equ	0xFF3
  6833                           postinc0	equ	0xFEE
  6834                           wreg	equ	0xFE8
  6835                           postdec1	equ	0xFE5
  6836                           fsr1l	equ	0xFE1
  6837                           indf2	equ	0xFDF
  6838                           postinc2	equ	0xFDE
  6839                           postdec2	equ	0xFDD
  6840                           fsr2h	equ	0xFDA
  6841                           fsr2l	equ	0xFD9
  6842                           status	equ	0xFD8
  6843                           tblptru	equ	0xFF8
  6844                           tblptrh	equ	0xFF7
  6845                           tblptrl	equ	0xFF6
  6846                           tablat	equ	0xFF5
  6847                           prodh	equ	0xFF4
  6848                           prodl	equ	0xFF3
  6849                           postinc0	equ	0xFEE
  6850                           wreg	equ	0xFE8
  6851                           postdec1	equ	0xFE5
  6852                           fsr1l	equ	0xFE1
  6853                           indf2	equ	0xFDF
  6854                           postinc2	equ	0xFDE
  6855                           postdec2	equ	0xFDD
  6856                           fsr2h	equ	0xFDA
  6857                           fsr2l	equ	0xFD9
  6858                           status	equ	0xFD8
  6859                           
  6860                           	psect	rparam
  6861  0000                     tblptru	equ	0xFF8
  6862                           tblptrh	equ	0xFF7
  6863                           tblptrl	equ	0xFF6
  6864                           tablat	equ	0xFF5
  6865                           prodh	equ	0xFF4
  6866                           prodl	equ	0xFF3
  6867                           postinc0	equ	0xFEE
  6868                           wreg	equ	0xFE8
  6869                           postdec1	equ	0xFE5
  6870                           fsr1l	equ	0xFE1
  6871                           indf2	equ	0xFDF
  6872                           postinc2	equ	0xFDE
  6873                           postdec2	equ	0xFDD
  6874                           fsr2h	equ	0xFDA
  6875                           fsr2l	equ	0xFD9
  6876                           status	equ	0xFD8


Data Sizes:
    Strings     67
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    116     126
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[23]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _Init_UART->_OpenUSART
    _DO_DISPLAY_D2->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   56002
                                             97 COMRAM    19    19      0
                      _DO_DISPLAY_D1
                      _DO_DISPLAY_D2
                      _DO_DISPLAY_D3
                _Display_Lower_Digit
                _Display_Upper_Digit
                       _Get_Full_ADC
                           _Init_ADC
                          _Init_TRIS
                          _Init_UART
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38551
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9120
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8922
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3848
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     583
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     480
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     464
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3343
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3090
                                             45 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             57 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1890
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Display_Upper_Digit                                  2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Display_Lower_Digit                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D3                                        2     0      2     141
                                              0 COMRAM     2     0      2
                       _SET_D3_GREEN
                         _SET_D3_RED
                      _SET_D3_YELLOW
 ---------------------------------------------------------------------------------
 (2) _SET_D3_YELLOW                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D3_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D3_GREEN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D2                                        4     2      2    1758
                                             14 COMRAM     4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1572
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D1                                        2     0      2     229
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_DISPLAY_D1
   _DO_DISPLAY_D2
     ___awdiv
       ___awmod (ARG)
   _DO_DISPLAY_D3
     _SET_D3_GREEN
     _SET_D3_RED
     _SET_D3_YELLOW
   _Display_Lower_Digit
   _Display_Upper_Digit
   _Get_Full_ADC
   _Init_ADC
   _Init_TRIS
   _Init_UART
     _OpenUSART
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     74      7E       1       99.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7E      34        0.0%
DATA                 0      0      7E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 10 10:23:36 2022

                          l74 2E1E                            l85 2DD6                  ___awdiv@sign 000C  
         ___wmul@multiplicand 0011                  ___ftadd@exp1 0039                  ___ftadd@exp2 0038  
                ___ftadd@sign 0037                           l110 2CDA                           l102 2D6E  
                         l121 281A                           l105 2D8E                           l124 2B76  
                         l133 2C56                           l127 2BA2                           l231 1546  
                         l503 2D16                           l280 2B1A                           l184 1BE8  
                         l273 2AF2                           l177 1E2C                           l249 1808  
                         l282 2B34                           l610 277A                           l277 2B0C  
                         l621 2752                           l285 2D68                           l278 2B0E  
                         l279 2B18                           l650 205C                           l714 24EC  
                         l651 21DA                           l731 2C9A                           l491 2A54  
                         l708 28B0                           l724 2DA6                           l804 2C02  
                         l478 2946                           l654 2086                           l735 25D2  
                         l665 2148                           l569 23F4                           l682 26B4  
                         l674 2164                           l578 23E4                           l690 22EA  
                         l692 2252                           l685 2680                           l693 227A  
                         l774 29C2                           l784 2AB4                           l699 22DA  
                ___awmod@sign 0006                           prod 000FF3                           wreg 000FE8  
                __CFG_LVP$OFF 000000                ?_DO_DISPLAY_D1 0001                ?_DO_DISPLAY_D2 000F  
              ?_DO_DISPLAY_D3 0001                  ___ftdiv@cntr 0043                  ___ftdiv@sign 0048  
                __CFG_WDT$OFF 000000                          l2000 20EC                          l2002 20F8  
                        l2020 2182                          l2012 2130                          l2004 2104  
                        l2102 28F0                          l2030 21B4                          l2014 213C  
                        l2006 210C                          l2104 28FA                          l2040 2414  
                        l2122 293C                          l2114 2920                          l2106 2902  
                        l2042 242E                          l2060 2470                          l2118 292C  
                        l2310 2288                          l2150 2A2E                          l2142 2A06  
                        l2134 29EA                          l2070 249E                          l2046 243C  
                        l2144 2A10                          l2064 2482                          l2090 28C8  
                        l1530 2DBC                          l2330 22D4                          l2322 22AC  
                        l2146 2A18                          l2154 2A3A                          l2138 29F8  
                        l2074 24B0                          l2234 1DEC                          l2226 1D28  
                        l2180 2AEA                          l2172 2AD8                          l2404 284E  
                        l2324 22B2                          l2068 2498                          l1534 2DD0  
                        l2414 28AC                          l2502 2AA4                          l2510 2BB8  
                        l2318 229C                          l2158 2A4A                          l2078 24C6  
                        l2254 19DE                          l2096 28DA                          l2192 2B04  
                        l2184 2AF6                          l2176 2AE2                          l2408 2880  
                        l2344 230C                          l2328 22C6                          l2272 1BC4  
                        l2248 1936                          l2600 1330                          l2450 2576  
                        l2370 2392                          l2338 22FC                          l2282 21FA  
                        l2266 1B12                          l2258 19EE                          l2602 133A  
                        l2610 13B8                          l2530 10C6                          l1556 2CD4  
                        l2452 257C                          l2460 25A8                          l2428 250C  
                        l2508 2BAA                          l2620 142E                          l2540 10EA  
                        l2446 2566                          l2390 23DE                          l2382 23B6  
                        l2366 2382                          l2358 2350                          l2702 174E  
                        l2614 141E                          l2606 137C                          l2542 1116  
                        l2534 10D6                          l2710 17EC                          l2720 27B2  
                        l2464 25C0                          l2456 2590                          l2384 23BC  
                        l2288 2218                          l2704 175A                          l2640 1514  
                        l2632 147E                          l2624 145E                          l2616 1422  
                        l2608 13AA                          l2536 10E2                          l2722 27B8  
                        l2714 278C                          l1930 26D6                          l2458 259E  
                        l2474 296A                          l2378 23A6                          l2650 154C  
                        l2732 27FE                          l2716 2792                          l1940 273A  
                        l1932 26E2                          l2820 2CF2                          l2396 2C70  
                        l2476 2978                          l2388 23D0                          l2708 17D8  
                        l2660 15B6                          l2644 1522                          l2628 1462  
                        l2580 125E                          l2572 11FA                          l2556 1168  
                        l2734 2804                          l2726 27D8                          l1942 2746  
                        l1934 2702                          l1926 26C6                          l2486 29B2  
                        l2478 2980                          l2494 2A68                          l2646 1530  
                        l2638 1508                          l2590 12D4                          l2728 27DE  
                        l2744 2B70                          l2760 2C3A                          l2808 268E  
                        l2496 2A76                          l2672 16A6                          l2656 1566  
                        l2584 1284                          l2746 2B84                          l2762 2C40  
                        l2754 2C14                          l1954 276C                          l1938 271A  
                        l2498 2A7E                          l2690 16FE                          l2666 168C  
                        l2586 1294                          l2674 16B2                          l2748 2B8A  
                        l2756 2C1A                          l1948 275A                          l2772 25F2  
                        l1972 206A                          l2684 16EE                          l2668 1698  
                        l2596 130C                          l2588 12C4                          l2836 1E4A  
                        l2774 260C                          l2694 172E                          l2686 16F2  
                        l1984 20A0                          l2778 261A                          l1994 20C8  
                        l1978 2094                          l2698 1732                          l2798 265A  
                        STR_1 10A5                          STR_2 1077                          STR_3 108E  
                        u3000 2B60                          u3101 2602                          u3030 2B9A  
                        u2241 21EC                          u2261 220A                          u3081 25E4  
                        u2451 24FE                          u1901 2424                          u2470 252A  
                        u1671 2028                          u1681 203C                          u2810 1540  
                        u2650 11A0                          u2475 2522                  printf@tmpval 005A  
                        u2655 1196                          u1881 2406                          u2930 27A2  
                        u2950 27C8                          u2970 27EE                          u2990 2814  
                        _TRMT 007D61                          _main 1E2E                  ___ftpack@arg 0001  
                ___ftpack@exp 0004                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000                  ___ftmul@cntr 0022  
                ___param_bank 000010                  ___ftmul@sign 0023          __end_of_Get_Full_ADC 2D90  
                ___fttol@exp1 0039                  ___fttol@lval 0035                   ?_WAIT_1_SEC 0001  
                       ?_main 0001                   ?_SET_D3_RED 0001               __end_of___awdiv 2948  
             __end_of___ftadd 21DC               __end_of___awmod 2A56               __end_of___ftdiv 26B6  
             __end_of___ftneg 2DB4               __end_of___lldiv 29D4               __end_of___ftmul 24EE  
             ___awdiv@divisor 0009               __end_of___llmod 2AC6               __end_of___ftsub 2C9C  
             __end_of___fttol 25D4               ___awdiv@counter 000B                         _RCSTA 000FAB  
                       _SPBRG 000FAF                         _PORTA 000F80                         _PORTB 000F81  
                       _PORTC 000F82                         _PORTD 000F83                         _PORTE 000F84  
                       _TRISA 000F92                         _TRISB 000F93                         _TRISC 000F94  
                       _TRISD 000F95                         _TRISE 000F96                         _TXREG 000FAD  
                       _TXSTA 000FAC                  ___lltoft@exp 0011                 ___awtoft@sign 000C  
             __end_of_dpowers 1029                         _array 0075                         _scale 180A  
               ___ftpack@sign 0005                         main@L 006B                         main@U 006A  
                       _putch 2E1A                  main@num_step 0071                __CFG_BOREN$OFF 000000  
                       tablat 000FF5                         status 000FD8               __initialization 2D18  
                __end_of_main 2018      Display_Lower_Digit@digit 0001              __end_of_Init_ADC 2E36  
                      ??_main 0062                 ___fttol@sign1 0034                 __activetblptr 000002  
       __end_of_SET_D3_YELLOW 2E52          __size_of__tdiv_to_l_ 0110   __end_of_Display_Lower_Digit 2DF0  
             ??_DO_DISPLAY_D1 0003               ??_DO_DISPLAY_D2 0011               ??_DO_DISPLAY_D3 0003  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 000E                        ?_scale 0024                        _ADRESH 000FC4  
                      _ADRESL 000FC3              ___awdiv@dividend 0007              __end_of___awtoft 2D18  
                      ?_putch 0001              __end_of___ftpack 277C              __end_of___lltoft 2C04  
                      _OSCCON 000FD3            __size_of_Init_UART 0014            __size_of_Init_TRIS 0016  
                      _SPBRGH 000FB0           __size_of_WAIT_1_SEC 0024            Get_Full_ADC@result 0005  
       Display_Upper_Digit@PE 0001           __size_of_SET_D3_RED 0006              __end_of__powers_ 1077  
          __size_of_OpenUSART 0070                        ___ftge 281C                        ___wmul 2D42  
                   ??___awdiv 000B                     ??___ftadd 0034                     ??___awmod 0005  
                   ??___ftdiv 0040                     ??___ftneg 0004                     ??___lldiv 0009  
                   ??___ftmul 001B                     ??___llmod 0016                     ??___ftsub 0040  
                   ??___fttol 002F                        _fround 1BEA              ___awdiv@quotient 000D  
             ___awmod@divisor 0003               ___awmod@counter 0005                        _printf 10BC  
       ___ftmul@f3_as_product 001F                  __pdataCOMRAM 0075                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      putch@c 0001                    __accesstop 0080       __end_of__initialization 2D38  
                  ___ftadd@f1 002E                    ___ftadd@f2 0031                    ___ftge@ff1 0001  
                  ___ftge@ff2 0004                 ___rparam_used 000001                    ___ftdiv@f1 003A  
                  ___ftdiv@f2 003D                    ___ftdiv@f3 0044         __size_of_Get_Full_ADC 0026  
                  ___ftneg@f1 0001                    ___awtoft@c 0009                    ___ftmul@f1 0015  
                  ___ftmul@f2 0018                    ___ftsub@f1 003A                    ___ftsub@f2 003D  
                  ___fttol@f1 002B                __pcstackCOMRAM 0001                    ___lltoft@c 0009  
               __end_of_scale 1BEA                 __end_of_putch 2E28             __end_of_Init_UART 2E1A  
           __end_of_Init_TRIS 2E06                    __div_to_l_ 22EC   __end_of_Display_Upper_Digit 2CDC  
           __end_of_OpenUSART 2B36               __div_to_l_@exp1 000C               __div_to_l_@cntr 000B  
                     ??_scale 0027               __div_to_l_@quot 0007                  _Get_Full_ADC 2D6A  
                     ??_putch 0001                     ?_Init_ADC 0001    __end_of_Select_ADC_Channel 2E42  
               __div_to_l_@f1 0001                 __div_to_l_@f2 0004                       ?___ftge 0001  
                     ?___wmul 000F                 ?_SET_D3_GREEN 0001                       ?_fround 0024  
                ??_WAIT_1_SEC 0001                     ?___awtoft 0009                     ?___ftpack 0001  
                     ?_printf 0040     Select_ADC_Channel@channel 0001                  ??_SET_D3_RED 0001  
                   ?___lltoft 0009                   WAIT_1_SEC@j 0001                    ??_Init_ADC 0001  
          __end_of_WAIT_1_SEC 2DD8            __end_of_SET_D3_RED 2E58             __end_of__npowers_ 1050  
                     __Hparam 0000                    _scale$1265 0027                       __Lparam 0000  
              ??_SET_D3_GREEN 0001               __size_of___ftge 0096                       ___awdiv 28B2  
                     ___ftadd 2018                       ___awmod 29D4                       ___ftdiv 25D4  
                     ___ftneg 2D90                       ___lldiv 2948               __size_of___wmul 0028  
                     ___ftmul 23F6                       ___llmod 2A56                       ___ftsub 2C58  
                     ___fttol 24EE                  __psmallconst 1000                       __pcinit 2D18  
                  ??___awtoft 000C                    ??___ftpack 0006               __size_of_fround 0244  
                     __ramtop 1000                    ??___lltoft 000D                       __ptext0 1E2E  
                     __ptext1 10BC                       __ptext2 180A                       __ptext3 2E1A  
                     __ptext4 1BEA                       __ptext5 2D42                       __ptext6 23F6  
                     __ptext7 29D4                       __ptext8 21DC                       __ptext9 22EC  
             __size_of_printf 074E                   ?__div_to_l_ 0001                       _dpowers 1001  
            ___awmod@dividend 0001          end_of_initialization 2D38                DO_DISPLAY_D2@T 0011  
               __Lmediumconst 0000               ___lldiv@divisor 0005               ___lldiv@counter 000D  
                   _RCSTAbits 000FAB                       printf@c 0061                       printf@f 0040  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                __tdiv_to_l_@f1 0001                __tdiv_to_l_@f2 0004  
               ??__tdiv_to_l_ 0007                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _TRISCbits 000F94                main@voltage_mv 006C         __end_of_DO_DISPLAY_D1 281C  
       __end_of_DO_DISPLAY_D2 2BA4         __end_of_DO_DISPLAY_D3 2C58  __size_of_Display_Lower_Digit 0018  
                 ___ftdiv@exp 0047                     _TXSTAbits 000FAC           __size_of__div_to_l_ 010A  
      __size_of_SET_D3_YELLOW 0006                   ___ftmul@exp 001E      Display_Upper_Digit@digit 0002  
              __end_of___ftge 28B2                __end_of___wmul 2D6A                 __pidataCOMRAM 2E42  
              __end_of_fround 1E2E             main@temperature_C 0064             main@temperature_F 0067  
              __end_of_printf 180A           start_initialization 2D18                     _Init_UART 2E06  
                   _Init_TRIS 2DF0           __end_of__tdiv_to_l_ 22EC             DO_DISPLAY_D1@temp 0001  
           DO_DISPLAY_D2@temp 000F          __end_of_SET_D3_GREEN 2E5E                     _OpenUSART 2AC6  
             ___llmod@divisor 0012              __CFG_OSC$INTIO67 000000             __size_of_Init_ADC 000E  
             ___llmod@counter 0016          DO_DISPLAY_D3@voltage 0001                      ??___ftge 0007  
                    ??___wmul 0013            _Select_ADC_Channel 2E36                      ??_fround 0027  
                    ??_printf 0045                    fround@prec 002D             __size_of___awtoft 003C  
           __size_of___ftpack 00C6           ?_Select_ADC_Channel 0001             __size_of___lltoft 0060  
               _SET_D3_YELLOW 2E4C                    ?_Init_UART 0001                    ?_Init_TRIS 0001  
__size_of_Display_Upper_Digit 0040                    ?_OpenUSART 0001          ??_Select_ADC_Channel 0001  
                    ?___awdiv 0007                      ?___ftadd 002E                      ?___awmod 0001  
                    ?___ftdiv 003A                      ?___ftneg 0001                      ?___lldiv 0001  
                    ?___ftmul 0015                      ?___llmod 000E                      ?___ftsub 003A  
                   __npowers_ 1029                      ?___fttol 002B                   __tdiv_to_l_ 21DC  
                ??__div_to_l_ 0007                   __smallconst 1000                ?_SET_D3_YELLOW 0001  
              __size_of_scale 03E0                __size_of_putch 000E                ___wmul@product 0013  
                    _PIE1bits 000F9D                      _PIR1bits 000F9E            __end_of__div_to_l_ 23F6  
         _Display_Lower_Digit 2DD8                    _ADCON0bits 000FC2             ___wmul@multiplier 000F  
                  printf@flag 0050                    printf@fval 005E                    printf@prec 0052  
       __size_of_SET_D3_GREEN 0006                     main@tempF 0073                   ??_Init_UART 0004  
                 ??_Init_TRIS 0001                     copy_data0 2D2C                      _Init_ADC 2E28  
        ?_Display_Lower_Digit 0001                   ??_OpenUSART 0003               OpenUSART@config 0003  
                    __Hrparam 0000                      __Lrparam 0000                  _SET_D3_GREEN 2E58  
            __size_of___awdiv 0096              __size_of___ftadd 01C4              __size_of___awmod 0082  
            __size_of___ftdiv 00E2              __size_of___ftneg 0024              __size_of___lldiv 008C  
            __size_of___ftmul 00F8              __size_of___llmod 0070              __size_of___ftsub 0044  
            __size_of___fttol 00E6                      ___awtoft 2CDC                      ___ftpack 26B6  
                 _fround$1263 002A                   _fround$1264 0027               ??_SET_D3_YELLOW 0001  
                    ___lltoft 2BA4                      __ptext10 2BA4                      __ptext11 2A56  
                    __ptext20 26B6                      __ptext12 2948                      __ptext21 2DB4  
                    __ptext13 24EE                      __ptext30 2C04                      __ptext22 2E36  
                    __ptext14 2C58                      __ptext31 2E4C                      __ptext23 2E06  
                    __ptext15 2018                      __ptext32 2E52                      __ptext24 2AC6  
                    __ptext16 2D90                      __ptext33 2E58                      __ptext25 2DF0  
                    __ptext17 281C                      __ptext34 2B36                      __ptext26 2E28  
                    __ptext18 25D4                      __ptext35 28B2                      __ptext27 2D6A  
                    __ptext19 2CDC                      __ptext36 277C                      __ptext28 2C9C  
                    __ptext29 2DD8                      __powers_ 1050                 ?_Get_Full_ADC 0001  
       ??_Display_Lower_Digit 0001                 __size_of_main 01EA        __size_of_DO_DISPLAY_D1 00A0  
      __size_of_DO_DISPLAY_D2 006E        __size_of_DO_DISPLAY_D3 0054                     printf@exp 0058  
                   printf@val 0054           _Display_Upper_Digit 2C9C                OpenUSART@spbrg 0001  
              ??_Get_Full_ADC 0003                      scale@scl 002A              __tdiv_to_l_@exp1 000F  
            __tdiv_to_l_@cntr 000E          ?_Display_Upper_Digit 0001              __tdiv_to_l_@quot 000A  
            ___lldiv@dividend 0001                      printf@ap 004E                    _WAIT_1_SEC 2DB4  
                ?__tdiv_to_l_ 0001                    _SET_D3_RED 2E52                   _printf$1266 004B  
            ___lldiv@quotient 0009                 _DO_DISPLAY_D1 277C                 _DO_DISPLAY_D2 2B36  
               _DO_DISPLAY_D3 2C04         ??_Display_Upper_Digit 0001   __size_of_Select_ADC_Channel 000C  
             main@voltage_mv1 006F  
