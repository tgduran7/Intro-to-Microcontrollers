

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Mar 10 23:02:50 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	text41,global,reloc=2,class=CODE,delta=1
    52                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    53                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    54  0000                     
    55                           	psect	idataCOMRAM
    56  002E40                     __pidataCOMRAM:
    57                           	opt stack 0
    58                           
    59                           ;initializer for _array
    60  002E40  40                 	db	64
    61  002E41  79                 	db	121
    62  002E42  24                 	db	36
    63  002E43  30                 	db	48
    64  002E44  19                 	db	25
    65  002E45  12                 	db	18
    66  002E46  02                 	db	2
    67  002E47  78                 	db	120
    68  002E48  00                 	db	0
    69  002E49  18                 	db	24
    70                           
    71                           	psect	smallconst
    72  001000                     __psmallconst:
    73                           	opt stack 0
    74  001000  00                 	db	0
    75  001001                     _dpowers:
    76                           	opt stack 0
    77  001001  0001               	dw	1
    78  001003  0000               	dw	0
    79  001005  000A               	dw	10
    80  001007  0000               	dw	0
    81  001009  0064               	dw	100
    82  00100B  0000               	dw	0
    83  00100D  03E8               	dw	1000
    84  00100F  0000               	dw	0
    85  001011  2710               	dw	10000
    86  001013  0000               	dw	0
    87  001015  86A0               	dw	34464
    88  001017  0001               	dw	1
    89  001019  4240               	dw	16960
    90  00101B  000F               	dw	15
    91  00101D  9680               	dw	38528
    92  00101F  0098               	dw	152
    93  001021  E100               	dw	57600
    94  001023  05F5               	dw	1525
    95  001025  CA00               	dw	51712
    96  001027  3B9A               	dw	15258
    97  001029                     __end_of_dpowers:
    98                           	opt stack 0
    99  001029                     __npowers_:
   100                           	opt stack 0
   101  001029  00                 	db	0
   102  00102A  80                 	db	128
   103  00102B  3F                 	db	63
   104  00102C  CD                 	db	205
   105  00102D  CC                 	db	204
   106  00102E  3D                 	db	61
   107  00102F  D7                 	db	215
   108  001030  23                 	db	35
   109  001031  3C                 	db	60
   110  001032  12                 	db	18
   111  001033  83                 	db	131
   112  001034  3A                 	db	58
   113  001035  B7                 	db	183
   114  001036  D1                 	db	209
   115  001037  38                 	db	56
   116  001038  C6                 	db	198
   117  001039  27                 	db	39
   118  00103A  37                 	db	55
   119  00103B  38                 	db	56
   120  00103C  86                 	db	134
   121  00103D  35                 	db	53
   122  00103E  C0                 	db	192
   123  00103F  D6                 	db	214
   124  001040  33                 	db	51
   125  001041  CC                 	db	204
   126  001042  2B                 	db	43
   127  001043  32                 	db	50
   128  001044  70                 	db	112
   129  001045  89                 	db	137
   130  001046  30                 	db	48
   131  001047  E7                 	db	231
   132  001048  DB                 	db	219
   133  001049  2E                 	db	46
   134  00104A  E5                 	db	229
   135  00104B  3C                 	db	60
   136  00104C  1E                 	db	30
   137  00104D  42                 	db	66
   138  00104E  A2                 	db	162
   139  00104F  0D                 	db	13
   140  001050                     __end_of__npowers_:
   141                           	opt stack 0
   142  001050                     __powers_:
   143                           	opt stack 0
   144  001050  00                 	db	0
   145  001051  80                 	db	128
   146  001052  3F                 	db	63
   147  001053  00                 	db	0
   148  001054  20                 	db	32
   149  001055  41                 	db	65
   150  001056  00                 	db	0
   151  001057  C8                 	db	200
   152  001058  42                 	db	66
   153  001059  00                 	db	0
   154  00105A  7A                 	db	122
   155  00105B  44                 	db	68
   156  00105C  40                 	db	64
   157  00105D  1C                 	db	28
   158  00105E  46                 	db	70
   159  00105F  50                 	db	80
   160  001060  C3                 	db	195
   161  001061  47                 	db	71
   162  001062  24                 	db	36
   163  001063  74                 	db	116
   164  001064  49                 	db	73
   165  001065  97                 	db	151
   166  001066  18                 	db	24
   167  001067  4B                 	db	75
   168  001068  BC                 	db	188
   169  001069  BE                 	db	190
   170  00106A  4C                 	db	76
   171  00106B  6B                 	db	107
   172  00106C  6E                 	db	110
   173  00106D  4E                 	db	78
   174  00106E  03                 	db	3
   175  00106F  15                 	db	21
   176  001070  50                 	db	80
   177  001071  79                 	db	121
   178  001072  AD                 	db	173
   179  001073  60                 	db	96
   180  001074  F3                 	db	243
   181  001075  49                 	db	73
   182  001076  71                 	db	113
   183  001077                     __end_of__powers_:
   184                           	opt stack 0
   185  0000                     _ADCON0	set	4034
   186  0000                     _ADCON0bits	set	4034
   187  0000                     _ADCON1	set	4033
   188  0000                     _ADCON2	set	4032
   189  0000                     _ADRESH	set	4036
   190  0000                     _ADRESL	set	4035
   191  0000                     _OSCCON	set	4051
   192  0000                     _PIE1bits	set	3997
   193  0000                     _PIR1bits	set	3998
   194  0000                     _PORTA	set	3968
   195  0000                     _PORTAbits	set	3968
   196  0000                     _PORTB	set	3969
   197  0000                     _PORTBbits	set	3969
   198  0000                     _PORTC	set	3970
   199  0000                     _PORTD	set	3971
   200  0000                     _PORTE	set	3972
   201  0000                     _RCSTA	set	4011
   202  0000                     _RCSTAbits	set	4011
   203  0000                     _SPBRG	set	4015
   204  0000                     _SPBRGH	set	4016
   205  0000                     _TRISA	set	3986
   206  0000                     _TRISB	set	3987
   207  0000                     _TRISC	set	3988
   208  0000                     _TRISCbits	set	3988
   209  0000                     _TRISD	set	3989
   210  0000                     _TRISE	set	3990
   211  0000                     _TXREG	set	4013
   212  0000                     _TXSTA	set	4012
   213  0000                     _TXSTAbits	set	4012
   214  0000                     _TRMT	set	32097
   215  001077                     STR_2:
   216  001077  54                 	db	84	;'T'
   217  001078  65                 	db	101	;'e'
   218  001079  6D                 	db	109	;'m'
   219  00107A  70                 	db	112	;'p'
   220  00107B  65                 	db	101	;'e'
   221  00107C  72                 	db	114	;'r'
   222  00107D  61                 	db	97	;'a'
   223  00107E  74                 	db	116	;'t'
   224  00107F  75                 	db	117	;'u'
   225  001080  72                 	db	114	;'r'
   226  001081  65                 	db	101	;'e'
   227  001082  20                 	db	32
   228  001083  3D                 	db	61	;'='
   229  001084  20                 	db	32
   230  001085  25                 	db	37
   231  001086  64                 	db	100	;'d'
   232  001087  20                 	db	32
   233  001088  46                 	db	70	;'F'
   234  001089  20                 	db	32
   235  00108A  0D                 	db	13
   236  00108B  0A                 	db	10
   237  00108C  0A                 	db	10
   238  00108D  00                 	db	0
   239  00108E                     STR_3:
   240  00108E  4C                 	db	76	;'L'
   241  00108F  69                 	db	105	;'i'
   242  001090  67                 	db	103	;'g'
   243  001091  68                 	db	104	;'h'
   244  001092  74                 	db	116	;'t'
   245  001093  20                 	db	32
   246  001094  56                 	db	86	;'V'
   247  001095  6F                 	db	111	;'o'
   248  001096  6C                 	db	108	;'l'
   249  001097  74                 	db	116	;'t'
   250  001098  20                 	db	32
   251  001099  3D                 	db	61	;'='
   252  00109A  20                 	db	32
   253  00109B  25                 	db	37
   254  00109C  64                 	db	100	;'d'
   255  00109D  20                 	db	32
   256  00109E  6D                 	db	109	;'m'
   257  00109F  56                 	db	86	;'V'
   258  0010A0  20                 	db	32
   259  0010A1  0D                 	db	13
   260  0010A2  0A                 	db	10
   261  0010A3  0A                 	db	10
   262  0010A4  00                 	db	0
   263  0010A5                     STR_1:
   264  0010A5  56                 	db	86	;'V'
   265  0010A6  6F                 	db	111	;'o'
   266  0010A7  6C                 	db	108	;'l'
   267  0010A8  74                 	db	116	;'t'
   268  0010A9  61                 	db	97	;'a'
   269  0010AA  67                 	db	103	;'g'
   270  0010AB  65                 	db	101	;'e'
   271  0010AC  20                 	db	32
   272  0010AD  3D                 	db	61	;'='
   273  0010AE  20                 	db	32
   274  0010AF  25                 	db	37
   275  0010B0  66                 	db	102	;'f'
   276  0010B1  20                 	db	32
   277  0010B2  28                 	db	40
   278  0010B3  6D                 	db	109	;'m'
   279  0010B4  56                 	db	86	;'V'
   280  0010B5  29                 	db	41
   281  0010B6  20                 	db	32
   282  0010B7  0D                 	db	13
   283  0010B8  0A                 	db	10
   284  0010B9  00                 	db	0
   285                           
   286                           ; #config settings
   287  0010BA  00                 	db	0	; dummy byte at the end
   288  0000                     
   289                           	psect	cinit
   290  002D16                     __pcinit:
   291                           	opt stack 0
   292  002D16                     start_initialization:
   293                           	opt stack 0
   294  002D16                     __initialization:
   295                           	opt stack 0
   296                           
   297                           ; Initialize objects allocated to COMRAM (10 bytes)
   298                           ; load TBLPTR registers with __pidataCOMRAM
   299  002D16  0E40               	movlw	low __pidataCOMRAM
   300  002D18  6EF6               	movwf	tblptrl,c
   301  002D1A  0E2E               	movlw	high __pidataCOMRAM
   302  002D1C  6EF7               	movwf	tblptrh,c
   303  002D1E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   304  002D20  6EF8               	movwf	tblptru,c
   305  002D22  EE00  F075         	lfsr	0,__pdataCOMRAM
   306  002D26  EE10 F00A          	lfsr	1,10
   307  002D2A                     copy_data0:
   308  002D2A  0009               	tblrd		*+
   309  002D2C  CFF5 FFEE          	movff	tablat,postinc0
   310  002D30  50E5               	movf	postdec1,w,c
   311  002D32  50E1               	movf	fsr1l,w,c
   312  002D34  E1FA               	bnz	copy_data0
   313  002D36                     end_of_initialization:
   314                           	opt stack 0
   315  002D36                     __end_of__initialization:
   316                           	opt stack 0
   317  002D36  0E00               	movlw	low (__Lmediumconst shr (0+16))
   318  002D38  6EF8               	movwf	tblptru,c
   319  002D3A  0100               	movlb	0
   320  002D3C  EF17  F00F         	goto	_main	;jump to C main() function
   321                           tblptru	equ	0xFF8
   322                           tblptrh	equ	0xFF7
   323                           tblptrl	equ	0xFF6
   324                           tablat	equ	0xFF5
   325                           postinc0	equ	0xFEE
   326                           postdec1	equ	0xFE5
   327                           fsr1l	equ	0xFE1
   328                           
   329                           	psect	dataCOMRAM
   330  000075                     __pdataCOMRAM:
   331                           	opt stack 0
   332  000075                     _array:
   333                           	opt stack 0
   334  000075                     	ds	10
   335                           tblptru	equ	0xFF8
   336                           tblptrh	equ	0xFF7
   337                           tblptrl	equ	0xFF6
   338                           tablat	equ	0xFF5
   339                           postinc0	equ	0xFEE
   340                           postdec1	equ	0xFE5
   341                           fsr1l	equ	0xFE1
   342                           
   343                           	psect	cstackCOMRAM
   344  000001                     __pcstackCOMRAM:
   345                           	opt stack 0
   346  000001                     ?_Get_Full_ADC:
   347                           	opt stack 0
   348  000001                     ?___awmod:
   349                           	opt stack 0
   350  000001                     ?___ftpack:
   351                           	opt stack 0
   352  000001                     ?___ftneg:
   353                           	opt stack 0
   354  000001                     ?__tdiv_to_l_:
   355                           	opt stack 0
   356  000001                     ?__div_to_l_:
   357                           	opt stack 0
   358  000001                     ?___lldiv:
   359                           	opt stack 0
   360  000001                     Select_ADC_Channel@channel:
   361                           	opt stack 0
   362  000001                     putch@c:
   363                           	opt stack 0
   364  000001                     Display_Upper_Digit@PE:
   365                           	opt stack 0
   366  000001                     Display_Lower_Digit@digit:
   367                           	opt stack 0
   368  000001                     WAIT_1_SEC@j:
   369                           	opt stack 0
   370  000001                     DO_DISPLAY_D1@temp:
   371                           	opt stack 0
   372  000001                     DO_DISPLAY_D3@voltage:
   373                           	opt stack 0
   374  000001                     OpenUSART@spbrg:
   375                           	opt stack 0
   376  000001                     ___awmod@dividend:
   377                           	opt stack 0
   378  000001                     __div_to_l_@f1:
   379                           	opt stack 0
   380  000001                     ___ftpack@arg:
   381                           	opt stack 0
   382  000001                     __tdiv_to_l_@f1:
   383                           	opt stack 0
   384  000001                     ___ftge@ff1:
   385                           	opt stack 0
   386  000001                     ___ftneg@f1:
   387                           	opt stack 0
   388  000001                     ___lldiv@dividend:
   389                           	opt stack 0
   390                           
   391                           ; 4 bytes @ 0x0
   392  000001                     	ds	1
   393  000002                     Display_Upper_Digit@digit:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0x1
   397  000002                     	ds	1
   398  000003                     ??_Get_Full_ADC:
   399  000003                     OpenUSART@config:
   400                           	opt stack 0
   401  000003                     ___awmod@divisor:
   402                           	opt stack 0
   403                           
   404                           ; 2 bytes @ 0x2
   405  000003                     	ds	1
   406  000004                     ___ftpack@exp:
   407                           	opt stack 0
   408  000004                     __div_to_l_@f2:
   409                           	opt stack 0
   410  000004                     __tdiv_to_l_@f2:
   411                           	opt stack 0
   412  000004                     ___ftge@ff2:
   413                           	opt stack 0
   414                           
   415                           ; 3 bytes @ 0x3
   416  000004                     	ds	1
   417  000005                     ___awmod@counter:
   418                           	opt stack 0
   419  000005                     ___ftpack@sign:
   420                           	opt stack 0
   421  000005                     Get_Full_ADC@result:
   422                           	opt stack 0
   423  000005                     ___lldiv@divisor:
   424                           	opt stack 0
   425                           
   426                           ; 4 bytes @ 0x4
   427  000005                     	ds	1
   428  000006                     ??___ftpack:
   429  000006                     ___awmod@sign:
   430                           	opt stack 0
   431                           
   432                           ; 1 bytes @ 0x5
   433  000006                     	ds	1
   434  000007                     ??__tdiv_to_l_:
   435  000007                     ??___ftge:
   436  000007                     ?___awdiv:
   437                           	opt stack 0
   438  000007                     ___awdiv@dividend:
   439                           	opt stack 0
   440  000007                     __div_to_l_@quot:
   441                           	opt stack 0
   442                           
   443                           ; 4 bytes @ 0x6
   444  000007                     	ds	2
   445  000009                     ?___awtoft:
   446                           	opt stack 0
   447  000009                     ?___lltoft:
   448                           	opt stack 0
   449  000009                     ___awdiv@divisor:
   450                           	opt stack 0
   451  000009                     ___awtoft@c:
   452                           	opt stack 0
   453  000009                     ___lldiv@quotient:
   454                           	opt stack 0
   455  000009                     ___lltoft@c:
   456                           	opt stack 0
   457                           
   458                           ; 4 bytes @ 0x8
   459  000009                     	ds	1
   460  00000A                     __tdiv_to_l_@quot:
   461                           	opt stack 0
   462                           
   463                           ; 4 bytes @ 0x9
   464  00000A                     	ds	1
   465  00000B                     ___awdiv@counter:
   466                           	opt stack 0
   467  00000B                     __div_to_l_@cntr:
   468                           	opt stack 0
   469                           
   470                           ; 1 bytes @ 0xA
   471  00000B                     	ds	1
   472  00000C                     ___awdiv@sign:
   473                           	opt stack 0
   474  00000C                     ___awtoft@sign:
   475                           	opt stack 0
   476  00000C                     __div_to_l_@exp1:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0xB
   480  00000C                     	ds	1
   481  00000D                     ??___lltoft:
   482  00000D                     ___lldiv@counter:
   483                           	opt stack 0
   484  00000D                     ___awdiv@quotient:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0xC
   488  00000D                     	ds	1
   489  00000E                     ?___llmod:
   490                           	opt stack 0
   491  00000E                     __tdiv_to_l_@cntr:
   492                           	opt stack 0
   493  00000E                     ___llmod@dividend:
   494                           	opt stack 0
   495                           
   496                           ; 4 bytes @ 0xD
   497  00000E                     	ds	1
   498  00000F                     ?___wmul:
   499                           	opt stack 0
   500  00000F                     __tdiv_to_l_@exp1:
   501                           	opt stack 0
   502  00000F                     DO_DISPLAY_D2@temp:
   503                           	opt stack 0
   504  00000F                     ___wmul@multiplier:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0xE
   508  00000F                     	ds	2
   509  000011                     ___lltoft@exp:
   510                           	opt stack 0
   511  000011                     DO_DISPLAY_D2@T:
   512                           	opt stack 0
   513  000011                     ___wmul@multiplicand:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x10
   517  000011                     	ds	1
   518  000012                     ___llmod@divisor:
   519                           	opt stack 0
   520                           
   521                           ; 4 bytes @ 0x11
   522  000012                     	ds	1
   523  000013                     ___wmul@product:
   524                           	opt stack 0
   525                           
   526                           ; 2 bytes @ 0x12
   527  000013                     	ds	2
   528  000015                     ?___ftmul:
   529                           	opt stack 0
   530  000015                     ___ftmul@f1:
   531                           	opt stack 0
   532                           
   533                           ; 3 bytes @ 0x14
   534  000015                     	ds	1
   535  000016                     ___llmod@counter:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x15
   539  000016                     	ds	2
   540  000018                     ___ftmul@f2:
   541                           	opt stack 0
   542                           
   543                           ; 3 bytes @ 0x17
   544  000018                     	ds	3
   545  00001B                     ??___ftmul:
   546                           
   547                           ; 0 bytes @ 0x1A
   548  00001B                     	ds	3
   549  00001E                     ___ftmul@exp:
   550                           	opt stack 0
   551                           
   552                           ; 1 bytes @ 0x1D
   553  00001E                     	ds	1
   554  00001F                     ___ftmul@f3_as_product:
   555                           	opt stack 0
   556                           
   557                           ; 3 bytes @ 0x1E
   558  00001F                     	ds	3
   559  000022                     ___ftmul@cntr:
   560                           	opt stack 0
   561                           
   562                           ; 1 bytes @ 0x21
   563  000022                     	ds	1
   564  000023                     ___ftmul@sign:
   565                           	opt stack 0
   566                           
   567                           ; 1 bytes @ 0x22
   568  000023                     	ds	1
   569  000024                     ?_fround:
   570                           	opt stack 0
   571  000024                     ?_scale:
   572                           	opt stack 0
   573                           
   574                           ; 3 bytes @ 0x23
   575  000024                     	ds	3
   576  000027                     _fround$1269:
   577                           	opt stack 0
   578  000027                     _scale$1270:
   579                           	opt stack 0
   580                           
   581                           ; 3 bytes @ 0x26
   582  000027                     	ds	3
   583  00002A                     scale@scl:
   584                           	opt stack 0
   585  00002A                     _fround$1268:
   586                           	opt stack 0
   587                           
   588                           ; 3 bytes @ 0x29
   589  00002A                     	ds	1
   590  00002B                     ?___fttol:
   591                           	opt stack 0
   592  00002B                     ___fttol@f1:
   593                           	opt stack 0
   594                           
   595                           ; 3 bytes @ 0x2A
   596  00002B                     	ds	2
   597  00002D                     fround@prec:
   598                           	opt stack 0
   599                           
   600                           ; 1 bytes @ 0x2C
   601  00002D                     	ds	1
   602  00002E                     ?___ftadd:
   603                           	opt stack 0
   604  00002E                     ___ftadd@f1:
   605                           	opt stack 0
   606                           
   607                           ; 3 bytes @ 0x2D
   608  00002E                     	ds	1
   609  00002F                     ??___fttol:
   610                           
   611                           ; 0 bytes @ 0x2E
   612  00002F                     	ds	2
   613  000031                     ___ftadd@f2:
   614                           	opt stack 0
   615                           
   616                           ; 3 bytes @ 0x30
   617  000031                     	ds	3
   618  000034                     ??___ftadd:
   619  000034                     ___fttol@sign1:
   620                           	opt stack 0
   621                           
   622                           ; 1 bytes @ 0x33
   623  000034                     	ds	1
   624  000035                     ___fttol@lval:
   625                           	opt stack 0
   626                           
   627                           ; 4 bytes @ 0x34
   628  000035                     	ds	2
   629  000037                     ___ftadd@sign:
   630                           	opt stack 0
   631                           
   632                           ; 1 bytes @ 0x36
   633  000037                     	ds	1
   634  000038                     ___ftadd@exp2:
   635                           	opt stack 0
   636                           
   637                           ; 1 bytes @ 0x37
   638  000038                     	ds	1
   639  000039                     ___ftadd@exp1:
   640                           	opt stack 0
   641  000039                     ___fttol@exp1:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x38
   645  000039                     	ds	1
   646  00003A                     ?___ftdiv:
   647                           	opt stack 0
   648  00003A                     ?___ftsub:
   649                           	opt stack 0
   650  00003A                     ___ftdiv@f1:
   651                           	opt stack 0
   652  00003A                     ___ftsub@f1:
   653                           	opt stack 0
   654                           
   655                           ; 3 bytes @ 0x39
   656  00003A                     	ds	3
   657  00003D                     ___ftdiv@f2:
   658                           	opt stack 0
   659  00003D                     ___ftsub@f2:
   660                           	opt stack 0
   661                           
   662                           ; 3 bytes @ 0x3C
   663  00003D                     	ds	3
   664  000040                     ??___ftdiv:
   665  000040                     ?_printf:
   666                           	opt stack 0
   667  000040                     printf@f:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x3F
   671  000040                     	ds	3
   672  000043                     ___ftdiv@cntr:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x42
   676  000043                     	ds	1
   677  000044                     ___ftdiv@f3:
   678                           	opt stack 0
   679                           
   680                           ; 3 bytes @ 0x43
   681  000044                     	ds	1
   682  000045                     ??_printf:
   683                           
   684                           ; 0 bytes @ 0x44
   685  000045                     	ds	2
   686  000047                     ___ftdiv@exp:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x46
   690  000047                     	ds	1
   691  000048                     ___ftdiv@sign:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x47
   695  000048                     	ds	3
   696  00004B                     _printf$1271:
   697                           	opt stack 0
   698                           
   699                           ; 3 bytes @ 0x4A
   700  00004B                     	ds	3
   701  00004E                     printf@ap:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x4D
   705  00004E                     	ds	2
   706  000050                     printf@flag:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x4F
   710  000050                     	ds	2
   711  000052                     printf@prec:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x51
   715  000052                     	ds	2
   716  000054                     printf@val:
   717                           	opt stack 0
   718                           
   719                           ; 4 bytes @ 0x53
   720  000054                     	ds	4
   721  000058                     printf@exp:
   722                           	opt stack 0
   723                           
   724                           ; 2 bytes @ 0x57
   725  000058                     	ds	2
   726  00005A                     printf@tmpval:
   727                           	opt stack 0
   728                           
   729                           ; 4 bytes @ 0x59
   730  00005A                     	ds	4
   731  00005E                     printf@fval:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x5D
   735  00005E                     	ds	3
   736  000061                     printf@c:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0x60
   740  000061                     	ds	1
   741  000062                     ??_main:
   742                           
   743                           ; 0 bytes @ 0x61
   744  000062                     	ds	2
   745  000064                     main@temperature_C:
   746                           	opt stack 0
   747                           
   748                           ; 3 bytes @ 0x63
   749  000064                     	ds	3
   750  000067                     main@temperature_F:
   751                           	opt stack 0
   752                           
   753                           ; 3 bytes @ 0x66
   754  000067                     	ds	3
   755  00006A                     main@U:
   756                           	opt stack 0
   757                           
   758                           ; 1 bytes @ 0x69
   759  00006A                     	ds	1
   760  00006B                     main@L:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x6A
   764  00006B                     	ds	1
   765  00006C                     main@voltage_mv:
   766                           	opt stack 0
   767                           
   768                           ; 3 bytes @ 0x6B
   769  00006C                     	ds	3
   770  00006F                     main@voltage_mv1:
   771                           	opt stack 0
   772                           
   773                           ; 2 bytes @ 0x6E
   774  00006F                     	ds	2
   775  000071                     main@num_step:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x70
   779  000071                     	ds	2
   780  000073                     main@tempF:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x72
   784  000073                     	ds	2
   785                           tblptru	equ	0xFF8
   786                           tblptrh	equ	0xFF7
   787                           tblptrl	equ	0xFF6
   788                           tablat	equ	0xFF5
   789                           postinc0	equ	0xFEE
   790                           postdec1	equ	0xFE5
   791                           fsr1l	equ	0xFE1
   792                           
   793 ;;
   794 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   795 ;;
   796 ;; *************** function _main *****************
   797 ;; Defined at:
   798 ;;		line 67 in file "Lab5p6_1.c"
   799 ;; Parameters:    Size  Location     Type
   800 ;;		None
   801 ;; Auto vars:     Size  Location     Type
   802 ;;  voltage_mv      3  107[COMRAM] float 
   803 ;;  temperature_    3  102[COMRAM] float 
   804 ;;  temperature_    3   99[COMRAM] float 
   805 ;;  tempF           2  114[COMRAM] int 
   806 ;;  num_step        2  112[COMRAM] int 
   807 ;;  voltage_mv1     2  110[COMRAM] int 
   808 ;;  L               1  106[COMRAM] unsigned char 
   809 ;;  U               1  105[COMRAM] unsigned char 
   810 ;; Return value:  Size  Location     Type
   811 ;;		None               void
   812 ;; Registers used:
   813 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   814 ;; Tracked objects:
   815 ;;		On entry : 0/0
   816 ;;		On exit  : 0/0
   817 ;;		Unchanged: 0/0
   818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   820 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   821 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   822 ;;      Totals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;Total ram usage:       19 bytes
   824 ;; Hardware stack levels required when called:    4
   825 ;; This function calls:
   826 ;;		_DO_DISPLAY_D1
   827 ;;		_DO_DISPLAY_D2
   828 ;;		_DO_DISPLAY_D3
   829 ;;		_Display_Lower_Digit
   830 ;;		_Display_Upper_Digit
   831 ;;		_Get_Full_ADC
   832 ;;		_Init_ADC
   833 ;;		_Init_TRIS
   834 ;;		_Init_UART
   835 ;;		_Select_ADC_Channel
   836 ;;		_WAIT_1_SEC
   837 ;;		___awdiv
   838 ;;		___awmod
   839 ;;		___awtoft
   840 ;;		___ftadd
   841 ;;		___ftdiv
   842 ;;		___ftmul
   843 ;;		___ftneg
   844 ;;		___fttol
   845 ;;		_printf
   846 ;; This function is called by:
   847 ;;		Startup code after reset
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           	psect	text0
   852  001E2E                     __ptext0:
   853                           	opt stack 0
   854  001E2E                     _main:
   855                           	opt stack 27
   856                           
   857                           ;Lab5p6_1.c: 69: Init_UART();
   858                           
   859                           ;incstack = 0
   860  001E2E  EC02  F017         	call	_Init_UART	;wreg free
   861                           
   862                           ;Lab5p6_1.c: 70: Init_ADC();
   863  001E32  EC13  F017         	call	_Init_ADC	;wreg free
   864                           
   865                           ;Lab5p6_1.c: 71: Init_TRIS();
   866  001E36  ECF7  F016         	call	_Init_TRIS	;wreg free
   867                           
   868                           ;Lab5p6_1.c: 72: PORTA = 0x00;
   869  001E3A  0E00               	movlw	0
   870  001E3C  6E80               	movwf	3968,c	;volatile
   871                           
   872                           ;Lab5p6_1.c: 73: PORTB = 0x00;
   873  001E3E  0E00               	movlw	0
   874  001E40  6E81               	movwf	3969,c	;volatile
   875                           
   876                           ;Lab5p6_1.c: 74: PORTC = 0xFF;
   877  001E42  6882               	setf	3970,c	;volatile
   878                           
   879                           ;Lab5p6_1.c: 75: PORTD = 0xFF;
   880  001E44  6883               	setf	3971,c	;volatile
   881                           
   882                           ;Lab5p6_1.c: 76: PORTE = 0xFF;
   883  001E46  6884               	setf	3972,c	;volatile
   884  001E48  D000               	goto	l2850
   885  001E4A                     l2850:
   886                           
   887                           ;Lab5p6_1.c: 79: {
   888                           ;Lab5p6_1.c: 80: Select_ADC_Channel(0);
   889  001E4A  0E00               	movlw	0
   890  001E4C  EC1A  F017         	call	_Select_ADC_Channel
   891                           
   892                           ;Lab5p6_1.c: 81: int num_step = Get_Full_ADC();
   893  001E50  ECB4  F016         	call	_Get_Full_ADC	;wreg free
   894  001E54  C001  F071         	movff	?_Get_Full_ADC,main@num_step
   895  001E58  C002  F072         	movff	?_Get_Full_ADC+1,main@num_step+1
   896                           
   897                           ;Lab5p6_1.c: 82: float voltage_mv = num_step * 4.0;
   898  001E5C  C071  F009         	movff	main@num_step,___awtoft@c
   899  001E60  C072  F00A         	movff	main@num_step+1,___awtoft@c+1
   900  001E64  EC6D  F016         	call	___awtoft	;wreg free
   901  001E68  C009  F015         	movff	?___awtoft,___ftmul@f1
   902  001E6C  C00A  F016         	movff	?___awtoft+1,___ftmul@f1+1
   903  001E70  C00B  F017         	movff	?___awtoft+2,___ftmul@f1+2
   904  001E74  0E00               	movlw	0
   905  001E76  6E18               	movwf	___ftmul@f2,c
   906  001E78  0E80               	movlw	128
   907  001E7A  6E19               	movwf	___ftmul@f2+1,c
   908  001E7C  0E40               	movlw	64
   909  001E7E  6E1A               	movwf	___ftmul@f2+2,c
   910  001E80  ECFB  F011         	call	___ftmul	;wreg free
   911  001E84  C015  F06C         	movff	?___ftmul,main@voltage_mv
   912  001E88  C016  F06D         	movff	?___ftmul+1,main@voltage_mv+1
   913  001E8C  C017  F06E         	movff	?___ftmul+2,main@voltage_mv+2
   914                           
   915                           ;Lab5p6_1.c: 83: float temperature_C = (1035.0 - voltage_mv) / 5.50;
   916  001E90  0E60               	movlw	96
   917  001E92  6E31               	movwf	___ftadd@f2,c
   918  001E94  0E81               	movlw	129
   919  001E96  6E32               	movwf	___ftadd@f2+1,c
   920  001E98  0E44               	movlw	68
   921  001E9A  6E33               	movwf	___ftadd@f2+2,c
   922  001E9C  C06C  F001         	movff	main@voltage_mv,___ftneg@f1
   923  001EA0  C06D  F002         	movff	main@voltage_mv+1,___ftneg@f1+1
   924  001EA4  C06E  F003         	movff	main@voltage_mv+2,___ftneg@f1+2
   925  001EA8  ECC7  F016         	call	___ftneg	;wreg free
   926  001EAC  C001  F02E         	movff	?___ftneg,___ftadd@f1
   927  001EB0  C002  F02F         	movff	?___ftneg+1,___ftadd@f1+1
   928  001EB4  C003  F030         	movff	?___ftneg+2,___ftadd@f1+2
   929  001EB8  EC0C  F010         	call	___ftadd	;wreg free
   930  001EBC  C02E  F03A         	movff	?___ftadd,___ftdiv@f1
   931  001EC0  C02F  F03B         	movff	?___ftadd+1,___ftdiv@f1+1
   932  001EC4  C030  F03C         	movff	?___ftadd+2,___ftdiv@f1+2
   933  001EC8  0E00               	movlw	0
   934  001ECA  6E3D               	movwf	___ftdiv@f2,c
   935  001ECC  0EB0               	movlw	176
   936  001ECE  6E3E               	movwf	___ftdiv@f2+1,c
   937  001ED0  0E40               	movlw	64
   938  001ED2  6E3F               	movwf	___ftdiv@f2+2,c
   939  001ED4  ECEA  F012         	call	___ftdiv	;wreg free
   940  001ED8  C03A  F064         	movff	?___ftdiv,main@temperature_C
   941  001EDC  C03B  F065         	movff	?___ftdiv+1,main@temperature_C+1
   942  001EE0  C03C  F066         	movff	?___ftdiv+2,main@temperature_C+2
   943                           
   944                           ;Lab5p6_1.c: 84: float temperature_F = 1.80 * temperature_C + 32.0;
   945  001EE4  0E66               	movlw	102
   946  001EE6  6E18               	movwf	___ftmul@f2,c
   947  001EE8  0EE6               	movlw	230
   948  001EEA  6E19               	movwf	___ftmul@f2+1,c
   949  001EEC  0E3F               	movlw	63
   950  001EEE  6E1A               	movwf	___ftmul@f2+2,c
   951  001EF0  C064  F015         	movff	main@temperature_C,___ftmul@f1
   952  001EF4  C065  F016         	movff	main@temperature_C+1,___ftmul@f1+1
   953  001EF8  C066  F017         	movff	main@temperature_C+2,___ftmul@f1+2
   954  001EFC  ECFB  F011         	call	___ftmul	;wreg free
   955  001F00  C015  F02E         	movff	?___ftmul,___ftadd@f1
   956  001F04  C016  F02F         	movff	?___ftmul+1,___ftadd@f1+1
   957  001F08  C017  F030         	movff	?___ftmul+2,___ftadd@f1+2
   958  001F0C  0E00               	movlw	0
   959  001F0E  6E31               	movwf	___ftadd@f2,c
   960  001F10  0E00               	movlw	0
   961  001F12  6E32               	movwf	___ftadd@f2+1,c
   962  001F14  0E42               	movlw	66
   963  001F16  6E33               	movwf	___ftadd@f2+2,c
   964  001F18  EC0C  F010         	call	___ftadd	;wreg free
   965  001F1C  C02E  F067         	movff	?___ftadd,main@temperature_F
   966  001F20  C02F  F068         	movff	?___ftadd+1,main@temperature_F+1
   967  001F24  C030  F069         	movff	?___ftadd+2,main@temperature_F+2
   968                           
   969                           ;Lab5p6_1.c: 85: int tempF = (int)temperature_F;
   970  001F28  C067  F02B         	movff	main@temperature_F,___fttol@f1
   971  001F2C  C068  F02C         	movff	main@temperature_F+1,___fttol@f1+1
   972  001F30  C069  F02D         	movff	main@temperature_F+2,___fttol@f1+2
   973  001F34  EC77  F012         	call	___fttol	;wreg free
   974  001F38  C02B  F073         	movff	?___fttol,main@tempF
   975  001F3C  C02C  F074         	movff	?___fttol+1,main@tempF+1
   976                           
   977                           ;Lab5p6_1.c: 86: char U = tempF / 10;
   978  001F40  C073  F007         	movff	main@tempF,___awdiv@dividend
   979  001F44  C074  F008         	movff	main@tempF+1,___awdiv@dividend+1
   980  001F48  0E00               	movlw	0
   981  001F4A  6E0A               	movwf	___awdiv@divisor+1,c
   982  001F4C  0E0A               	movlw	10
   983  001F4E  6E09               	movwf	___awdiv@divisor,c
   984  001F50  EC59  F014         	call	___awdiv	;wreg free
   985  001F54  5007               	movf	?___awdiv,w,c
   986  001F56  6E6A               	movwf	main@U,c
   987                           
   988                           ;Lab5p6_1.c: 87: char L = tempF % 10;
   989  001F58  C073  F001         	movff	main@tempF,___awmod@dividend
   990  001F5C  C074  F002         	movff	main@tempF+1,___awmod@dividend+1
   991  001F60  0E00               	movlw	0
   992  001F62  6E04               	movwf	___awmod@divisor+1,c
   993  001F64  0E0A               	movlw	10
   994  001F66  6E03               	movwf	___awmod@divisor,c
   995  001F68  ECEA  F014         	call	___awmod	;wreg free
   996  001F6C  5001               	movf	?___awmod,w,c
   997  001F6E  6E6B               	movwf	main@L,c
   998                           
   999                           ;Lab5p6_1.c: 88: Display_Upper_Digit(U);
  1000  001F70  506A               	movf	main@U,w,c
  1001  001F72  EC4D  F016         	call	_Display_Upper_Digit
  1002                           
  1003                           ;Lab5p6_1.c: 89: Display_Lower_Digit(L);
  1004  001F76  506B               	movf	main@L,w,c
  1005  001F78  ECEB  F016         	call	_Display_Lower_Digit
  1006                           
  1007                           ;Lab5p6_1.c: 90: printf("Voltage = %f (mV) \r\n", voltage_mv);
  1008  001F7C  0EA5               	movlw	low STR_1
  1009  001F7E  6E40               	movwf	printf@f,c
  1010  001F80  0E10               	movlw	high STR_1
  1011  001F82  6E41               	movwf	printf@f+1,c
  1012  001F84  C06C  F042         	movff	main@voltage_mv,?_printf+2
  1013  001F88  C06D  F043         	movff	main@voltage_mv+1,?_printf+3
  1014  001F8C  C06E  F044         	movff	main@voltage_mv+2,?_printf+4
  1015  001F90  EC5E  F008         	call	_printf	;wreg free
  1016                           
  1017                           ;Lab5p6_1.c: 91: printf("Temperature = %d F \r\n\n", tempF);
  1018  001F94  0E77               	movlw	low STR_2
  1019  001F96  6E40               	movwf	printf@f,c
  1020  001F98  0E10               	movlw	high STR_2
  1021  001F9A  6E41               	movwf	printf@f+1,c
  1022  001F9C  C073  F042         	movff	main@tempF,?_printf+2
  1023  001FA0  C074  F043         	movff	main@tempF+1,?_printf+3
  1024  001FA4  EC5E  F008         	call	_printf	;wreg free
  1025                           
  1026                           ;Lab5p6_1.c: 92: DO_DISPLAY_D2(tempF);
  1027  001FA8  C073  F00F         	movff	main@tempF,DO_DISPLAY_D2@temp
  1028  001FAC  C074  F010         	movff	main@tempF+1,DO_DISPLAY_D2@temp+1
  1029  001FB0  EC9B  F015         	call	_DO_DISPLAY_D2	;wreg free
  1030                           
  1031                           ;Lab5p6_1.c: 93: DO_DISPLAY_D1(tempF);
  1032  001FB4  C073  F001         	movff	main@tempF,DO_DISPLAY_D1@temp
  1033  001FB8  C074  F002         	movff	main@tempF+1,DO_DISPLAY_D1@temp+1
  1034  001FBC  ECBE  F013         	call	_DO_DISPLAY_D1	;wreg free
  1035                           
  1036                           ;Lab5p6_1.c: 95: Select_ADC_Channel(1);
  1037  001FC0  0E01               	movlw	1
  1038  001FC2  EC1A  F017         	call	_Select_ADC_Channel
  1039                           
  1040                           ;Lab5p6_1.c: 96: int num_step = Get_Full_ADC();
  1041  001FC6  ECB4  F016         	call	_Get_Full_ADC	;wreg free
  1042  001FCA  C001  F071         	movff	?_Get_Full_ADC,main@num_step
  1043  001FCE  C002  F072         	movff	?_Get_Full_ADC+1,main@num_step+1
  1044                           
  1045                           ;Lab5p6_1.c: 97: int voltage_mv1 = num_step * 4;
  1046  001FD2  C071  F062         	movff	main@num_step,??_main
  1047  001FD6  C072  F063         	movff	main@num_step+1,??_main+1
  1048  001FDA  90D8               	bcf	status,0,c
  1049  001FDC  3662               	rlcf	??_main,f,c
  1050  001FDE  3663               	rlcf	??_main+1,f,c
  1051  001FE0  90D8               	bcf	status,0,c
  1052  001FE2  3662               	rlcf	??_main,f,c
  1053  001FE4  3663               	rlcf	??_main+1,f,c
  1054  001FE6  C062  F06F         	movff	??_main,main@voltage_mv1
  1055  001FEA  C063  F070         	movff	??_main+1,main@voltage_mv1+1
  1056                           
  1057                           ;Lab5p6_1.c: 98: printf("Light Volt = %d mV \r\n\n", voltage_mv1);
  1058  001FEE  0E8E               	movlw	low STR_3
  1059  001FF0  6E40               	movwf	printf@f,c
  1060  001FF2  0E10               	movlw	high STR_3
  1061  001FF4  6E41               	movwf	printf@f+1,c
  1062  001FF6  C06F  F042         	movff	main@voltage_mv1,?_printf+2
  1063  001FFA  C070  F043         	movff	main@voltage_mv1+1,?_printf+3
  1064  001FFE  EC5E  F008         	call	_printf	;wreg free
  1065                           
  1066                           ;Lab5p6_1.c: 99: DO_DISPLAY_D3(voltage_mv1);
  1067  002002  C06F  F001         	movff	main@voltage_mv1,DO_DISPLAY_D3@voltage
  1068  002006  C070  F002         	movff	main@voltage_mv1+1,DO_DISPLAY_D3@voltage+1
  1069  00200A  EC01  F016         	call	_DO_DISPLAY_D3	;wreg free
  1070                           
  1071                           ;Lab5p6_1.c: 100: WAIT_1_SEC();
  1072  00200E  ECD9  F016         	call	_WAIT_1_SEC	;wreg free
  1073  002012  D71B               	goto	l2850
  1074  002014  EF00  F000         	goto	start
  1075  002018                     __end_of_main:
  1076                           	opt stack 0
  1077                           tblptru	equ	0xFF8
  1078                           tblptrh	equ	0xFF7
  1079                           tblptrl	equ	0xFF6
  1080                           tablat	equ	0xFF5
  1081                           postinc0	equ	0xFEE
  1082                           postdec1	equ	0xFE5
  1083                           fsr1l	equ	0xFE1
  1084                           status	equ	0xFD8
  1085                           
  1086 ;; *************** function _printf *****************
  1087 ;; Defined at:
  1088 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1089 ;; Parameters:    Size  Location     Type
  1090 ;;  f               2   63[COMRAM] PTR const unsigned char 
  1091 ;;		 -> STR_3(23), STR_2(23), STR_1(21), 
  1092 ;; Auto vars:     Size  Location     Type
  1093 ;;  tmpval          4   89[COMRAM] struct .
  1094 ;;  val             4   83[COMRAM] unsigned long 
  1095 ;;  fval            3   93[COMRAM] unsigned long 
  1096 ;;  cp              3    0        PTR const unsigned char 
  1097 ;;  exp             2   87[COMRAM] int 
  1098 ;;  prec            2   81[COMRAM] int 
  1099 ;;  flag            2   79[COMRAM] unsigned short 
  1100 ;;  ap              2   77[COMRAM] PTR void [1]
  1101 ;;		 -> ?_printf(2), 
  1102 ;;  len             2    0        unsigned int 
  1103 ;;  width           2    0        int 
  1104 ;;  c               1   96[COMRAM] char 
  1105 ;;  d               1    0        unsigned char 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  2   63[COMRAM] int 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1115 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1116 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1117 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1118 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1119 ;;Total ram usage:       34 bytes
  1120 ;; Hardware stack levels used:    1
  1121 ;; Hardware stack levels required when called:    3
  1122 ;; This function calls:
  1123 ;;		___awdiv
  1124 ;;		___ftadd
  1125 ;;		___ftge
  1126 ;;		___ftmul
  1127 ;;		___ftneg
  1128 ;;		___ftsub
  1129 ;;		___fttol
  1130 ;;		___lldiv
  1131 ;;		___llmod
  1132 ;;		___lltoft
  1133 ;;		___wmul
  1134 ;;		__div_to_l_
  1135 ;;		__tdiv_to_l_
  1136 ;;		_fround
  1137 ;;		_putch
  1138 ;;		_scale
  1139 ;; This function is called by:
  1140 ;;		_main
  1141 ;; This function uses a non-reentrant model
  1142 ;;
  1143                           
  1144                           	psect	text1
  1145  0010BC                     __ptext1:
  1146                           	opt stack 0
  1147  0010BC                     _printf:
  1148                           	opt stack 27
  1149                           
  1150                           ;doprnt.c: 466: va_list ap;
  1151                           ;doprnt.c: 499: signed char c;
  1152                           ;doprnt.c: 501: int width;
  1153                           ;doprnt.c: 504: int prec;
  1154                           ;doprnt.c: 508: unsigned short flag;
  1155                           ;doprnt.c: 515: char d;
  1156                           ;doprnt.c: 516: double fval;
  1157                           ;doprnt.c: 517: int exp;
  1158                           ;doprnt.c: 523: union {
  1159                           ;doprnt.c: 524: unsigned long vd;
  1160                           ;doprnt.c: 525: double integ;
  1161                           ;doprnt.c: 526: } tmpval;
  1162                           ;doprnt.c: 528: unsigned long val;
  1163                           ;doprnt.c: 529: unsigned len;
  1164                           ;doprnt.c: 530: const char * cp;
  1165                           ;doprnt.c: 533: *ap = __va_start();
  1166                           
  1167                           ;incstack = 0
  1168  0010BC  0E42               	movlw	low (?_printf+2)
  1169  0010BE  6E4E               	movwf	printf@ap,c
  1170  0010C0  0E00               	movlw	high (?_printf+2)
  1171  0010C2  6E4F               	movwf	printf@ap+1,c
  1172                           
  1173                           ;doprnt.c: 536: while(c = *f++) {
  1174  0010C4  D393               	goto	l2722
  1175  0010C6                     l2542:
  1176                           
  1177                           ;doprnt.c: 538: if(c != '%')
  1178  0010C6  0E25               	movlw	37
  1179  0010C8  1861               	xorwf	printf@c,w,c
  1180  0010CA  B4D8               	btfsc	status,2,c
  1181  0010CC  D004               	goto	l2546
  1182                           
  1183                           ;doprnt.c: 540: {
  1184                           ;doprnt.c: 541: (putch(c) );
  1185  0010CE  5061               	movf	printf@c,w,c
  1186  0010D0  EC0C  F017         	call	_putch
  1187                           
  1188                           ;doprnt.c: 542: continue;
  1189  0010D4  D38B               	goto	l2722
  1190  0010D6                     l2546:
  1191                           
  1192                           ;doprnt.c: 543: }
  1193                           ;doprnt.c: 548: flag = 0;
  1194  0010D6  0E00               	movlw	0
  1195  0010D8  6E51               	movwf	printf@flag+1,c
  1196  0010DA  0E00               	movlw	0
  1197  0010DC  6E50               	movwf	printf@flag,c
  1198                           
  1199                           ;doprnt.c: 635: switch(c = *f++) {
  1200  0010DE  D005               	goto	l2552
  1201                           
  1202                           ;doprnt.c: 638: goto alldone;
  1203                           
  1204                           ;doprnt.c: 637: case 0:
  1205  0010E0  D393               	goto	l259
  1206  0010E2                     l2548:
  1207                           
  1208                           ;doprnt.c: 663: flag |= 0x400;
  1209  0010E2  8451               	bsf	printf@flag+1,2,c
  1210                           
  1211                           ;doprnt.c: 698: case 'i':
  1212                           ;doprnt.c: 699: break;
  1213                           
  1214                           ;doprnt.c: 697: case 'd':
  1215                           
  1216                           ;doprnt.c: 664: break;
  1217  0010E4  D018               	goto	l2554
  1218                           
  1219                           ;doprnt.c: 813: continue;
  1220                           
  1221                           ;doprnt.c: 802: default:
  1222  0010E6  D382               	goto	l2722
  1223                           
  1224                           ;doprnt.c: 822: }
  1225  0010E8  D016               	goto	l2554
  1226  0010EA                     l2552:
  1227  0010EA  C040  FFF6         	movff	printf@f,tblptrl
  1228  0010EE  C041  FFF7         	movff	printf@f+1,tblptrh
  1229  0010F2  4A40               	infsnz	printf@f,f,c
  1230  0010F4  2A41               	incf	printf@f+1,f,c
  1231  0010F6                     	if	0	;tblptru may be non-zero
  1232  0010F6                     	endif
  1233  0010F6                     	if	0	;tblptru may be non-zero
  1234  0010F6                     	endif
  1235  0010F6  0008               	tblrd		*
  1236  0010F8  CFF5 F061          	movff	tablat,printf@c
  1237  0010FC  5061               	movf	printf@c,w,c
  1238                           
  1239                           ; Switch size 1, requested type "space"
  1240                           ; Number of cases is 4, Range of values is 0 to 105
  1241                           ; switch strategies available:
  1242                           ; Name         Instructions Cycles
  1243                           ; simple_byte           13     7 (average)
  1244                           ;	Chosen strategy is simple_byte
  1245  0010FE  0A00               	xorlw	0	; case 0
  1246  001100  B4D8               	btfsc	status,2,c
  1247  001102  D382               	goto	l259
  1248  001104  0A64               	xorlw	100	; case 100
  1249  001106  B4D8               	btfsc	status,2,c
  1250  001108  D006               	goto	l2554
  1251  00110A  0A02               	xorlw	2	; case 102
  1252  00110C  B4D8               	btfsc	status,2,c
  1253  00110E  D7E9               	goto	l2548
  1254  001110  0A0F               	xorlw	15	; case 105
  1255  001112  A4D8               	btfss	status,2,c
  1256  001114  D36B               	goto	l2722
  1257  001116                     l2554:
  1258                           
  1259                           ;doprnt.c: 825: if(flag & (0x700)) {
  1260  001116  0E07               	movlw	7
  1261  001118  1451               	andwf	printf@flag+1,w,c
  1262  00111A  B4D8               	btfsc	status,2,c
  1263  00111C  D2CA               	goto	l2686
  1264                           
  1265                           ;doprnt.c: 829: prec = 6;
  1266  00111E  0E00               	movlw	0
  1267  001120  6E53               	movwf	printf@prec+1,c
  1268  001122  0E06               	movlw	6
  1269  001124  6E52               	movwf	printf@prec,c
  1270                           
  1271                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1272  001126  C04E  FFD9         	movff	printf@ap,fsr2l
  1273  00112A  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1274  00112E  CFDE F05E          	movff	postinc2,printf@fval
  1275  001132  CFDE F05F          	movff	postinc2,printf@fval+1
  1276  001136  CFDD F060          	movff	postdec2,printf@fval+2
  1277  00113A  0E03               	movlw	3
  1278  00113C  264E               	addwf	printf@ap,f,c
  1279  00113E  0E00               	movlw	0
  1280  001140  224F               	addwfc	printf@ap+1,f,c
  1281                           
  1282                           ;doprnt.c: 831: if(fval < 0.0) {
  1283  001142  AE60               	btfss	printf@fval+2,7,c
  1284  001144  D011               	goto	l2568
  1285                           
  1286                           ;doprnt.c: 832: fval = -fval;
  1287  001146  C05E  F001         	movff	printf@fval,___ftneg@f1
  1288  00114A  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  1289  00114E  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  1290  001152  ECC7  F016         	call	___ftneg	;wreg free
  1291  001156  C001  F05E         	movff	?___ftneg,printf@fval
  1292  00115A  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  1293  00115E  C003  F060         	movff	?___ftneg+2,printf@fval+2
  1294                           
  1295                           ;doprnt.c: 833: flag |= 0x03;
  1296  001162  0E03               	movlw	3
  1297  001164  1250               	iorwf	printf@flag,f,c
  1298  001166  D000               	goto	l2568
  1299  001168                     l2568:
  1300                           
  1301                           ;doprnt.c: 834: }
  1302                           ;doprnt.c: 835: exp = 0;
  1303  001168  0E00               	movlw	0
  1304  00116A  6E59               	movwf	printf@exp+1,c
  1305  00116C  0E00               	movlw	0
  1306  00116E  6E58               	movwf	printf@exp,c
  1307                           
  1308                           ;doprnt.c: 836: if( fval!=0) {
  1309  001170  505E               	movf	printf@fval,w,c
  1310  001172  105F               	iorwf	printf@fval+1,w,c
  1311  001174  1060               	iorwf	printf@fval+2,w,c
  1312  001176  B4D8               	btfsc	status,2,c
  1313  001178  D085               	goto	l2596
  1314                           
  1315                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1316  00117A  0E82               	movlw	130
  1317  00117C  6E45               	movwf	??_printf& (0+255),c
  1318  00117E  0EFF               	movlw	255
  1319  001180  6E46               	movwf	(??_printf+1)& (0+255),c
  1320  001182  C05E  F047         	movff	printf@fval,??_printf+2
  1321  001186  C05F  F048         	movff	printf@fval+1,??_printf+3
  1322  00118A  C060  F049         	movff	printf@fval+2,??_printf+4
  1323  00118E  C061  F04A         	movff	printf@fval+3,??_printf+5
  1324  001192  0E10               	movlw	16
  1325  001194  D005               	goto	u2650
  1326  001196                     u2655:
  1327  001196  90D8               	bcf	status,0,c
  1328  001198  324A               	rrcf	??_printf+5,f,c
  1329  00119A  3249               	rrcf	??_printf+4,f,c
  1330  00119C  3248               	rrcf	??_printf+3,f,c
  1331  00119E  3247               	rrcf	??_printf+2,f,c
  1332  0011A0                     u2650:
  1333  0011A0  2EE8               	decfsz	wreg,f,c
  1334  0011A2  D7F9               	goto	u2655
  1335  0011A4  5047               	movf	??_printf+2,w,c
  1336  0011A6  2445               	addwf	??_printf,w,c
  1337  0011A8  6E58               	movwf	printf@exp,c
  1338  0011AA  0E00               	movlw	0
  1339  0011AC  2046               	addwfc	??_printf+1,w,c
  1340  0011AE  6E59               	movwf	printf@exp+1,c
  1341                           
  1342                           ;doprnt.c: 838: exp--;
  1343  0011B0  0658               	decf	printf@exp,f,c
  1344  0011B2  A0D8               	btfss	status,0,c
  1345  0011B4  0659               	decf	printf@exp+1,f,c
  1346                           
  1347                           ;doprnt.c: 839: exp *= 3;
  1348  0011B6  C058  F00F         	movff	printf@exp,___wmul@multiplier
  1349  0011BA  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1350  0011BE  0E00               	movlw	0
  1351  0011C0  6E12               	movwf	___wmul@multiplicand+1,c
  1352  0011C2  0E03               	movlw	3
  1353  0011C4  6E11               	movwf	___wmul@multiplicand,c
  1354  0011C6  ECA0  F016         	call	___wmul	;wreg free
  1355  0011CA  C00F  F058         	movff	?___wmul,printf@exp
  1356  0011CE  C010  F059         	movff	?___wmul+1,printf@exp+1
  1357                           
  1358                           ;doprnt.c: 840: exp /= 10;
  1359  0011D2  C058  F007         	movff	printf@exp,___awdiv@dividend
  1360  0011D6  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1361  0011DA  0E00               	movlw	0
  1362  0011DC  6E0A               	movwf	___awdiv@divisor+1,c
  1363  0011DE  0E0A               	movlw	10
  1364  0011E0  6E09               	movwf	___awdiv@divisor,c
  1365  0011E2  EC59  F014         	call	___awdiv	;wreg free
  1366  0011E6  C007  F058         	movff	?___awdiv,printf@exp
  1367  0011EA  C008  F059         	movff	?___awdiv+1,printf@exp+1
  1368                           
  1369                           ;doprnt.c: 841: if(exp < 0)
  1370  0011EE  AE59               	btfss	printf@exp+1,7,c
  1371  0011F0  D004               	goto	l2584
  1372                           
  1373                           ;doprnt.c: 842: exp--;
  1374  0011F2  0658               	decf	printf@exp,f,c
  1375  0011F4  A0D8               	btfss	status,0,c
  1376  0011F6  0659               	decf	printf@exp+1,f,c
  1377  0011F8  D000               	goto	l2584
  1378  0011FA                     l2584:
  1379                           
  1380                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1381  0011FA  5058               	movf	printf@exp,w,c
  1382  0011FC  0800               	sublw	0
  1383  0011FE  EC05  F00C         	call	_scale
  1384  001202  C024  F05A         	movff	?_scale,printf@tmpval
  1385  001206  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1386  00120A  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1387                           
  1388                           ;doprnt.c: 847: tmpval.integ *= fval;
  1389  00120E  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  1390  001212  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  1391  001216  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  1392  00121A  C05E  F018         	movff	printf@fval,___ftmul@f2
  1393  00121E  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1394  001222  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1395  001226  ECFB  F011         	call	___ftmul	;wreg free
  1396  00122A  C015  F05A         	movff	?___ftmul,printf@tmpval
  1397  00122E  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  1398  001232  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  1399                           
  1400                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1401  001236  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1402  00123A  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1403  00123E  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1404  001242  0E00               	movlw	0
  1405  001244  6E04               	movwf	___ftge@ff2,c
  1406  001246  0E80               	movlw	128
  1407  001248  6E05               	movwf	___ftge@ff2+1,c
  1408  00124A  0E3F               	movlw	63
  1409  00124C  6E06               	movwf	___ftge@ff2+2,c
  1410  00124E  EC0E  F014         	call	___ftge	;wreg free
  1411  001252  B0D8               	btfsc	status,0,c
  1412  001254  D004               	goto	l2592
  1413                           
  1414                           ;doprnt.c: 849: exp--;
  1415  001256  0658               	decf	printf@exp,f,c
  1416  001258  A0D8               	btfss	status,0,c
  1417  00125A  0659               	decf	printf@exp+1,f,c
  1418  00125C  D013               	goto	l2596
  1419  00125E                     l2592:
  1420                           
  1421                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1422  00125E  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1423  001262  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1424  001266  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1425  00126A  0E00               	movlw	0
  1426  00126C  6E04               	movwf	___ftge@ff2,c
  1427  00126E  0E20               	movlw	32
  1428  001270  6E05               	movwf	___ftge@ff2+1,c
  1429  001272  0E41               	movlw	65
  1430  001274  6E06               	movwf	___ftge@ff2+2,c
  1431  001276  EC0E  F014         	call	___ftge	;wreg free
  1432  00127A  A0D8               	btfss	status,0,c
  1433  00127C  D003               	goto	l2596
  1434                           
  1435                           ;doprnt.c: 851: exp++;
  1436  00127E  4A58               	infsnz	printf@exp,f,c
  1437  001280  2A59               	incf	printf@exp+1,f,c
  1438  001282  D000               	goto	l2596
  1439  001284                     l2596:
  1440                           
  1441                           ;doprnt.c: 852: }
  1442                           ;doprnt.c: 1112: if(prec <= 12)
  1443  001284  BE53               	btfsc	printf@prec+1,7,c
  1444  001286  D006               	goto	l2598
  1445  001288  5053               	movf	printf@prec+1,w,c
  1446  00128A  E11C               	bnz	l2600
  1447  00128C  0E0D               	movlw	13
  1448  00128E  5C52               	subwf	printf@prec,w,c
  1449  001290  B0D8               	btfsc	status,0,c
  1450  001292  D018               	goto	l2600
  1451  001294                     l2598:
  1452                           
  1453                           ;doprnt.c: 1113: fval += fround(prec);
  1454  001294  C05E  F02E         	movff	printf@fval,___ftadd@f1
  1455  001298  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  1456  00129C  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  1457  0012A0  5052               	movf	printf@prec,w,c
  1458  0012A2  ECF5  F00D         	call	_fround
  1459  0012A6  C024  F031         	movff	?_fround,___ftadd@f2
  1460  0012AA  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  1461  0012AE  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  1462  0012B2  EC0C  F010         	call	___ftadd	;wreg free
  1463  0012B6  C02E  F05E         	movff	?___ftadd,printf@fval
  1464  0012BA  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  1465  0012BE  C030  F060         	movff	?___ftadd+2,printf@fval+2
  1466  0012C2  D000               	goto	l2600
  1467  0012C4                     l2600:
  1468                           
  1469                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1470  0012C4  BE59               	btfsc	printf@exp+1,7,c
  1471  0012C6  D006               	goto	l2602
  1472  0012C8  5059               	movf	printf@exp+1,w,c
  1473  0012CA  E120               	bnz	l2608
  1474  0012CC  0E0A               	movlw	10
  1475  0012CE  5C58               	subwf	printf@exp,w,c
  1476  0012D0  B0D8               	btfsc	status,0,c
  1477  0012D2  D01C               	goto	l2608
  1478  0012D4                     l2602:
  1479  0012D4  505E               	movf	printf@fval,w,c
  1480  0012D6  105F               	iorwf	printf@fval+1,w,c
  1481  0012D8  1060               	iorwf	printf@fval+2,w,c
  1482  0012DA  B4D8               	btfsc	status,2,c
  1483  0012DC  D06D               	goto	l2622
  1484  0012DE  C05E  F02B         	movff	printf@fval,___fttol@f1
  1485  0012E2  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1486  0012E6  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1487  0012EA  EC77  F012         	call	___fttol	;wreg free
  1488  0012EE  502B               	movf	?___fttol,w,c
  1489  0012F0  102C               	iorwf	?___fttol+1,w,c
  1490  0012F2  102D               	iorwf	?___fttol+2,w,c
  1491  0012F4  102E               	iorwf	?___fttol+3,w,c
  1492  0012F6  B4D8               	btfsc	status,2,c
  1493  0012F8  BE59               	btfsc	printf@exp+1,7,c
  1494  0012FA  D05E               	goto	l2622
  1495  0012FC  5059               	movf	printf@exp+1,w,c
  1496  0012FE  E106               	bnz	l2608
  1497  001300  0E02               	movlw	2
  1498  001302  5C58               	subwf	printf@exp,w,c
  1499  001304  B0D8               	btfsc	status,0,c
  1500  001306  D002               	goto	l2608
  1501  001308  D057               	goto	l2622
  1502  00130A  D000               	goto	l2608
  1503  00130C                     l2608:
  1504                           
  1505                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1506  00130C  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  1507  001310  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1508  001314  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1509  001318  0E70               	movlw	112
  1510  00131A  6E04               	movwf	___ftge@ff2,c
  1511  00131C  0E89               	movlw	137
  1512  00131E  6E05               	movwf	___ftge@ff2+1,c
  1513  001320  0E40               	movlw	64
  1514  001322  6E06               	movwf	___ftge@ff2+2,c
  1515  001324  EC0E  F014         	call	___ftge	;wreg free
  1516  001328  B0D8               	btfsc	status,0,c
  1517  00132A  D002               	goto	l2612
  1518                           
  1519                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1520  00132C  0EF7               	movlw	247
  1521  00132E  D001               	goto	L1
  1522  001330                     l2612:
  1523                           
  1524                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1525  001330  0EF8               	movlw	248
  1526  001332                     L1:
  1527  001332  2658               	addwf	printf@exp,f,c
  1528  001334  0EFF               	movlw	255
  1529  001336  2259               	addwfc	printf@exp+1,f,c
  1530  001338  D000               	goto	l2614
  1531  00133A                     l2614:
  1532                           
  1533                           ;doprnt.c: 1124: }
  1534                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1535  00133A  5058               	movf	printf@exp,w,c
  1536  00133C  EC05  F00C         	call	_scale
  1537  001340  C024  F05A         	movff	?_scale,printf@tmpval
  1538  001344  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  1539  001348  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  1540                           
  1541                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1542  00134C  D017               	goto	l2618
  1543  00134E  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  1544  001352  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1545  001356  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1546  00135A  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  1547  00135E  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1548  001362  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1549  001366  EC76  F011         	call	__div_to_l_	;wreg free
  1550  00136A  C001  F054         	movff	?__div_to_l_,printf@val
  1551  00136E  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  1552  001372  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  1553  001376  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  1554  00137A  D017               	goto	l2620
  1555  00137C                     l2618:
  1556  00137C  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1557  001380  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1558  001384  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1559  001388  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1560  00138C  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1561  001390  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1562  001394  ECEE  F010         	call	__tdiv_to_l_	;wreg free
  1563  001398  C001  F054         	movff	?__tdiv_to_l_,printf@val
  1564  00139C  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  1565  0013A0  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  1566  0013A4  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  1567  0013A8  D000               	goto	l2620
  1568  0013AA                     l2620:
  1569                           
  1570                           ;doprnt.c: 1129: fval = 0.0;
  1571  0013AA  0E00               	movlw	0
  1572  0013AC  6E5E               	movwf	printf@fval,c
  1573  0013AE  0E00               	movlw	0
  1574  0013B0  6E5F               	movwf	printf@fval+1,c
  1575  0013B2  0E00               	movlw	0
  1576  0013B4  6E60               	movwf	printf@fval+2,c
  1577                           
  1578                           ;doprnt.c: 1130: } else {
  1579  0013B6  D033               	goto	l2626
  1580  0013B8                     l2622:
  1581                           
  1582                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1583  0013B8  C05E  F02B         	movff	printf@fval,___fttol@f1
  1584  0013BC  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  1585  0013C0  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  1586  0013C4  EC77  F012         	call	___fttol	;wreg free
  1587  0013C8  C02B  F054         	movff	?___fttol,printf@val
  1588  0013CC  C02C  F055         	movff	?___fttol+1,printf@val+1
  1589  0013D0  C02D  F056         	movff	?___fttol+2,printf@val+2
  1590  0013D4  C02E  F057         	movff	?___fttol+3,printf@val+3
  1591                           
  1592                           ;doprnt.c: 1132: fval -= (double)val;
  1593  0013D8  C05E  F03A         	movff	printf@fval,___ftsub@f1
  1594  0013DC  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  1595  0013E0  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  1596  0013E4  C054  F009         	movff	printf@val,___lltoft@c
  1597  0013E8  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  1598  0013EC  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  1599  0013F0  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  1600  0013F4  ECD1  F015         	call	___lltoft	;wreg free
  1601  0013F8  C009  F03D         	movff	?___lltoft,___ftsub@f2
  1602  0013FC  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  1603  001400  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  1604  001404  EC2B  F016         	call	___ftsub	;wreg free
  1605  001408  C03A  F05E         	movff	?___ftsub,printf@fval
  1606  00140C  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  1607  001410  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  1608                           
  1609                           ;doprnt.c: 1133: exp = 0;
  1610  001414  0E00               	movlw	0
  1611  001416  6E59               	movwf	printf@exp+1,c
  1612  001418  0E00               	movlw	0
  1613  00141A  6E58               	movwf	printf@exp,c
  1614  00141C  D000               	goto	l2626
  1615  00141E                     l2626:
  1616                           
  1617                           ;doprnt.c: 1134: }
  1618                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1619  00141E  0E01               	movlw	1
  1620  001420  6E61               	movwf	printf@c,c
  1621  001422                     l2628:
  1622  001422  0E0A               	movlw	10
  1623  001424  1861               	xorwf	printf@c,w,c
  1624  001426  B4D8               	btfsc	status,2,c
  1625  001428  D01C               	goto	l2640
  1626  00142A  D001               	goto	l2632
  1627  00142C  D01A               	goto	l2640
  1628  00142E                     l2632:
  1629                           
  1630                           ;doprnt.c: 1137: if(val < dpowers[c])
  1631  00142E  5061               	movf	printf@c,w,c
  1632  001430  0D04               	mullw	4
  1633  001432  0E01               	movlw	low _dpowers
  1634  001434  24F3               	addwf	prodl,w,c
  1635  001436  6EF6               	movwf	tblptrl,c
  1636  001438  0E10               	movlw	high _dpowers
  1637  00143A  20F4               	addwfc	prodh,w,c
  1638  00143C  6EF7               	movwf	tblptrh,c
  1639  00143E                     	if	0	;There are less than 3 active tblptr bytes
  1640  00143E                     	endif
  1641  00143E  0009               	tblrd		*+
  1642  001440  50F5               	movf	tablat,w,c
  1643  001442  5C54               	subwf	printf@val,w,c
  1644  001444  0009               	tblrd		*+
  1645  001446  50F5               	movf	tablat,w,c
  1646  001448  5855               	subwfb	printf@val+1,w,c
  1647  00144A  0009               	tblrd		*+
  1648  00144C  50F5               	movf	tablat,w,c
  1649  00144E  5856               	subwfb	printf@val+2,w,c
  1650  001450  0009               	tblrd		*+
  1651  001452  50F5               	movf	tablat,w,c
  1652  001454  5857               	subwfb	printf@val+3,w,c
  1653  001456  A0D8               	btfss	status,0,c
  1654  001458  D004               	goto	l2640
  1655  00145A  D001               	goto	l2636
  1656                           
  1657                           ;doprnt.c: 1138: break;
  1658  00145C  D002               	goto	l2640
  1659  00145E                     l2636:
  1660  00145E  2A61               	incf	printf@c,f,c
  1661  001460  D7E0               	goto	l2628
  1662  001462                     l2640:
  1663                           
  1664                           ;doprnt.c: 1175: {
  1665                           ;doprnt.c: 1188: if(flag & 0x03)
  1666  001462  0E03               	movlw	3
  1667  001464  1450               	andwf	printf@flag,w,c
  1668  001466  6E45               	movwf	??_printf& (0+255),c
  1669  001468  0E00               	movlw	0
  1670  00146A  1451               	andwf	printf@flag+1,w,c
  1671  00146C  6E46               	movwf	(??_printf+1)& (0+255),c
  1672  00146E  5045               	movf	??_printf,w,c
  1673  001470  1046               	iorwf	??_printf+1,w,c
  1674  001472  B4D8               	btfsc	status,2,c
  1675  001474  D049               	goto	l2650
  1676                           
  1677                           ;doprnt.c: 1190: (putch('-') );
  1678  001476  0E2D               	movlw	45
  1679  001478  EC0C  F017         	call	_putch
  1680                           
  1681                           ;doprnt.c: 1195: }
  1682                           ;doprnt.c: 1196: while(c--) {
  1683  00147C  D045               	goto	l2650
  1684  00147E                     l2644:
  1685                           
  1686                           ;doprnt.c: 1200: {
  1687                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1688  00147E  C054  F001         	movff	printf@val,___lldiv@dividend
  1689  001482  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1690  001486  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1691  00148A  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1692  00148E  5061               	movf	printf@c,w,c
  1693  001490  0D04               	mullw	4
  1694  001492  0E01               	movlw	low _dpowers
  1695  001494  24F3               	addwf	prodl,w,c
  1696  001496  6EF6               	movwf	tblptrl,c
  1697  001498  0E10               	movlw	high _dpowers
  1698  00149A  20F4               	addwfc	prodh,w,c
  1699  00149C  6EF7               	movwf	tblptrh,c
  1700  00149E                     	if	0	;There are less than 3 active tblptr bytes
  1701  00149E                     	endif
  1702  00149E  0009               	tblrd		*+
  1703  0014A0  CFF5 F005          	movff	tablat,___lldiv@divisor
  1704  0014A4  0009               	tblrd		*+
  1705  0014A6  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1706  0014AA  0009               	tblrd		*+
  1707  0014AC  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1708  0014B0  000A               	tblrd		*-
  1709  0014B2  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1710  0014B6  ECA4  F014         	call	___lldiv	;wreg free
  1711  0014BA  C001  F05A         	movff	?___lldiv,printf@tmpval
  1712  0014BE  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1713  0014C2  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1714  0014C6  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1715                           
  1716                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1717  0014CA  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1718  0014CE  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1719  0014D2  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1720  0014D6  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1721  0014DA  0E0A               	movlw	10
  1722  0014DC  6E12               	movwf	___llmod@divisor,c
  1723  0014DE  0E00               	movlw	0
  1724  0014E0  6E13               	movwf	___llmod@divisor+1,c
  1725  0014E2  0E00               	movlw	0
  1726  0014E4  6E14               	movwf	___llmod@divisor+2,c
  1727  0014E6  0E00               	movlw	0
  1728  0014E8  6E15               	movwf	___llmod@divisor+3,c
  1729  0014EA  EC2B  F015         	call	___llmod	;wreg free
  1730  0014EE  C00E  F05A         	movff	?___llmod,printf@tmpval
  1731  0014F2  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1732  0014F6  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1733  0014FA  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1734                           
  1735                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1736  0014FE  505A               	movf	printf@tmpval,w,c
  1737  001500  0F30               	addlw	48
  1738  001502  EC0C  F017         	call	_putch
  1739  001506  D000               	goto	l2650
  1740  001508                     l2650:
  1741  001508  0661               	decf	printf@c,f,c
  1742  00150A  2861               	incf	printf@c,w,c
  1743  00150C  B4D8               	btfsc	status,2,c
  1744  00150E  D009               	goto	l2656
  1745  001510  D7B6               	goto	l2644
  1746                           
  1747                           ;doprnt.c: 1204: }
  1748                           ;doprnt.c: 1206: }
  1749                           ;doprnt.c: 1207: while(exp > 0) {
  1750  001512  D007               	goto	l2656
  1751  001514                     l2652:
  1752                           
  1753                           ;doprnt.c: 1208: (putch('0') );
  1754  001514  0E30               	movlw	48
  1755  001516  EC0C  F017         	call	_putch
  1756                           
  1757                           ;doprnt.c: 1209: exp--;
  1758  00151A  0658               	decf	printf@exp,f,c
  1759  00151C  A0D8               	btfss	status,0,c
  1760  00151E  0659               	decf	printf@exp+1,f,c
  1761  001520  D000               	goto	l2656
  1762  001522                     l2656:
  1763  001522  BE59               	btfsc	printf@exp+1,7,c
  1764  001524  D005               	goto	l2658
  1765  001526  5059               	movf	printf@exp+1,w,c
  1766  001528  E1F5               	bnz	l2652
  1767  00152A  0458               	decf	printf@exp,w,c
  1768  00152C  B0D8               	btfsc	status,0,c
  1769  00152E  D7F2               	goto	l2652
  1770  001530                     l2658:
  1771                           
  1772                           ;doprnt.c: 1210: }
  1773                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1774  001530  BE53               	btfsc	printf@prec+1,7,c
  1775  001532  D009               	goto	l241
  1776  001534  5053               	movf	printf@prec+1,w,c
  1777  001536  E104               	bnz	u2810
  1778  001538  0E09               	movlw	9
  1779  00153A  5C52               	subwf	printf@prec,w,c
  1780  00153C  A0D8               	btfss	status,0,c
  1781  00153E  D003               	goto	l241
  1782  001540                     u2810:
  1783                           
  1784                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1785  001540  0E08               	movlw	8
  1786  001542  6E61               	movwf	printf@c,c
  1787  001544  D003               	goto	l2662
  1788  001546                     l241:
  1789                           
  1790                           ;doprnt.c: 1213: else
  1791                           ;doprnt.c: 1214: c = prec;
  1792  001546  C052  F061         	movff	printf@prec,printf@c
  1793  00154A  D000               	goto	l2662
  1794  00154C                     l2662:
  1795                           
  1796                           ;doprnt.c: 1215: prec -= c;
  1797  00154C  5061               	movf	printf@c,w,c
  1798  00154E  5E52               	subwf	printf@prec,f,c
  1799  001550  0E00               	movlw	0
  1800  001552  BE61               	btfsc	printf@c,7,c
  1801  001554  0EFF               	movlw	255
  1802  001556  5A53               	subwfb	printf@prec+1,f,c
  1803                           
  1804                           ;doprnt.c: 1219: if(c)
  1805  001558  5061               	movf	printf@c,w,c
  1806  00155A  B4D8               	btfsc	status,2,c
  1807  00155C  D004               	goto	l2668
  1808                           
  1809                           ;doprnt.c: 1221: (putch('.') );
  1810  00155E  0E2E               	movlw	46
  1811  001560  EC0C  F017         	call	_putch
  1812  001564  D000               	goto	l2668
  1813  001566                     l2668:
  1814                           
  1815                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1816  001566  5061               	movf	printf@c,w,c
  1817  001568  EC05  F00C         	call	_scale
  1818  00156C  C024  F04B         	movff	?_scale,_printf$1271
  1819  001570  C025  F04C         	movff	?_scale+1,_printf$1271+1
  1820  001574  C026  F04D         	movff	?_scale+2,_printf$1271+2
  1821                           
  1822                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1823  001578  C05E  F018         	movff	printf@fval,___ftmul@f2
  1824  00157C  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  1825  001580  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  1826  001584  C04B  F015         	movff	_printf$1271,___ftmul@f1
  1827  001588  C04C  F016         	movff	_printf$1271+1,___ftmul@f1+1
  1828  00158C  C04D  F017         	movff	_printf$1271+2,___ftmul@f1+2
  1829  001590  ECFB  F011         	call	___ftmul	;wreg free
  1830  001594  C015  F02B         	movff	?___ftmul,___fttol@f1
  1831  001598  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  1832  00159C  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  1833  0015A0  EC77  F012         	call	___fttol	;wreg free
  1834  0015A4  C02B  F054         	movff	?___fttol,printf@val
  1835  0015A8  C02C  F055         	movff	?___fttol+1,printf@val+1
  1836  0015AC  C02D  F056         	movff	?___fttol+2,printf@val+2
  1837  0015B0  C02E  F057         	movff	?___fttol+3,printf@val+3
  1838                           
  1839                           ;doprnt.c: 1228: while(c--) {
  1840  0015B4  D06B               	goto	l2678
  1841  0015B6                     l2672:
  1842                           
  1843                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1844  0015B6  C054  F001         	movff	printf@val,___lldiv@dividend
  1845  0015BA  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  1846  0015BE  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  1847  0015C2  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  1848  0015C6  5061               	movf	printf@c,w,c
  1849  0015C8  0D04               	mullw	4
  1850  0015CA  0E01               	movlw	low _dpowers
  1851  0015CC  24F3               	addwf	prodl,w,c
  1852  0015CE  6EF6               	movwf	tblptrl,c
  1853  0015D0  0E10               	movlw	high _dpowers
  1854  0015D2  20F4               	addwfc	prodh,w,c
  1855  0015D4  6EF7               	movwf	tblptrh,c
  1856  0015D6                     	if	0	;There are less than 3 active tblptr bytes
  1857  0015D6                     	endif
  1858  0015D6  0009               	tblrd		*+
  1859  0015D8  CFF5 F005          	movff	tablat,___lldiv@divisor
  1860  0015DC  0009               	tblrd		*+
  1861  0015DE  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1862  0015E2  0009               	tblrd		*+
  1863  0015E4  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1864  0015E8  000A               	tblrd		*-
  1865  0015EA  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1866  0015EE  ECA4  F014         	call	___lldiv	;wreg free
  1867  0015F2  C001  F05A         	movff	?___lldiv,printf@tmpval
  1868  0015F6  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  1869  0015FA  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  1870  0015FE  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  1871                           
  1872                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1873  001602  C05A  F00E         	movff	printf@tmpval,___llmod@dividend
  1874  001606  C05B  F00F         	movff	printf@tmpval+1,___llmod@dividend+1
  1875  00160A  C05C  F010         	movff	printf@tmpval+2,___llmod@dividend+2
  1876  00160E  C05D  F011         	movff	printf@tmpval+3,___llmod@dividend+3
  1877  001612  0E0A               	movlw	10
  1878  001614  6E12               	movwf	___llmod@divisor,c
  1879  001616  0E00               	movlw	0
  1880  001618  6E13               	movwf	___llmod@divisor+1,c
  1881  00161A  0E00               	movlw	0
  1882  00161C  6E14               	movwf	___llmod@divisor+2,c
  1883  00161E  0E00               	movlw	0
  1884  001620  6E15               	movwf	___llmod@divisor+3,c
  1885  001622  EC2B  F015         	call	___llmod	;wreg free
  1886  001626  C00E  F05A         	movff	?___llmod,printf@tmpval
  1887  00162A  C00F  F05B         	movff	?___llmod+1,printf@tmpval+1
  1888  00162E  C010  F05C         	movff	?___llmod+2,printf@tmpval+2
  1889  001632  C011  F05D         	movff	?___llmod+3,printf@tmpval+3
  1890                           
  1891                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1892  001636  505A               	movf	printf@tmpval,w,c
  1893  001638  0F30               	addlw	48
  1894  00163A  EC0C  F017         	call	_putch
  1895                           
  1896                           ;doprnt.c: 1232: val %= dpowers[c];
  1897  00163E  C054  F00E         	movff	printf@val,___llmod@dividend
  1898  001642  C055  F00F         	movff	printf@val+1,___llmod@dividend+1
  1899  001646  C056  F010         	movff	printf@val+2,___llmod@dividend+2
  1900  00164A  C057  F011         	movff	printf@val+3,___llmod@dividend+3
  1901  00164E  5061               	movf	printf@c,w,c
  1902  001650  0D04               	mullw	4
  1903  001652  0E01               	movlw	low _dpowers
  1904  001654  24F3               	addwf	prodl,w,c
  1905  001656  6EF6               	movwf	tblptrl,c
  1906  001658  0E10               	movlw	high _dpowers
  1907  00165A  20F4               	addwfc	prodh,w,c
  1908  00165C  6EF7               	movwf	tblptrh,c
  1909  00165E                     	if	0	;There are less than 3 active tblptr bytes
  1910  00165E                     	endif
  1911  00165E  0009               	tblrd		*+
  1912  001660  CFF5 F012          	movff	tablat,___llmod@divisor
  1913  001664  0009               	tblrd		*+
  1914  001666  CFF5 F013          	movff	tablat,___llmod@divisor+1
  1915  00166A  0009               	tblrd		*+
  1916  00166C  CFF5 F014          	movff	tablat,___llmod@divisor+2
  1917  001670  000A               	tblrd		*-
  1918  001672  CFF5 F015          	movff	tablat,___llmod@divisor+3
  1919  001676  EC2B  F015         	call	___llmod	;wreg free
  1920  00167A  C00E  F054         	movff	?___llmod,printf@val
  1921  00167E  C00F  F055         	movff	?___llmod+1,printf@val+1
  1922  001682  C010  F056         	movff	?___llmod+2,printf@val+2
  1923  001686  C011  F057         	movff	?___llmod+3,printf@val+3
  1924  00168A  D000               	goto	l2678
  1925  00168C                     l2678:
  1926  00168C  0661               	decf	printf@c,f,c
  1927  00168E  2861               	incf	printf@c,w,c
  1928  001690  B4D8               	btfsc	status,2,c
  1929  001692  D009               	goto	l2684
  1930  001694  D790               	goto	l2672
  1931                           
  1932                           ;doprnt.c: 1233: }
  1933                           ;doprnt.c: 1235: while(prec) {
  1934  001696  D007               	goto	l2684
  1935  001698                     l2680:
  1936                           
  1937                           ;doprnt.c: 1236: (putch('0') );
  1938  001698  0E30               	movlw	48
  1939  00169A  EC0C  F017         	call	_putch
  1940                           
  1941                           ;doprnt.c: 1237: prec--;
  1942  00169E  0652               	decf	printf@prec,f,c
  1943  0016A0  A0D8               	btfss	status,0,c
  1944  0016A2  0653               	decf	printf@prec+1,f,c
  1945  0016A4  D000               	goto	l2684
  1946  0016A6                     l2684:
  1947  0016A6  5052               	movf	printf@prec,w,c
  1948  0016A8  1053               	iorwf	printf@prec+1,w,c
  1949  0016AA  B4D8               	btfsc	status,2,c
  1950  0016AC  D09F               	goto	l2722
  1951  0016AE  D7F4               	goto	l2680
  1952                           
  1953                           ;doprnt.c: 1238: }
  1954                           ;doprnt.c: 1245: continue;
  1955  0016B0  D09D               	goto	l2722
  1956  0016B2                     l2686:
  1957                           
  1958                           ;doprnt.c: 1246: }
  1959                           ;doprnt.c: 1253: {
  1960                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  1961  0016B2  C04E  FFD9         	movff	printf@ap,fsr2l
  1962  0016B6  C04F  FFDA         	movff	printf@ap+1,fsr2h
  1963  0016BA  CFDE F054          	movff	postinc2,printf@val
  1964  0016BE  CFDD F055          	movff	postdec2,printf@val+1
  1965  0016C2  0E00               	movlw	0
  1966  0016C4  BE55               	btfsc	printf@val+1,7,c
  1967  0016C6  0EFF               	movlw	-1
  1968  0016C8  6E56               	movwf	printf@val+2,c
  1969  0016CA  6E57               	movwf	printf@val+3,c
  1970  0016CC  0E02               	movlw	2
  1971  0016CE  264E               	addwf	printf@ap,f,c
  1972  0016D0  0E00               	movlw	0
  1973  0016D2  224F               	addwfc	printf@ap+1,f,c
  1974                           
  1975                           ;doprnt.c: 1261: if((long)val < 0) {
  1976  0016D4  AE57               	btfss	printf@val+3,7,c
  1977  0016D6  D00B               	goto	l2696
  1978                           
  1979                           ;doprnt.c: 1262: flag |= 0x03;
  1980  0016D8  0E03               	movlw	3
  1981  0016DA  1250               	iorwf	printf@flag,f,c
  1982                           
  1983                           ;doprnt.c: 1263: val = -val;
  1984  0016DC  1E57               	comf	printf@val+3,f,c
  1985  0016DE  1E56               	comf	printf@val+2,f,c
  1986  0016E0  1E55               	comf	printf@val+1,f,c
  1987  0016E2  6C54               	negf	printf@val,c
  1988  0016E4  0E00               	movlw	0
  1989  0016E6  2255               	addwfc	printf@val+1,f,c
  1990  0016E8  2256               	addwfc	printf@val+2,f,c
  1991  0016EA  2257               	addwfc	printf@val+3,f,c
  1992  0016EC  D000               	goto	l2696
  1993  0016EE                     l2696:
  1994                           
  1995                           ;doprnt.c: 1264: }
  1996                           ;doprnt.c: 1266: }
  1997                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1998  0016EE  0E01               	movlw	1
  1999  0016F0  6E61               	movwf	printf@c,c
  2000  0016F2                     l2698:
  2001  0016F2  0E0A               	movlw	10
  2002  0016F4  1861               	xorwf	printf@c,w,c
  2003  0016F6  B4D8               	btfsc	status,2,c
  2004  0016F8  D01C               	goto	l2710
  2005  0016FA  D001               	goto	l2702
  2006  0016FC  D01A               	goto	l2710
  2007  0016FE                     l2702:
  2008                           
  2009                           ;doprnt.c: 1306: if(val < dpowers[c])
  2010  0016FE  5061               	movf	printf@c,w,c
  2011  001700  0D04               	mullw	4
  2012  001702  0E01               	movlw	low _dpowers
  2013  001704  24F3               	addwf	prodl,w,c
  2014  001706  6EF6               	movwf	tblptrl,c
  2015  001708  0E10               	movlw	high _dpowers
  2016  00170A  20F4               	addwfc	prodh,w,c
  2017  00170C  6EF7               	movwf	tblptrh,c
  2018  00170E                     	if	0	;There are less than 3 active tblptr bytes
  2019  00170E                     	endif
  2020  00170E  0009               	tblrd		*+
  2021  001710  50F5               	movf	tablat,w,c
  2022  001712  5C54               	subwf	printf@val,w,c
  2023  001714  0009               	tblrd		*+
  2024  001716  50F5               	movf	tablat,w,c
  2025  001718  5855               	subwfb	printf@val+1,w,c
  2026  00171A  0009               	tblrd		*+
  2027  00171C  50F5               	movf	tablat,w,c
  2028  00171E  5856               	subwfb	printf@val+2,w,c
  2029  001720  0009               	tblrd		*+
  2030  001722  50F5               	movf	tablat,w,c
  2031  001724  5857               	subwfb	printf@val+3,w,c
  2032  001726  A0D8               	btfss	status,0,c
  2033  001728  D004               	goto	l2710
  2034  00172A  D001               	goto	l2706
  2035                           
  2036                           ;doprnt.c: 1307: break;
  2037  00172C  D002               	goto	l2710
  2038  00172E                     l2706:
  2039  00172E  2A61               	incf	printf@c,f,c
  2040  001730  D7E0               	goto	l2698
  2041  001732                     l2710:
  2042                           
  2043                           ;doprnt.c: 1422: {
  2044                           ;doprnt.c: 1438: if(flag & 0x03)
  2045  001732  0E03               	movlw	3
  2046  001734  1450               	andwf	printf@flag,w,c
  2047  001736  6E45               	movwf	??_printf& (0+255),c
  2048  001738  0E00               	movlw	0
  2049  00173A  1451               	andwf	printf@flag+1,w,c
  2050  00173C  6E46               	movwf	(??_printf+1)& (0+255),c
  2051  00173E  5045               	movf	??_printf,w,c
  2052  001740  1046               	iorwf	??_printf+1,w,c
  2053  001742  B4D8               	btfsc	status,2,c
  2054  001744  D004               	goto	l2714
  2055                           
  2056                           ;doprnt.c: 1439: (putch('-') );
  2057  001746  0E2D               	movlw	45
  2058  001748  EC0C  F017         	call	_putch
  2059  00174C  D000               	goto	l2714
  2060  00174E                     l2714:
  2061                           
  2062                           ;doprnt.c: 1469: }
  2063                           ;doprnt.c: 1472: prec = c;
  2064  00174E  5061               	movf	printf@c,w,c
  2065  001750  6E52               	movwf	printf@prec,c
  2066  001752  6A53               	clrf	printf@prec+1,c
  2067  001754  BE52               	btfsc	printf@prec,7,c
  2068  001756  0653               	decf	printf@prec+1,f,c
  2069                           
  2070                           ;doprnt.c: 1474: while(prec--) {
  2071  001758  D03F               	goto	l2720
  2072  00175A                     l2716:
  2073                           
  2074                           ;doprnt.c: 1478: {
  2075                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  2076  00175A  C052  F045         	movff	printf@prec,??_printf
  2077  00175E  C053  F046         	movff	printf@prec+1,??_printf+1
  2078  001762  90D8               	bcf	status,0,c
  2079  001764  3645               	rlcf	??_printf,f,c
  2080  001766  3646               	rlcf	??_printf+1,f,c
  2081  001768  90D8               	bcf	status,0,c
  2082  00176A  3645               	rlcf	??_printf,f,c
  2083  00176C  3646               	rlcf	??_printf+1,f,c
  2084  00176E  0E01               	movlw	low _dpowers
  2085  001770  2445               	addwf	??_printf,w,c
  2086  001772  6EF6               	movwf	tblptrl,c
  2087  001774  0E10               	movlw	high _dpowers
  2088  001776  2046               	addwfc	??_printf+1,w,c
  2089  001778  6EF7               	movwf	tblptrh,c
  2090  00177A                     	if	0	;There are less than 3 active tblptr bytes
  2091  00177A                     	endif
  2092  00177A  0009               	tblrd		*+
  2093  00177C  CFF5 F005          	movff	tablat,___lldiv@divisor
  2094  001780  0009               	tblrd		*+
  2095  001782  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  2096  001786  0009               	tblrd		*+
  2097  001788  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  2098  00178C  000A               	tblrd		*-
  2099  00178E  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  2100  001792  C054  F001         	movff	printf@val,___lldiv@dividend
  2101  001796  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  2102  00179A  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  2103  00179E  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  2104  0017A2  ECA4  F014         	call	___lldiv	;wreg free
  2105  0017A6  C001  F00E         	movff	?___lldiv,___llmod@dividend
  2106  0017AA  C002  F00F         	movff	?___lldiv+1,___llmod@dividend+1
  2107  0017AE  C003  F010         	movff	?___lldiv+2,___llmod@dividend+2
  2108  0017B2  C004  F011         	movff	?___lldiv+3,___llmod@dividend+3
  2109  0017B6  0E0A               	movlw	10
  2110  0017B8  6E12               	movwf	___llmod@divisor,c
  2111  0017BA  0E00               	movlw	0
  2112  0017BC  6E13               	movwf	___llmod@divisor+1,c
  2113  0017BE  0E00               	movlw	0
  2114  0017C0  6E14               	movwf	___llmod@divisor+2,c
  2115  0017C2  0E00               	movlw	0
  2116  0017C4  6E15               	movwf	___llmod@divisor+3,c
  2117  0017C6  EC2B  F015         	call	___llmod	;wreg free
  2118  0017CA  500E               	movf	?___llmod,w,c
  2119  0017CC  0F30               	addlw	48
  2120  0017CE  6E61               	movwf	printf@c,c
  2121                           
  2122                           ;doprnt.c: 1523: }
  2123                           ;doprnt.c: 1524: (putch(c) );
  2124  0017D0  5061               	movf	printf@c,w,c
  2125  0017D2  EC0C  F017         	call	_putch
  2126  0017D6  D000               	goto	l2720
  2127  0017D8                     l2720:
  2128  0017D8  0652               	decf	printf@prec,f,c
  2129  0017DA  A0D8               	btfss	status,0,c
  2130  0017DC  0653               	decf	printf@prec+1,f,c
  2131  0017DE  2852               	incf	printf@prec,w,c
  2132  0017E0  E1BC               	bnz	l2716
  2133  0017E2  2853               	incf	printf@prec+1,w,c
  2134  0017E4  B4D8               	btfsc	status,2,c
  2135  0017E6  D002               	goto	l2722
  2136  0017E8  D7B8               	goto	l2716
  2137  0017EA  D000               	goto	l2722
  2138  0017EC                     l2722:
  2139  0017EC  C040  FFF6         	movff	printf@f,tblptrl
  2140  0017F0  C041  FFF7         	movff	printf@f+1,tblptrh
  2141  0017F4  4A40               	infsnz	printf@f,f,c
  2142  0017F6  2A41               	incf	printf@f+1,f,c
  2143  0017F8                     	if	0	;tblptru may be non-zero
  2144  0017F8                     	endif
  2145  0017F8                     	if	0	;tblptru may be non-zero
  2146  0017F8                     	endif
  2147  0017F8  0008               	tblrd		*
  2148  0017FA  CFF5 F061          	movff	tablat,printf@c
  2149  0017FE  5061               	movf	printf@c,w,c
  2150  001800  B4D8               	btfsc	status,2,c
  2151  001802  D002               	goto	l259
  2152  001804  D460               	goto	l2542
  2153  001806  D000               	goto	l259
  2154  001808                     l259:
  2155  001808  0012               	return		;funcret
  2156  00180A                     __end_of_printf:
  2157                           	opt stack 0
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           prodh	equ	0xFF4
  2163                           prodl	equ	0xFF3
  2164                           postinc0	equ	0xFEE
  2165                           wreg	equ	0xFE8
  2166                           postdec1	equ	0xFE5
  2167                           fsr1l	equ	0xFE1
  2168                           postinc2	equ	0xFDE
  2169                           postdec2	equ	0xFDD
  2170                           fsr2h	equ	0xFDA
  2171                           fsr2l	equ	0xFD9
  2172                           status	equ	0xFD8
  2173                           
  2174 ;; *************** function _scale *****************
  2175 ;; Defined at:
  2176 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2177 ;; Parameters:    Size  Location     Type
  2178 ;;  scl             1    wreg     char 
  2179 ;; Auto vars:     Size  Location     Type
  2180 ;;  scl             1   41[COMRAM] char 
  2181 ;; Return value:  Size  Location     Type
  2182 ;;                  3   35[COMRAM] char 
  2183 ;; Registers used:
  2184 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2185 ;; Tracked objects:
  2186 ;;		On entry : 0/0
  2187 ;;		On exit  : 0/0
  2188 ;;		Unchanged: 0/0
  2189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2190 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2193 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2194 ;;Total ram usage:        7 bytes
  2195 ;; Hardware stack levels used:    1
  2196 ;; Hardware stack levels required when called:    2
  2197 ;; This function calls:
  2198 ;;		___awdiv
  2199 ;;		___awmod
  2200 ;;		___ftmul
  2201 ;;		___wmul
  2202 ;; This function is called by:
  2203 ;;		_printf
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text2
  2208  00180A                     __ptext2:
  2209                           	opt stack 0
  2210  00180A                     _scale:
  2211                           	opt stack 27
  2212                           
  2213                           ;incstack = 0
  2214                           ;scale@scl stored from wreg
  2215  00180A  6E2A               	movwf	scale@scl,c
  2216                           
  2217                           ;doprnt.c: 428: if(scl < 0) {
  2218  00180C  AE2A               	btfss	scale@scl,7,c
  2219  00180E  D0EF               	goto	l2270
  2220                           
  2221                           ;doprnt.c: 429: scl = -scl;
  2222  001810  6C2A               	negf	scale@scl,c
  2223                           
  2224                           ;doprnt.c: 430: if(scl>=110)
  2225  001812  502A               	movf	scale@scl,w,c
  2226  001814  0A80               	xorlw	128
  2227  001816  0F12               	addlw	-238
  2228  001818  A0D8               	btfss	status,0,c
  2229  00181A  D08D               	goto	l2260
  2230                           
  2231                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2232  00181C  0E00               	movlw	0
  2233  00181E  6E12               	movwf	___wmul@multiplicand+1,c
  2234  001820  0E03               	movlw	3
  2235  001822  6E11               	movwf	___wmul@multiplicand,c
  2236  001824  0E00               	movlw	0
  2237  001826  6E0A               	movwf	___awdiv@divisor+1,c
  2238  001828  0E0A               	movlw	10
  2239  00182A  6E09               	movwf	___awdiv@divisor,c
  2240  00182C  0E00               	movlw	0
  2241  00182E  6E04               	movwf	___awmod@divisor+1,c
  2242  001830  0E64               	movlw	100
  2243  001832  6E03               	movwf	___awmod@divisor,c
  2244  001834  502A               	movf	scale@scl,w,c
  2245  001836  6E01               	movwf	___awmod@dividend,c
  2246  001838  6A02               	clrf	___awmod@dividend+1,c
  2247  00183A  BE01               	btfsc	___awmod@dividend,7,c
  2248  00183C  0602               	decf	___awmod@dividend+1,f,c
  2249  00183E  ECEA  F014         	call	___awmod	;wreg free
  2250  001842  C001  F007         	movff	?___awmod,___awdiv@dividend
  2251  001846  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2252  00184A  EC59  F014         	call	___awdiv	;wreg free
  2253  00184E  0E09               	movlw	9
  2254  001850  2407               	addwf	?___awdiv,w,c
  2255  001852  6E0F               	movwf	___wmul@multiplier,c
  2256  001854  0E00               	movlw	0
  2257  001856  2008               	addwfc	?___awdiv+1,w,c
  2258  001858  6E10               	movwf	___wmul@multiplier+1,c
  2259  00185A  ECA0  F016         	call	___wmul	;wreg free
  2260  00185E  0E29               	movlw	low __npowers_
  2261  001860  240F               	addwf	?___wmul,w,c
  2262  001862  6EF6               	movwf	tblptrl,c
  2263  001864  0E10               	movlw	high __npowers_
  2264  001866  2010               	addwfc	?___wmul+1,w,c
  2265  001868  6EF7               	movwf	tblptrh,c
  2266  00186A                     	if	0	;There are less than 3 active tblptr bytes
  2267  00186A                     	endif
  2268  00186A  0009               	tblrd		*+
  2269  00186C  CFF5 F018          	movff	tablat,___ftmul@f2
  2270  001870  0009               	tblrd		*+
  2271  001872  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2272  001876  000A               	tblrd		*-
  2273  001878  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2274  00187C  0E00               	movlw	0
  2275  00187E  6E0A               	movwf	___awdiv@divisor+1,c
  2276  001880  0E64               	movlw	100
  2277  001882  6E09               	movwf	___awdiv@divisor,c
  2278  001884  502A               	movf	scale@scl,w,c
  2279  001886  6E07               	movwf	___awdiv@dividend,c
  2280  001888  6A08               	clrf	___awdiv@dividend+1,c
  2281  00188A  BE07               	btfsc	___awdiv@dividend,7,c
  2282  00188C  0608               	decf	___awdiv@dividend+1,f,c
  2283  00188E  EC59  F014         	call	___awdiv	;wreg free
  2284  001892  0E12               	movlw	18
  2285  001894  2407               	addwf	?___awdiv,w,c
  2286  001896  6E0F               	movwf	___wmul@multiplier,c
  2287  001898  0E00               	movlw	0
  2288  00189A  2008               	addwfc	?___awdiv+1,w,c
  2289  00189C  6E10               	movwf	___wmul@multiplier+1,c
  2290  00189E  0E00               	movlw	0
  2291  0018A0  6E12               	movwf	___wmul@multiplicand+1,c
  2292  0018A2  0E03               	movlw	3
  2293  0018A4  6E11               	movwf	___wmul@multiplicand,c
  2294  0018A6  ECA0  F016         	call	___wmul	;wreg free
  2295  0018AA  0E29               	movlw	low __npowers_
  2296  0018AC  240F               	addwf	?___wmul,w,c
  2297  0018AE  6EF6               	movwf	tblptrl,c
  2298  0018B0  0E10               	movlw	high __npowers_
  2299  0018B2  2010               	addwfc	?___wmul+1,w,c
  2300  0018B4  6EF7               	movwf	tblptrh,c
  2301  0018B6                     	if	0	;There are less than 3 active tblptr bytes
  2302  0018B6                     	endif
  2303  0018B6  0009               	tblrd		*+
  2304  0018B8  CFF5 F015          	movff	tablat,___ftmul@f1
  2305  0018BC  0009               	tblrd		*+
  2306  0018BE  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2307  0018C2  000A               	tblrd		*-
  2308  0018C4  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2309  0018C8  ECFB  F011         	call	___ftmul	;wreg free
  2310  0018CC  C015  F027         	movff	?___ftmul,_scale$1270
  2311  0018D0  C016  F028         	movff	?___ftmul+1,_scale$1270+1
  2312  0018D4  C017  F029         	movff	?___ftmul+2,_scale$1270+2
  2313                           
  2314                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2315  0018D8  C027  F015         	movff	_scale$1270,___ftmul@f1
  2316  0018DC  C028  F016         	movff	_scale$1270+1,___ftmul@f1+1
  2317  0018E0  C029  F017         	movff	_scale$1270+2,___ftmul@f1+2
  2318  0018E4  0E00               	movlw	0
  2319  0018E6  6E12               	movwf	___wmul@multiplicand+1,c
  2320  0018E8  0E03               	movlw	3
  2321  0018EA  6E11               	movwf	___wmul@multiplicand,c
  2322  0018EC  0E00               	movlw	0
  2323  0018EE  6E04               	movwf	___awmod@divisor+1,c
  2324  0018F0  0E0A               	movlw	10
  2325  0018F2  6E03               	movwf	___awmod@divisor,c
  2326  0018F4  502A               	movf	scale@scl,w,c
  2327  0018F6  6E01               	movwf	___awmod@dividend,c
  2328  0018F8  6A02               	clrf	___awmod@dividend+1,c
  2329  0018FA  BE01               	btfsc	___awmod@dividend,7,c
  2330  0018FC  0602               	decf	___awmod@dividend+1,f,c
  2331  0018FE  ECEA  F014         	call	___awmod	;wreg free
  2332  001902  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2333  001906  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2334  00190A  ECA0  F016         	call	___wmul	;wreg free
  2335  00190E  0E29               	movlw	low __npowers_
  2336  001910  240F               	addwf	?___wmul,w,c
  2337  001912  6EF6               	movwf	tblptrl,c
  2338  001914  0E10               	movlw	high __npowers_
  2339  001916  2010               	addwfc	?___wmul+1,w,c
  2340  001918  6EF7               	movwf	tblptrh,c
  2341  00191A                     	if	0	;There are less than 3 active tblptr bytes
  2342  00191A                     	endif
  2343  00191A  0009               	tblrd		*+
  2344  00191C  CFF5 F018          	movff	tablat,___ftmul@f2
  2345  001920  0009               	tblrd		*+
  2346  001922  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2347  001926  000A               	tblrd		*-
  2348  001928  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2349  00192C  ECFB  F011         	call	___ftmul	;wreg free
  2350  001930  D141               	goto	L5
  2351  001932  D15A               	goto	l194
  2352  001934  D054               	goto	l2266
  2353  001936                     l2260:
  2354                           
  2355                           ;doprnt.c: 432: else if(scl > 10)
  2356  001936  502A               	movf	scale@scl,w,c
  2357  001938  0A80               	xorlw	128
  2358  00193A  0F75               	addlw	-139
  2359  00193C  A0D8               	btfss	status,0,c
  2360  00193E  D04F               	goto	l2266
  2361                           
  2362                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2363  001940  0E00               	movlw	0
  2364  001942  6E0A               	movwf	___awdiv@divisor+1,c
  2365  001944  0E0A               	movlw	10
  2366  001946  6E09               	movwf	___awdiv@divisor,c
  2367  001948  502A               	movf	scale@scl,w,c
  2368  00194A  6E07               	movwf	___awdiv@dividend,c
  2369  00194C  6A08               	clrf	___awdiv@dividend+1,c
  2370  00194E  BE07               	btfsc	___awdiv@dividend,7,c
  2371  001950  0608               	decf	___awdiv@dividend+1,f,c
  2372  001952  EC59  F014         	call	___awdiv	;wreg free
  2373  001956  0E09               	movlw	9
  2374  001958  2407               	addwf	?___awdiv,w,c
  2375  00195A  6E0F               	movwf	___wmul@multiplier,c
  2376  00195C  0E00               	movlw	0
  2377  00195E  2008               	addwfc	?___awdiv+1,w,c
  2378  001960  6E10               	movwf	___wmul@multiplier+1,c
  2379  001962  0E00               	movlw	0
  2380  001964  6E12               	movwf	___wmul@multiplicand+1,c
  2381  001966  0E03               	movlw	3
  2382  001968  6E11               	movwf	___wmul@multiplicand,c
  2383  00196A  ECA0  F016         	call	___wmul	;wreg free
  2384  00196E  0E29               	movlw	low __npowers_
  2385  001970  240F               	addwf	?___wmul,w,c
  2386  001972  6EF6               	movwf	tblptrl,c
  2387  001974  0E10               	movlw	high __npowers_
  2388  001976  2010               	addwfc	?___wmul+1,w,c
  2389  001978  6EF7               	movwf	tblptrh,c
  2390  00197A                     	if	0	;There are less than 3 active tblptr bytes
  2391  00197A                     	endif
  2392  00197A  0009               	tblrd		*+
  2393  00197C  CFF5 F015          	movff	tablat,___ftmul@f1
  2394  001980  0009               	tblrd		*+
  2395  001982  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2396  001986  000A               	tblrd		*-
  2397  001988  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2398  00198C  0E00               	movlw	0
  2399  00198E  6E12               	movwf	___wmul@multiplicand+1,c
  2400  001990  0E03               	movlw	3
  2401  001992  6E11               	movwf	___wmul@multiplicand,c
  2402  001994  0E00               	movlw	0
  2403  001996  6E04               	movwf	___awmod@divisor+1,c
  2404  001998  0E0A               	movlw	10
  2405  00199A  6E03               	movwf	___awmod@divisor,c
  2406  00199C  502A               	movf	scale@scl,w,c
  2407  00199E  6E01               	movwf	___awmod@dividend,c
  2408  0019A0  6A02               	clrf	___awmod@dividend+1,c
  2409  0019A2  BE01               	btfsc	___awmod@dividend,7,c
  2410  0019A4  0602               	decf	___awmod@dividend+1,f,c
  2411  0019A6  ECEA  F014         	call	___awmod	;wreg free
  2412  0019AA  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2413  0019AE  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2414  0019B2  ECA0  F016         	call	___wmul	;wreg free
  2415  0019B6  0E29               	movlw	low __npowers_
  2416  0019B8  240F               	addwf	?___wmul,w,c
  2417  0019BA  6EF6               	movwf	tblptrl,c
  2418  0019BC  0E10               	movlw	high __npowers_
  2419  0019BE  2010               	addwfc	?___wmul+1,w,c
  2420  0019C0  6EF7               	movwf	tblptrh,c
  2421  0019C2                     	if	0	;There are less than 3 active tblptr bytes
  2422  0019C2                     	endif
  2423  0019C2  0009               	tblrd		*+
  2424  0019C4  CFF5 F018          	movff	tablat,___ftmul@f2
  2425  0019C8  0009               	tblrd		*+
  2426  0019CA  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2427  0019CE  000A               	tblrd		*-
  2428  0019D0  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2429  0019D4  ECFB  F011         	call	___ftmul	;wreg free
  2430  0019D8  D0ED               	goto	L5
  2431  0019DA  D106               	goto	l194
  2432  0019DC  D000               	goto	l2266
  2433  0019DE                     l2266:
  2434                           
  2435                           ;doprnt.c: 434: return _npowers_[scl];
  2436  0019DE  502A               	movf	scale@scl,w,c
  2437  0019E0  0D03               	mullw	3
  2438  0019E2  0E29               	movlw	low __npowers_
  2439  0019E4  24F3               	addwf	prodl,w,c
  2440  0019E6  6EF6               	movwf	tblptrl,c
  2441  0019E8  0E10               	movlw	high __npowers_
  2442  0019EA  D0F2               	goto	L4
  2443  0019EC  D0FD               	goto	l194
  2444  0019EE                     l2270:
  2445                           
  2446                           ;doprnt.c: 435: }
  2447                           ;doprnt.c: 436: if(scl>=110)
  2448  0019EE  502A               	movf	scale@scl,w,c
  2449  0019F0  0A80               	xorlw	128
  2450  0019F2  0F12               	addlw	-238
  2451  0019F4  A0D8               	btfss	status,0,c
  2452  0019F6  D08D               	goto	l2278
  2453                           
  2454                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2455  0019F8  0E00               	movlw	0
  2456  0019FA  6E12               	movwf	___wmul@multiplicand+1,c
  2457  0019FC  0E03               	movlw	3
  2458  0019FE  6E11               	movwf	___wmul@multiplicand,c
  2459  001A00  0E00               	movlw	0
  2460  001A02  6E0A               	movwf	___awdiv@divisor+1,c
  2461  001A04  0E0A               	movlw	10
  2462  001A06  6E09               	movwf	___awdiv@divisor,c
  2463  001A08  0E00               	movlw	0
  2464  001A0A  6E04               	movwf	___awmod@divisor+1,c
  2465  001A0C  0E64               	movlw	100
  2466  001A0E  6E03               	movwf	___awmod@divisor,c
  2467  001A10  502A               	movf	scale@scl,w,c
  2468  001A12  6E01               	movwf	___awmod@dividend,c
  2469  001A14  6A02               	clrf	___awmod@dividend+1,c
  2470  001A16  BE01               	btfsc	___awmod@dividend,7,c
  2471  001A18  0602               	decf	___awmod@dividend+1,f,c
  2472  001A1A  ECEA  F014         	call	___awmod	;wreg free
  2473  001A1E  C001  F007         	movff	?___awmod,___awdiv@dividend
  2474  001A22  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2475  001A26  EC59  F014         	call	___awdiv	;wreg free
  2476  001A2A  0E09               	movlw	9
  2477  001A2C  2407               	addwf	?___awdiv,w,c
  2478  001A2E  6E0F               	movwf	___wmul@multiplier,c
  2479  001A30  0E00               	movlw	0
  2480  001A32  2008               	addwfc	?___awdiv+1,w,c
  2481  001A34  6E10               	movwf	___wmul@multiplier+1,c
  2482  001A36  ECA0  F016         	call	___wmul	;wreg free
  2483  001A3A  0E50               	movlw	low __powers_
  2484  001A3C  240F               	addwf	?___wmul,w,c
  2485  001A3E  6EF6               	movwf	tblptrl,c
  2486  001A40  0E10               	movlw	high __powers_
  2487  001A42  2010               	addwfc	?___wmul+1,w,c
  2488  001A44  6EF7               	movwf	tblptrh,c
  2489  001A46                     	if	0	;There are less than 3 active tblptr bytes
  2490  001A46                     	endif
  2491  001A46  0009               	tblrd		*+
  2492  001A48  CFF5 F018          	movff	tablat,___ftmul@f2
  2493  001A4C  0009               	tblrd		*+
  2494  001A4E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2495  001A52  000A               	tblrd		*-
  2496  001A54  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2497  001A58  0E00               	movlw	0
  2498  001A5A  6E0A               	movwf	___awdiv@divisor+1,c
  2499  001A5C  0E64               	movlw	100
  2500  001A5E  6E09               	movwf	___awdiv@divisor,c
  2501  001A60  502A               	movf	scale@scl,w,c
  2502  001A62  6E07               	movwf	___awdiv@dividend,c
  2503  001A64  6A08               	clrf	___awdiv@dividend+1,c
  2504  001A66  BE07               	btfsc	___awdiv@dividend,7,c
  2505  001A68  0608               	decf	___awdiv@dividend+1,f,c
  2506  001A6A  EC59  F014         	call	___awdiv	;wreg free
  2507  001A6E  0E12               	movlw	18
  2508  001A70  2407               	addwf	?___awdiv,w,c
  2509  001A72  6E0F               	movwf	___wmul@multiplier,c
  2510  001A74  0E00               	movlw	0
  2511  001A76  2008               	addwfc	?___awdiv+1,w,c
  2512  001A78  6E10               	movwf	___wmul@multiplier+1,c
  2513  001A7A  0E00               	movlw	0
  2514  001A7C  6E12               	movwf	___wmul@multiplicand+1,c
  2515  001A7E  0E03               	movlw	3
  2516  001A80  6E11               	movwf	___wmul@multiplicand,c
  2517  001A82  ECA0  F016         	call	___wmul	;wreg free
  2518  001A86  0E50               	movlw	low __powers_
  2519  001A88  240F               	addwf	?___wmul,w,c
  2520  001A8A  6EF6               	movwf	tblptrl,c
  2521  001A8C  0E10               	movlw	high __powers_
  2522  001A8E  2010               	addwfc	?___wmul+1,w,c
  2523  001A90  6EF7               	movwf	tblptrh,c
  2524  001A92                     	if	0	;There are less than 3 active tblptr bytes
  2525  001A92                     	endif
  2526  001A92  0009               	tblrd		*+
  2527  001A94  CFF5 F015          	movff	tablat,___ftmul@f1
  2528  001A98  0009               	tblrd		*+
  2529  001A9A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2530  001A9E  000A               	tblrd		*-
  2531  001AA0  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2532  001AA4  ECFB  F011         	call	___ftmul	;wreg free
  2533  001AA8  C015  F027         	movff	?___ftmul,_scale$1270
  2534  001AAC  C016  F028         	movff	?___ftmul+1,_scale$1270+1
  2535  001AB0  C017  F029         	movff	?___ftmul+2,_scale$1270+2
  2536                           
  2537                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2538  001AB4  C027  F015         	movff	_scale$1270,___ftmul@f1
  2539  001AB8  C028  F016         	movff	_scale$1270+1,___ftmul@f1+1
  2540  001ABC  C029  F017         	movff	_scale$1270+2,___ftmul@f1+2
  2541  001AC0  0E00               	movlw	0
  2542  001AC2  6E12               	movwf	___wmul@multiplicand+1,c
  2543  001AC4  0E03               	movlw	3
  2544  001AC6  6E11               	movwf	___wmul@multiplicand,c
  2545  001AC8  0E00               	movlw	0
  2546  001ACA  6E04               	movwf	___awmod@divisor+1,c
  2547  001ACC  0E0A               	movlw	10
  2548  001ACE  6E03               	movwf	___awmod@divisor,c
  2549  001AD0  502A               	movf	scale@scl,w,c
  2550  001AD2  6E01               	movwf	___awmod@dividend,c
  2551  001AD4  6A02               	clrf	___awmod@dividend+1,c
  2552  001AD6  BE01               	btfsc	___awmod@dividend,7,c
  2553  001AD8  0602               	decf	___awmod@dividend+1,f,c
  2554  001ADA  ECEA  F014         	call	___awmod	;wreg free
  2555  001ADE  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2556  001AE2  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2557  001AE6  ECA0  F016         	call	___wmul	;wreg free
  2558  001AEA  0E50               	movlw	low __powers_
  2559  001AEC  240F               	addwf	?___wmul,w,c
  2560  001AEE  6EF6               	movwf	tblptrl,c
  2561  001AF0  0E10               	movlw	high __powers_
  2562  001AF2  2010               	addwfc	?___wmul+1,w,c
  2563  001AF4  6EF7               	movwf	tblptrh,c
  2564  001AF6                     	if	0	;There are less than 3 active tblptr bytes
  2565  001AF6                     	endif
  2566  001AF6  0009               	tblrd		*+
  2567  001AF8  CFF5 F018          	movff	tablat,___ftmul@f2
  2568  001AFC  0009               	tblrd		*+
  2569  001AFE  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2570  001B02  000A               	tblrd		*-
  2571  001B04  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2572  001B08  ECFB  F011         	call	___ftmul	;wreg free
  2573  001B0C  D053               	goto	L5
  2574  001B0E  D06C               	goto	l194
  2575  001B10  D059               	goto	l2284
  2576  001B12                     l2278:
  2577                           
  2578                           ;doprnt.c: 438: else if(scl > 10)
  2579  001B12  502A               	movf	scale@scl,w,c
  2580  001B14  0A80               	xorlw	128
  2581  001B16  0F75               	addlw	-139
  2582  001B18  A0D8               	btfss	status,0,c
  2583  001B1A  D054               	goto	l2284
  2584                           
  2585                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2586  001B1C  0E00               	movlw	0
  2587  001B1E  6E0A               	movwf	___awdiv@divisor+1,c
  2588  001B20  0E0A               	movlw	10
  2589  001B22  6E09               	movwf	___awdiv@divisor,c
  2590  001B24  502A               	movf	scale@scl,w,c
  2591  001B26  6E07               	movwf	___awdiv@dividend,c
  2592  001B28  6A08               	clrf	___awdiv@dividend+1,c
  2593  001B2A  BE07               	btfsc	___awdiv@dividend,7,c
  2594  001B2C  0608               	decf	___awdiv@dividend+1,f,c
  2595  001B2E  EC59  F014         	call	___awdiv	;wreg free
  2596  001B32  0E09               	movlw	9
  2597  001B34  2407               	addwf	?___awdiv,w,c
  2598  001B36  6E0F               	movwf	___wmul@multiplier,c
  2599  001B38  0E00               	movlw	0
  2600  001B3A  2008               	addwfc	?___awdiv+1,w,c
  2601  001B3C  6E10               	movwf	___wmul@multiplier+1,c
  2602  001B3E  0E00               	movlw	0
  2603  001B40  6E12               	movwf	___wmul@multiplicand+1,c
  2604  001B42  0E03               	movlw	3
  2605  001B44  6E11               	movwf	___wmul@multiplicand,c
  2606  001B46  ECA0  F016         	call	___wmul	;wreg free
  2607  001B4A  0E50               	movlw	low __powers_
  2608  001B4C  240F               	addwf	?___wmul,w,c
  2609  001B4E  6EF6               	movwf	tblptrl,c
  2610  001B50  0E10               	movlw	high __powers_
  2611  001B52  2010               	addwfc	?___wmul+1,w,c
  2612  001B54  6EF7               	movwf	tblptrh,c
  2613  001B56                     	if	0	;There are less than 3 active tblptr bytes
  2614  001B56                     	endif
  2615  001B56  0009               	tblrd		*+
  2616  001B58  CFF5 F015          	movff	tablat,___ftmul@f1
  2617  001B5C  0009               	tblrd		*+
  2618  001B5E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2619  001B62  000A               	tblrd		*-
  2620  001B64  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2621  001B68  0E00               	movlw	0
  2622  001B6A  6E12               	movwf	___wmul@multiplicand+1,c
  2623  001B6C  0E03               	movlw	3
  2624  001B6E  6E11               	movwf	___wmul@multiplicand,c
  2625  001B70  0E00               	movlw	0
  2626  001B72  6E04               	movwf	___awmod@divisor+1,c
  2627  001B74  0E0A               	movlw	10
  2628  001B76  6E03               	movwf	___awmod@divisor,c
  2629  001B78  502A               	movf	scale@scl,w,c
  2630  001B7A  6E01               	movwf	___awmod@dividend,c
  2631  001B7C  6A02               	clrf	___awmod@dividend+1,c
  2632  001B7E  BE01               	btfsc	___awmod@dividend,7,c
  2633  001B80  0602               	decf	___awmod@dividend+1,f,c
  2634  001B82  ECEA  F014         	call	___awmod	;wreg free
  2635  001B86  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2636  001B8A  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2637  001B8E  ECA0  F016         	call	___wmul	;wreg free
  2638  001B92  0E50               	movlw	low __powers_
  2639  001B94  240F               	addwf	?___wmul,w,c
  2640  001B96  6EF6               	movwf	tblptrl,c
  2641  001B98  0E10               	movlw	high __powers_
  2642  001B9A  2010               	addwfc	?___wmul+1,w,c
  2643  001B9C  6EF7               	movwf	tblptrh,c
  2644  001B9E                     	if	0	;There are less than 3 active tblptr bytes
  2645  001B9E                     	endif
  2646  001B9E  0009               	tblrd		*+
  2647  001BA0  CFF5 F018          	movff	tablat,___ftmul@f2
  2648  001BA4  0009               	tblrd		*+
  2649  001BA6  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2650  001BAA  000A               	tblrd		*-
  2651  001BAC  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2652  001BB0  ECFB  F011         	call	___ftmul	;wreg free
  2653  001BB4                     L5:
  2654  001BB4  C015  F024         	movff	?___ftmul,?_scale
  2655  001BB8  C016  F025         	movff	?___ftmul+1,?_scale+1
  2656  001BBC  C017  F026         	movff	?___ftmul+2,?_scale+2
  2657  001BC0  D013               	goto	l194
  2658  001BC2  D000               	goto	l2284
  2659  001BC4                     l2284:
  2660                           
  2661                           ;doprnt.c: 440: return _powers_[scl];
  2662  001BC4  502A               	movf	scale@scl,w,c
  2663  001BC6  0D03               	mullw	3
  2664  001BC8  0E50               	movlw	low __powers_
  2665  001BCA  24F3               	addwf	prodl,w,c
  2666  001BCC  6EF6               	movwf	tblptrl,c
  2667  001BCE  0E10               	movlw	high __powers_
  2668  001BD0                     L4:
  2669  001BD0  20F4               	addwfc	prodh,w,c
  2670  001BD2  6EF7               	movwf	tblptrh,c
  2671  001BD4                     	if	0	;There are less than 3 active tblptr bytes
  2672  001BD4                     	endif
  2673  001BD4  0009               	tblrd		*+
  2674  001BD6  CFF5 F024          	movff	tablat,?_scale
  2675  001BDA  0009               	tblrd		*+
  2676  001BDC  CFF5 F025          	movff	tablat,?_scale+1
  2677  001BE0  000A               	tblrd		*-
  2678  001BE2  CFF5 F026          	movff	tablat,?_scale+2
  2679  001BE6  D000               	goto	l194
  2680  001BE8                     l194:
  2681  001BE8  0012               	return		;funcret
  2682  001BEA                     __end_of_scale:
  2683                           	opt stack 0
  2684                           tblptru	equ	0xFF8
  2685                           tblptrh	equ	0xFF7
  2686                           tblptrl	equ	0xFF6
  2687                           tablat	equ	0xFF5
  2688                           prodh	equ	0xFF4
  2689                           prodl	equ	0xFF3
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postdec1	equ	0xFE5
  2693                           fsr1l	equ	0xFE1
  2694                           postinc2	equ	0xFDE
  2695                           postdec2	equ	0xFDD
  2696                           fsr2h	equ	0xFDA
  2697                           fsr2l	equ	0xFD9
  2698                           status	equ	0xFD8
  2699                           
  2700 ;; *************** function _putch *****************
  2701 ;; Defined at:
  2702 ;;		line 46 in file "Lab5p6_1.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;  c               1    wreg     unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  c               1    0[COMRAM] unsigned char 
  2707 ;; Return value:  Size  Location     Type
  2708 ;;		None               void
  2709 ;; Registers used:
  2710 ;;		wreg
  2711 ;; Tracked objects:
  2712 ;;		On entry : 0/0
  2713 ;;		On exit  : 0/0
  2714 ;;		Unchanged: 0/0
  2715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;Total ram usage:        1 bytes
  2721 ;; Hardware stack levels used:    1
  2722 ;; This function calls:
  2723 ;;		Nothing
  2724 ;; This function is called by:
  2725 ;;		_printf
  2726 ;; This function uses a non-reentrant model
  2727 ;;
  2728                           
  2729                           	psect	text3
  2730  002E18                     __ptext3:
  2731                           	opt stack 0
  2732  002E18                     _putch:
  2733                           	opt stack 29
  2734                           
  2735                           ;incstack = 0
  2736                           ;putch@c stored from wreg
  2737  002E18  6E01               	movwf	putch@c,c
  2738                           
  2739                           ;Lab5p6_1.c: 48: while (!TRMT);
  2740  002E1A  D000               	goto	l84
  2741  002E1C                     l84:
  2742  002E1C  A2AC               	btfss	4012,1,c	;volatile
  2743  002E1E  D7FE               	goto	l84
  2744                           
  2745                           ;Lab5p6_1.c: 49: TXREG = c;
  2746  002E20  C001  FFAD         	movff	putch@c,4013	;volatile
  2747  002E24  0012               	return		;funcret
  2748  002E26                     __end_of_putch:
  2749                           	opt stack 0
  2750                           tblptru	equ	0xFF8
  2751                           tblptrh	equ	0xFF7
  2752                           tblptrl	equ	0xFF6
  2753                           tablat	equ	0xFF5
  2754                           prodh	equ	0xFF4
  2755                           prodl	equ	0xFF3
  2756                           postinc0	equ	0xFEE
  2757                           wreg	equ	0xFE8
  2758                           postdec1	equ	0xFE5
  2759                           fsr1l	equ	0xFE1
  2760                           postinc2	equ	0xFDE
  2761                           postdec2	equ	0xFDD
  2762                           fsr2h	equ	0xFDA
  2763                           fsr2l	equ	0xFD9
  2764                           status	equ	0xFD8
  2765                           
  2766 ;; *************** function _fround *****************
  2767 ;; Defined at:
  2768 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2769 ;; Parameters:    Size  Location     Type
  2770 ;;  prec            1    wreg     unsigned char 
  2771 ;; Auto vars:     Size  Location     Type
  2772 ;;  prec            1   44[COMRAM] unsigned char 
  2773 ;; Return value:  Size  Location     Type
  2774 ;;                  3   35[COMRAM] unsigned char 
  2775 ;; Registers used:
  2776 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2777 ;; Tracked objects:
  2778 ;;		On entry : 0/0
  2779 ;;		On exit  : 0/0
  2780 ;;		Unchanged: 0/0
  2781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2782 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2783 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2785 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2786 ;;Total ram usage:       10 bytes
  2787 ;; Hardware stack levels used:    1
  2788 ;; Hardware stack levels required when called:    2
  2789 ;; This function calls:
  2790 ;;		___awdiv
  2791 ;;		___awmod
  2792 ;;		___ftmul
  2793 ;;		___wmul
  2794 ;; This function is called by:
  2795 ;;		_printf
  2796 ;; This function uses a non-reentrant model
  2797 ;;
  2798                           
  2799                           	psect	text4
  2800  001BEA                     __ptext4:
  2801                           	opt stack 0
  2802  001BEA                     _fround:
  2803                           	opt stack 27
  2804                           
  2805                           ;incstack = 0
  2806                           ;fround@prec stored from wreg
  2807  001BEA  6E2D               	movwf	fround@prec,c
  2808                           
  2809                           ;doprnt.c: 413: if(prec>=110)
  2810  001BEC  0E6D               	movlw	109
  2811  001BEE  642D               	cpfsgt	fround@prec,c
  2812  001BF0  D09B               	goto	l2238
  2813                           
  2814                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2815  001BF2  0E00               	movlw	0
  2816  001BF4  6E12               	movwf	___wmul@multiplicand+1,c
  2817  001BF6  0E03               	movlw	3
  2818  001BF8  6E11               	movwf	___wmul@multiplicand,c
  2819  001BFA  0E00               	movlw	0
  2820  001BFC  6E0A               	movwf	___awdiv@divisor+1,c
  2821  001BFE  0E0A               	movlw	10
  2822  001C00  6E09               	movwf	___awdiv@divisor,c
  2823  001C02  0E00               	movlw	0
  2824  001C04  6E04               	movwf	___awmod@divisor+1,c
  2825  001C06  0E64               	movlw	100
  2826  001C08  6E03               	movwf	___awmod@divisor,c
  2827  001C0A  C02D  F001         	movff	fround@prec,___awmod@dividend
  2828  001C0E  6A02               	clrf	___awmod@dividend+1,c
  2829  001C10  ECEA  F014         	call	___awmod	;wreg free
  2830  001C14  C001  F007         	movff	?___awmod,___awdiv@dividend
  2831  001C18  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2832  001C1C  EC59  F014         	call	___awdiv	;wreg free
  2833  001C20  0E09               	movlw	9
  2834  001C22  2407               	addwf	?___awdiv,w,c
  2835  001C24  6E0F               	movwf	___wmul@multiplier,c
  2836  001C26  0E00               	movlw	0
  2837  001C28  2008               	addwfc	?___awdiv+1,w,c
  2838  001C2A  6E10               	movwf	___wmul@multiplier+1,c
  2839  001C2C  ECA0  F016         	call	___wmul	;wreg free
  2840  001C30  0E29               	movlw	low __npowers_
  2841  001C32  240F               	addwf	?___wmul,w,c
  2842  001C34  6EF6               	movwf	tblptrl,c
  2843  001C36  0E10               	movlw	high __npowers_
  2844  001C38  2010               	addwfc	?___wmul+1,w,c
  2845  001C3A  6EF7               	movwf	tblptrh,c
  2846  001C3C                     	if	0	;There are less than 3 active tblptr bytes
  2847  001C3C                     	endif
  2848  001C3C  0009               	tblrd		*+
  2849  001C3E  CFF5 F018          	movff	tablat,___ftmul@f2
  2850  001C42  0009               	tblrd		*+
  2851  001C44  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2852  001C48  000A               	tblrd		*-
  2853  001C4A  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2854  001C4E  0E00               	movlw	0
  2855  001C50  6E0A               	movwf	___awdiv@divisor+1,c
  2856  001C52  0E64               	movlw	100
  2857  001C54  6E09               	movwf	___awdiv@divisor,c
  2858  001C56  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2859  001C5A  6A08               	clrf	___awdiv@dividend+1,c
  2860  001C5C  EC59  F014         	call	___awdiv	;wreg free
  2861  001C60  0E12               	movlw	18
  2862  001C62  2407               	addwf	?___awdiv,w,c
  2863  001C64  6E0F               	movwf	___wmul@multiplier,c
  2864  001C66  0E00               	movlw	0
  2865  001C68  2008               	addwfc	?___awdiv+1,w,c
  2866  001C6A  6E10               	movwf	___wmul@multiplier+1,c
  2867  001C6C  0E00               	movlw	0
  2868  001C6E  6E12               	movwf	___wmul@multiplicand+1,c
  2869  001C70  0E03               	movlw	3
  2870  001C72  6E11               	movwf	___wmul@multiplicand,c
  2871  001C74  ECA0  F016         	call	___wmul	;wreg free
  2872  001C78  0E29               	movlw	low __npowers_
  2873  001C7A  240F               	addwf	?___wmul,w,c
  2874  001C7C  6EF6               	movwf	tblptrl,c
  2875  001C7E  0E10               	movlw	high __npowers_
  2876  001C80  2010               	addwfc	?___wmul+1,w,c
  2877  001C82  6EF7               	movwf	tblptrh,c
  2878  001C84                     	if	0	;There are less than 3 active tblptr bytes
  2879  001C84                     	endif
  2880  001C84  0009               	tblrd		*+
  2881  001C86  CFF5 F015          	movff	tablat,___ftmul@f1
  2882  001C8A  0009               	tblrd		*+
  2883  001C8C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  2884  001C90  000A               	tblrd		*-
  2885  001C92  CFF5 F017          	movff	tablat,___ftmul@f1+2
  2886  001C96  ECFB  F011         	call	___ftmul	;wreg free
  2887  001C9A  C015  F02A         	movff	?___ftmul,_fround$1268
  2888  001C9E  C016  F02B         	movff	?___ftmul+1,_fround$1268+1
  2889  001CA2  C017  F02C         	movff	?___ftmul+2,_fround$1268+2
  2890                           
  2891                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2892  001CA6  0E00               	movlw	0
  2893  001CA8  6E12               	movwf	___wmul@multiplicand+1,c
  2894  001CAA  0E03               	movlw	3
  2895  001CAC  6E11               	movwf	___wmul@multiplicand,c
  2896  001CAE  0E00               	movlw	0
  2897  001CB0  6E04               	movwf	___awmod@divisor+1,c
  2898  001CB2  0E0A               	movlw	10
  2899  001CB4  6E03               	movwf	___awmod@divisor,c
  2900  001CB6  C02D  F001         	movff	fround@prec,___awmod@dividend
  2901  001CBA  6A02               	clrf	___awmod@dividend+1,c
  2902  001CBC  ECEA  F014         	call	___awmod	;wreg free
  2903  001CC0  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2904  001CC4  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2905  001CC8  ECA0  F016         	call	___wmul	;wreg free
  2906  001CCC  0E29               	movlw	low __npowers_
  2907  001CCE  240F               	addwf	?___wmul,w,c
  2908  001CD0  6EF6               	movwf	tblptrl,c
  2909  001CD2  0E10               	movlw	high __npowers_
  2910  001CD4  2010               	addwfc	?___wmul+1,w,c
  2911  001CD6  6EF7               	movwf	tblptrh,c
  2912  001CD8                     	if	0	;There are less than 3 active tblptr bytes
  2913  001CD8                     	endif
  2914  001CD8  0009               	tblrd		*+
  2915  001CDA  CFF5 F018          	movff	tablat,___ftmul@f2
  2916  001CDE  0009               	tblrd		*+
  2917  001CE0  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2918  001CE4  000A               	tblrd		*-
  2919  001CE6  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2920  001CEA  C02A  F015         	movff	_fround$1268,___ftmul@f1
  2921  001CEE  C02B  F016         	movff	_fround$1268+1,___ftmul@f1+1
  2922  001CF2  C02C  F017         	movff	_fround$1268+2,___ftmul@f1+2
  2923  001CF6  ECFB  F011         	call	___ftmul	;wreg free
  2924  001CFA  C015  F027         	movff	?___ftmul,_fround$1269
  2925  001CFE  C016  F028         	movff	?___ftmul+1,_fround$1269+1
  2926  001D02  C017  F029         	movff	?___ftmul+2,_fround$1269+2
  2927                           
  2928                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2929  001D06  C027  F015         	movff	_fround$1269,___ftmul@f1
  2930  001D0A  C028  F016         	movff	_fround$1269+1,___ftmul@f1+1
  2931  001D0E  C029  F017         	movff	_fround$1269+2,___ftmul@f1+2
  2932  001D12  0E00               	movlw	0
  2933  001D14  6E18               	movwf	___ftmul@f2,c
  2934  001D16  0E00               	movlw	0
  2935  001D18  6E19               	movwf	___ftmul@f2+1,c
  2936  001D1A  0E3F               	movlw	63
  2937  001D1C  6E1A               	movwf	___ftmul@f2+2,c
  2938  001D1E  ECFB  F011         	call	___ftmul	;wreg free
  2939  001D22  D07D               	goto	L7
  2940  001D24  D083               	goto	l187
  2941  001D26  D062               	goto	l2246
  2942  001D28                     l2238:
  2943                           
  2944                           ;doprnt.c: 415: else if(prec > 10)
  2945  001D28  0E0A               	movlw	10
  2946  001D2A  642D               	cpfsgt	fround@prec,c
  2947  001D2C  D05F               	goto	l2246
  2948                           
  2949                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2950  001D2E  0E00               	movlw	0
  2951  001D30  6E12               	movwf	___wmul@multiplicand+1,c
  2952  001D32  0E03               	movlw	3
  2953  001D34  6E11               	movwf	___wmul@multiplicand,c
  2954  001D36  0E00               	movlw	0
  2955  001D38  6E04               	movwf	___awmod@divisor+1,c
  2956  001D3A  0E0A               	movlw	10
  2957  001D3C  6E03               	movwf	___awmod@divisor,c
  2958  001D3E  C02D  F001         	movff	fround@prec,___awmod@dividend
  2959  001D42  6A02               	clrf	___awmod@dividend+1,c
  2960  001D44  ECEA  F014         	call	___awmod	;wreg free
  2961  001D48  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2962  001D4C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2963  001D50  ECA0  F016         	call	___wmul	;wreg free
  2964  001D54  0E29               	movlw	low __npowers_
  2965  001D56  240F               	addwf	?___wmul,w,c
  2966  001D58  6EF6               	movwf	tblptrl,c
  2967  001D5A  0E10               	movlw	high __npowers_
  2968  001D5C  2010               	addwfc	?___wmul+1,w,c
  2969  001D5E  6EF7               	movwf	tblptrh,c
  2970  001D60                     	if	0	;There are less than 3 active tblptr bytes
  2971  001D60                     	endif
  2972  001D60  0009               	tblrd		*+
  2973  001D62  CFF5 F018          	movff	tablat,___ftmul@f2
  2974  001D66  0009               	tblrd		*+
  2975  001D68  CFF5 F019          	movff	tablat,___ftmul@f2+1
  2976  001D6C  000A               	tblrd		*-
  2977  001D6E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  2978  001D72  0E00               	movlw	0
  2979  001D74  6E0A               	movwf	___awdiv@divisor+1,c
  2980  001D76  0E0A               	movlw	10
  2981  001D78  6E09               	movwf	___awdiv@divisor,c
  2982  001D7A  C02D  F007         	movff	fround@prec,___awdiv@dividend
  2983  001D7E  6A08               	clrf	___awdiv@dividend+1,c
  2984  001D80  EC59  F014         	call	___awdiv	;wreg free
  2985  001D84  0E09               	movlw	9
  2986  001D86  2407               	addwf	?___awdiv,w,c
  2987  001D88  6E0F               	movwf	___wmul@multiplier,c
  2988  001D8A  0E00               	movlw	0
  2989  001D8C  2008               	addwfc	?___awdiv+1,w,c
  2990  001D8E  6E10               	movwf	___wmul@multiplier+1,c
  2991  001D90  0E00               	movlw	0
  2992  001D92  6E12               	movwf	___wmul@multiplicand+1,c
  2993  001D94  0E03               	movlw	3
  2994  001D96  6E11               	movwf	___wmul@multiplicand,c
  2995  001D98  ECA0  F016         	call	___wmul	;wreg free
  2996  001D9C  0E29               	movlw	low __npowers_
  2997  001D9E  240F               	addwf	?___wmul,w,c
  2998  001DA0  6EF6               	movwf	tblptrl,c
  2999  001DA2  0E10               	movlw	high __npowers_
  3000  001DA4  2010               	addwfc	?___wmul+1,w,c
  3001  001DA6  6EF7               	movwf	tblptrh,c
  3002  001DA8                     	if	0	;There are less than 3 active tblptr bytes
  3003  001DA8                     	endif
  3004  001DA8  0009               	tblrd		*+
  3005  001DAA  CFF5 F015          	movff	tablat,___ftmul@f1
  3006  001DAE  0009               	tblrd		*+
  3007  001DB0  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3008  001DB4  000A               	tblrd		*-
  3009  001DB6  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3010  001DBA  ECFB  F011         	call	___ftmul	;wreg free
  3011  001DBE  C015  F02A         	movff	?___ftmul,_fround$1268
  3012  001DC2  C016  F02B         	movff	?___ftmul+1,_fround$1268+1
  3013  001DC6  C017  F02C         	movff	?___ftmul+2,_fround$1268+2
  3014                           
  3015                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  3016  001DCA  C02A  F015         	movff	_fround$1268,___ftmul@f1
  3017  001DCE  C02B  F016         	movff	_fround$1268+1,___ftmul@f1+1
  3018  001DD2  C02C  F017         	movff	_fround$1268+2,___ftmul@f1+2
  3019  001DD6  0E00               	movlw	0
  3020  001DD8  6E18               	movwf	___ftmul@f2,c
  3021  001DDA  0E00               	movlw	0
  3022  001DDC  6E19               	movwf	___ftmul@f2+1,c
  3023  001DDE  0E3F               	movlw	63
  3024  001DE0  6E1A               	movwf	___ftmul@f2+2,c
  3025  001DE2  ECFB  F011         	call	___ftmul	;wreg free
  3026  001DE6  D01B               	goto	L7
  3027  001DE8  D021               	goto	l187
  3028  001DEA  D000               	goto	l2246
  3029  001DEC                     l2246:
  3030                           
  3031                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  3032  001DEC  502D               	movf	fround@prec,w,c
  3033  001DEE  0D03               	mullw	3
  3034  001DF0  0E29               	movlw	low __npowers_
  3035  001DF2  24F3               	addwf	prodl,w,c
  3036  001DF4  6EF6               	movwf	tblptrl,c
  3037  001DF6  0E10               	movlw	high __npowers_
  3038  001DF8  20F4               	addwfc	prodh,w,c
  3039  001DFA  6EF7               	movwf	tblptrh,c
  3040  001DFC                     	if	0	;There are less than 3 active tblptr bytes
  3041  001DFC                     	endif
  3042  001DFC  0009               	tblrd		*+
  3043  001DFE  CFF5 F015          	movff	tablat,___ftmul@f1
  3044  001E02  0009               	tblrd		*+
  3045  001E04  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3046  001E08  000A               	tblrd		*-
  3047  001E0A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3048  001E0E  0E00               	movlw	0
  3049  001E10  6E18               	movwf	___ftmul@f2,c
  3050  001E12  0E00               	movlw	0
  3051  001E14  6E19               	movwf	___ftmul@f2+1,c
  3052  001E16  0E3F               	movlw	63
  3053  001E18  6E1A               	movwf	___ftmul@f2+2,c
  3054  001E1A  ECFB  F011         	call	___ftmul	;wreg free
  3055  001E1E                     L7:
  3056  001E1E  C015  F024         	movff	?___ftmul,?_fround
  3057  001E22  C016  F025         	movff	?___ftmul+1,?_fround+1
  3058  001E26  C017  F026         	movff	?___ftmul+2,?_fround+2
  3059  001E2A  D000               	goto	l187
  3060  001E2C                     l187:
  3061  001E2C  0012               	return		;funcret
  3062  001E2E                     __end_of_fround:
  3063                           	opt stack 0
  3064                           tblptru	equ	0xFF8
  3065                           tblptrh	equ	0xFF7
  3066                           tblptrl	equ	0xFF6
  3067                           tablat	equ	0xFF5
  3068                           prodh	equ	0xFF4
  3069                           prodl	equ	0xFF3
  3070                           postinc0	equ	0xFEE
  3071                           wreg	equ	0xFE8
  3072                           postdec1	equ	0xFE5
  3073                           fsr1l	equ	0xFE1
  3074                           postinc2	equ	0xFDE
  3075                           postdec2	equ	0xFDD
  3076                           fsr2h	equ	0xFDA
  3077                           fsr2l	equ	0xFD9
  3078                           status	equ	0xFD8
  3079                           
  3080 ;; *************** function ___wmul *****************
  3081 ;; Defined at:
  3082 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  multiplier      2   14[COMRAM] unsigned int 
  3085 ;;  multiplicand    2   16[COMRAM] unsigned int 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  product         2   18[COMRAM] unsigned int 
  3088 ;; Return value:  Size  Location     Type
  3089 ;;                  2   14[COMRAM] unsigned int 
  3090 ;; Registers used:
  3091 ;;		wreg, status,2, status,0, prodl, prodh
  3092 ;; Tracked objects:
  3093 ;;		On entry : 0/0
  3094 ;;		On exit  : 0/0
  3095 ;;		Unchanged: 0/0
  3096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3097 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3098 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3100 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3101 ;;Total ram usage:        6 bytes
  3102 ;; Hardware stack levels used:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_fround
  3107 ;;		_scale
  3108 ;;		_printf
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112                           	psect	text5
  3113  002D40                     __ptext5:
  3114                           	opt stack 0
  3115  002D40                     ___wmul:
  3116                           	opt stack 28
  3117                           
  3118                           ;incstack = 0
  3119  002D40  500F               	movf	___wmul@multiplier,w,c
  3120  002D42  0211               	mulwf	___wmul@multiplicand,c
  3121  002D44  CFF3 F013          	movff	prodl,___wmul@product
  3122  002D48  CFF4 F014          	movff	prodh,___wmul@product+1
  3123  002D4C  500F               	movf	___wmul@multiplier,w,c
  3124  002D4E  0212               	mulwf	___wmul@multiplicand+1,c
  3125  002D50  50F3               	movf	prodl,w,c
  3126  002D52  2614               	addwf	___wmul@product+1,f,c
  3127  002D54  5010               	movf	___wmul@multiplier+1,w,c
  3128  002D56  0211               	mulwf	___wmul@multiplicand,c
  3129  002D58  50F3               	movf	prodl,w,c
  3130  002D5A  2614               	addwf	___wmul@product+1,f,c
  3131  002D5C  C013  F00F         	movff	___wmul@product,?___wmul
  3132  002D60  C014  F010         	movff	___wmul@product+1,?___wmul+1
  3133  002D64  D000               	goto	l295
  3134  002D66                     l295:
  3135  002D66  0012               	return		;funcret
  3136  002D68                     __end_of___wmul:
  3137                           	opt stack 0
  3138                           tblptru	equ	0xFF8
  3139                           tblptrh	equ	0xFF7
  3140                           tblptrl	equ	0xFF6
  3141                           tablat	equ	0xFF5
  3142                           prodh	equ	0xFF4
  3143                           prodl	equ	0xFF3
  3144                           postinc0	equ	0xFEE
  3145                           wreg	equ	0xFE8
  3146                           postdec1	equ	0xFE5
  3147                           fsr1l	equ	0xFE1
  3148                           postinc2	equ	0xFDE
  3149                           postdec2	equ	0xFDD
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function ___ftmul *****************
  3155 ;; Defined at:
  3156 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  f1              3   20[COMRAM] float 
  3159 ;;  f2              3   23[COMRAM] float 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  3162 ;;  sign            1   34[COMRAM] unsigned char 
  3163 ;;  cntr            1   33[COMRAM] unsigned char 
  3164 ;;  exp             1   29[COMRAM] unsigned char 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  3   20[COMRAM] float 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3174 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;Total ram usage:       15 bytes
  3179 ;; Hardware stack levels used:    1
  3180 ;; Hardware stack levels required when called:    1
  3181 ;; This function calls:
  3182 ;;		___ftpack
  3183 ;; This function is called by:
  3184 ;;		_main
  3185 ;;		_fround
  3186 ;;		_scale
  3187 ;;		_printf
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text6
  3192  0023F6                     __ptext6:
  3193                           	opt stack 0
  3194  0023F6                     ___ftmul:
  3195                           	opt stack 27
  3196                           
  3197                           ;incstack = 0
  3198  0023F6  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  3199  0023FA  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3200  0023FC  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3201  0023FE  3416               	rlcf	___ftmul@f1+1,w,c
  3202  002400  361B               	rlcf	??___ftmul& (0+255),f,c
  3203  002402  E301               	bnc	u1881
  3204  002404  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3205  002406                     u1881:
  3206  002406  501B               	movf	??___ftmul,w,c
  3207  002408  6E1E               	movwf	___ftmul@exp,c
  3208  00240A  501E               	movf	___ftmul@exp,w,c
  3209  00240C  A4D8               	btfss	status,2,c
  3210  00240E  D002               	goto	l2052
  3211  002410  D00E               	goto	l2054
  3212  002412  D06C               	goto	l724
  3213  002414                     l2052:
  3214  002414  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  3215  002418  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  3216  00241A  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  3217  00241C  3419               	rlcf	___ftmul@f2+1,w,c
  3218  00241E  361B               	rlcf	??___ftmul& (0+255),f,c
  3219  002420  E301               	bnc	u1901
  3220  002422  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  3221  002424                     u1901:
  3222  002424  501B               	movf	??___ftmul,w,c
  3223  002426  6E23               	movwf	___ftmul@sign,c
  3224  002428  5023               	movf	___ftmul@sign,w,c
  3225  00242A  A4D8               	btfss	status,2,c
  3226  00242C  D007               	goto	l2058
  3227  00242E                     l2054:
  3228  00242E  0E00               	movlw	0
  3229  002430  6E15               	movwf	?___ftmul,c
  3230  002432  0E00               	movlw	0
  3231  002434  6E16               	movwf	?___ftmul+1,c
  3232  002436  0E00               	movlw	0
  3233  002438  6E17               	movwf	?___ftmul+2,c
  3234  00243A  D058               	goto	l724
  3235  00243C                     l2058:
  3236  00243C  5023               	movf	___ftmul@sign,w,c
  3237  00243E  0F7B               	addlw	123
  3238  002440  261E               	addwf	___ftmul@exp,f,c
  3239  002442  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  3240  002446  501A               	movf	___ftmul@f2+2,w,c
  3241  002448  1A23               	xorwf	___ftmul@sign,f,c
  3242  00244A  0E80               	movlw	128
  3243  00244C  1623               	andwf	___ftmul@sign,f,c
  3244  00244E  8E16               	bsf	___ftmul@f1+1,7,c
  3245  002450  8E19               	bsf	___ftmul@f2+1,7,c
  3246  002452  0EFF               	movlw	255
  3247  002454  1618               	andwf	___ftmul@f2,f,c
  3248  002456  0EFF               	movlw	255
  3249  002458  1619               	andwf	___ftmul@f2+1,f,c
  3250  00245A  0E00               	movlw	0
  3251  00245C  161A               	andwf	___ftmul@f2+2,f,c
  3252  00245E  0E00               	movlw	0
  3253  002460  6E1F               	movwf	___ftmul@f3_as_product,c
  3254  002462  0E00               	movlw	0
  3255  002464  6E20               	movwf	___ftmul@f3_as_product+1,c
  3256  002466  0E00               	movlw	0
  3257  002468  6E21               	movwf	___ftmul@f3_as_product+2,c
  3258  00246A  0E07               	movlw	7
  3259  00246C  6E22               	movwf	___ftmul@cntr,c
  3260  00246E  D000               	goto	l2072
  3261  002470                     l2072:
  3262  002470  A015               	btfss	___ftmul@f1,0,c
  3263  002472  D007               	goto	l2076
  3264  002474  5018               	movf	___ftmul@f2,w,c
  3265  002476  261F               	addwf	___ftmul@f3_as_product,f,c
  3266  002478  5019               	movf	___ftmul@f2+1,w,c
  3267  00247A  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3268  00247C  501A               	movf	___ftmul@f2+2,w,c
  3269  00247E  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3270  002480  D000               	goto	l2076
  3271  002482                     l2076:
  3272  002482  90D8               	bcf	status,0,c
  3273  002484  3217               	rrcf	___ftmul@f1+2,f,c
  3274  002486  3216               	rrcf	___ftmul@f1+1,f,c
  3275  002488  3215               	rrcf	___ftmul@f1,f,c
  3276  00248A  90D8               	bcf	status,0,c
  3277  00248C  3618               	rlcf	___ftmul@f2,f,c
  3278  00248E  3619               	rlcf	___ftmul@f2+1,f,c
  3279  002490  361A               	rlcf	___ftmul@f2+2,f,c
  3280  002492  2E22               	decfsz	___ftmul@cntr,f,c
  3281  002494  D7ED               	goto	l2072
  3282  002496  D000               	goto	l2080
  3283  002498                     l2080:
  3284  002498  0E09               	movlw	9
  3285  00249A  6E22               	movwf	___ftmul@cntr,c
  3286  00249C  D000               	goto	l2082
  3287  00249E                     l2082:
  3288  00249E  A015               	btfss	___ftmul@f1,0,c
  3289  0024A0  D007               	goto	l2086
  3290  0024A2  5018               	movf	___ftmul@f2,w,c
  3291  0024A4  261F               	addwf	___ftmul@f3_as_product,f,c
  3292  0024A6  5019               	movf	___ftmul@f2+1,w,c
  3293  0024A8  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  3294  0024AA  501A               	movf	___ftmul@f2+2,w,c
  3295  0024AC  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  3296  0024AE  D000               	goto	l2086
  3297  0024B0                     l2086:
  3298  0024B0  90D8               	bcf	status,0,c
  3299  0024B2  3217               	rrcf	___ftmul@f1+2,f,c
  3300  0024B4  3216               	rrcf	___ftmul@f1+1,f,c
  3301  0024B6  3215               	rrcf	___ftmul@f1,f,c
  3302  0024B8  90D8               	bcf	status,0,c
  3303  0024BA  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  3304  0024BC  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  3305  0024BE  321F               	rrcf	___ftmul@f3_as_product,f,c
  3306  0024C0  2E22               	decfsz	___ftmul@cntr,f,c
  3307  0024C2  D7ED               	goto	l2082
  3308  0024C4  D000               	goto	l2090
  3309  0024C6                     l2090:
  3310  0024C6  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3311  0024CA  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3312  0024CE  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3313  0024D2  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  3314  0024D6  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  3315  0024DA  EC5B  F013         	call	___ftpack	;wreg free
  3316  0024DE  C001  F015         	movff	?___ftpack,?___ftmul
  3317  0024E2  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  3318  0024E6  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  3319  0024EA  D000               	goto	l724
  3320  0024EC                     l724:
  3321  0024EC  0012               	return		;funcret
  3322  0024EE                     __end_of___ftmul:
  3323                           	opt stack 0
  3324                           tblptru	equ	0xFF8
  3325                           tblptrh	equ	0xFF7
  3326                           tblptrl	equ	0xFF6
  3327                           tablat	equ	0xFF5
  3328                           prodh	equ	0xFF4
  3329                           prodl	equ	0xFF3
  3330                           postinc0	equ	0xFEE
  3331                           wreg	equ	0xFE8
  3332                           postdec1	equ	0xFE5
  3333                           fsr1l	equ	0xFE1
  3334                           postinc2	equ	0xFDE
  3335                           postdec2	equ	0xFDD
  3336                           fsr2h	equ	0xFDA
  3337                           fsr2l	equ	0xFD9
  3338                           status	equ	0xFD8
  3339                           
  3340 ;; *************** function ___awmod *****************
  3341 ;; Defined at:
  3342 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3343 ;; Parameters:    Size  Location     Type
  3344 ;;  dividend        2    0[COMRAM] int 
  3345 ;;  divisor         2    2[COMRAM] int 
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;  sign            1    5[COMRAM] unsigned char 
  3348 ;;  counter         1    4[COMRAM] unsigned char 
  3349 ;; Return value:  Size  Location     Type
  3350 ;;                  2    0[COMRAM] int 
  3351 ;; Registers used:
  3352 ;;		wreg, status,2, status,0
  3353 ;; Tracked objects:
  3354 ;;		On entry : 0/0
  3355 ;;		On exit  : 0/0
  3356 ;;		Unchanged: 0/0
  3357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3358 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3359 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3361 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3362 ;;Total ram usage:        6 bytes
  3363 ;; Hardware stack levels used:    1
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;;		_fround
  3369 ;;		_scale
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text7
  3374  0029D4                     __ptext7:
  3375                           	opt stack 0
  3376  0029D4                     ___awmod:
  3377                           	opt stack 28
  3378                           
  3379                           ;incstack = 0
  3380  0029D4  0E00               	movlw	0
  3381  0029D6  6E06               	movwf	___awmod@sign,c
  3382  0029D8  AE02               	btfss	___awmod@dividend+1,7,c
  3383  0029DA  D007               	goto	l2146
  3384  0029DC  6C01               	negf	___awmod@dividend,c
  3385  0029DE  1E02               	comf	___awmod@dividend+1,f,c
  3386  0029E0  B0D8               	btfsc	status,0,c
  3387  0029E2  2A02               	incf	___awmod@dividend+1,f,c
  3388  0029E4  0E01               	movlw	1
  3389  0029E6  6E06               	movwf	___awmod@sign,c
  3390  0029E8  D000               	goto	l2146
  3391  0029EA                     l2146:
  3392  0029EA  AE04               	btfss	___awmod@divisor+1,7,c
  3393  0029EC  D005               	goto	l2150
  3394  0029EE  6C03               	negf	___awmod@divisor,c
  3395  0029F0  1E04               	comf	___awmod@divisor+1,f,c
  3396  0029F2  B0D8               	btfsc	status,0,c
  3397  0029F4  2A04               	incf	___awmod@divisor+1,f,c
  3398  0029F6  D000               	goto	l2150
  3399  0029F8                     l2150:
  3400  0029F8  5003               	movf	___awmod@divisor,w,c
  3401  0029FA  1004               	iorwf	___awmod@divisor+1,w,c
  3402  0029FC  B4D8               	btfsc	status,2,c
  3403  0029FE  D01D               	goto	l2166
  3404  002A00  0E01               	movlw	1
  3405  002A02  6E05               	movwf	___awmod@counter,c
  3406  002A04  D005               	goto	l2156
  3407  002A06                     l2154:
  3408  002A06  90D8               	bcf	status,0,c
  3409  002A08  3603               	rlcf	___awmod@divisor,f,c
  3410  002A0A  3604               	rlcf	___awmod@divisor+1,f,c
  3411  002A0C  2A05               	incf	___awmod@counter,f,c
  3412  002A0E  D000               	goto	l2156
  3413  002A10                     l2156:
  3414  002A10  BE04               	btfsc	___awmod@divisor+1,7,c
  3415  002A12  D002               	goto	l2158
  3416  002A14  D7F8               	goto	l2154
  3417  002A16  D000               	goto	l2158
  3418  002A18                     l2158:
  3419  002A18  5003               	movf	___awmod@divisor,w,c
  3420  002A1A  5C01               	subwf	___awmod@dividend,w,c
  3421  002A1C  5004               	movf	___awmod@divisor+1,w,c
  3422  002A1E  5802               	subwfb	___awmod@dividend+1,w,c
  3423  002A20  A0D8               	btfss	status,0,c
  3424  002A22  D005               	goto	l2162
  3425  002A24  5003               	movf	___awmod@divisor,w,c
  3426  002A26  5E01               	subwf	___awmod@dividend,f,c
  3427  002A28  5004               	movf	___awmod@divisor+1,w,c
  3428  002A2A  5A02               	subwfb	___awmod@dividend+1,f,c
  3429  002A2C  D000               	goto	l2162
  3430  002A2E                     l2162:
  3431  002A2E  90D8               	bcf	status,0,c
  3432  002A30  3204               	rrcf	___awmod@divisor+1,f,c
  3433  002A32  3203               	rrcf	___awmod@divisor,f,c
  3434  002A34  2E05               	decfsz	___awmod@counter,f,c
  3435  002A36  D7F0               	goto	l2158
  3436  002A38  D000               	goto	l2166
  3437  002A3A                     l2166:
  3438  002A3A  5006               	movf	___awmod@sign,w,c
  3439  002A3C  B4D8               	btfsc	status,2,c
  3440  002A3E  D005               	goto	l2170
  3441  002A40  6C01               	negf	___awmod@dividend,c
  3442  002A42  1E02               	comf	___awmod@dividend+1,f,c
  3443  002A44  B0D8               	btfsc	status,0,c
  3444  002A46  2A02               	incf	___awmod@dividend+1,f,c
  3445  002A48  D000               	goto	l2170
  3446  002A4A                     l2170:
  3447  002A4A  C001  F001         	movff	___awmod@dividend,?___awmod
  3448  002A4E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3449  002A52  D000               	goto	l501
  3450  002A54                     l501:
  3451  002A54  0012               	return		;funcret
  3452  002A56                     __end_of___awmod:
  3453                           	opt stack 0
  3454                           tblptru	equ	0xFF8
  3455                           tblptrh	equ	0xFF7
  3456                           tblptrl	equ	0xFF6
  3457                           tablat	equ	0xFF5
  3458                           prodh	equ	0xFF4
  3459                           prodl	equ	0xFF3
  3460                           postinc0	equ	0xFEE
  3461                           wreg	equ	0xFE8
  3462                           postdec1	equ	0xFE5
  3463                           fsr1l	equ	0xFE1
  3464                           postinc2	equ	0xFDE
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function __tdiv_to_l_ *****************
  3471 ;; Defined at:
  3472 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  f1              3    0[COMRAM] float 
  3475 ;;  f2              3    3[COMRAM] float 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  quot            4    9[COMRAM] unsigned long 
  3478 ;;  exp1            1   14[COMRAM] unsigned char 
  3479 ;;  cntr            1   13[COMRAM] unsigned char 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  4    0[COMRAM] unsigned long 
  3482 ;; Registers used:
  3483 ;;		wreg, status,2, status,0
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3489 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;Total ram usage:       15 bytes
  3494 ;; Hardware stack levels used:    1
  3495 ;; This function calls:
  3496 ;;		Nothing
  3497 ;; This function is called by:
  3498 ;;		_printf
  3499 ;; This function uses a non-reentrant model
  3500 ;;
  3501                           
  3502                           	psect	text8
  3503  0021DC                     __ptext8:
  3504                           	opt stack 0
  3505  0021DC                     __tdiv_to_l_:
  3506                           	opt stack 29
  3507                           
  3508                           ;incstack = 0
  3509  0021DC  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3510  0021E0  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3511  0021E2  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3512  0021E4  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3513  0021E6  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3514  0021E8  E301               	bnc	u2241
  3515  0021EA  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3516  0021EC                     u2241:
  3517  0021EC  5007               	movf	??__tdiv_to_l_,w,c
  3518  0021EE  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3519  0021F0  500F               	movf	__tdiv_to_l_@exp1,w,c
  3520  0021F2  A4D8               	btfss	status,2,c
  3521  0021F4  D002               	goto	l2294
  3522  0021F6  D05D               	goto	l2336
  3523  0021F8  D078               	goto	l700
  3524  0021FA                     l2294:
  3525  0021FA  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3526  0021FE  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3527  002200  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3528  002202  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3529  002204  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3530  002206  E301               	bnc	u2261
  3531  002208  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3532  00220A                     u2261:
  3533  00220A  5007               	movf	??__tdiv_to_l_,w,c
  3534  00220C  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3535  00220E  500E               	movf	__tdiv_to_l_@cntr,w,c
  3536  002210  A4D8               	btfss	status,2,c
  3537  002212  D002               	goto	l2300
  3538  002214  D04E               	goto	l2336
  3539  002216  D069               	goto	l700
  3540  002218                     l2300:
  3541  002218  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3542  00221A  0EFF               	movlw	255
  3543  00221C  1601               	andwf	__tdiv_to_l_@f1,f,c
  3544  00221E  0EFF               	movlw	255
  3545  002220  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3546  002222  0E00               	movlw	0
  3547  002224  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3548  002226  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3549  002228  0EFF               	movlw	255
  3550  00222A  1604               	andwf	__tdiv_to_l_@f2,f,c
  3551  00222C  0EFF               	movlw	255
  3552  00222E  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3553  002230  0E00               	movlw	0
  3554  002232  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3555  002234  0E00               	movlw	0
  3556  002236  6E0A               	movwf	__tdiv_to_l_@quot,c
  3557  002238  0E00               	movlw	0
  3558  00223A  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3559  00223C  0E00               	movlw	0
  3560  00223E  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3561  002240  0E00               	movlw	0
  3562  002242  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3563  002244  0E7F               	movlw	127
  3564  002246  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3565  002248  500E               	movf	__tdiv_to_l_@cntr,w,c
  3566  00224A  0F98               	addlw	152
  3567  00224C  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3568  00224E  0E18               	movlw	24
  3569  002250  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3570  002252                     l702:
  3571  002252  90D8               	bcf	status,0,c
  3572  002254  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3573  002256  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3574  002258  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3575  00225A  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3576  00225C  5004               	movf	__tdiv_to_l_@f2,w,c
  3577  00225E  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3578  002260  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3579  002262  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3580  002264  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3581  002266  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3582  002268  A0D8               	btfss	status,0,c
  3583  00226A  D007               	goto	l703
  3584  00226C  5004               	movf	__tdiv_to_l_@f2,w,c
  3585  00226E  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3586  002270  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3587  002272  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3588  002274  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3589  002276  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3590  002278  800A               	bsf	__tdiv_to_l_@quot,0,c
  3591  00227A                     l703:
  3592  00227A  90D8               	bcf	status,0,c
  3593  00227C  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3594  00227E  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3595  002280  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3596  002282  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3597  002284  D7E6               	goto	l702
  3598  002286  D000               	goto	l2322
  3599  002288                     l2322:
  3600  002288  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3601  00228A  D010               	goto	l2334
  3602  00228C  500F               	movf	__tdiv_to_l_@exp1,w,c
  3603  00228E  0A80               	xorlw	128
  3604  002290  0F97               	addlw	151
  3605  002292  B0D8               	btfsc	status,0,c
  3606  002294  D003               	goto	l2330
  3607  002296  D00D               	goto	l2336
  3608  002298  D028               	goto	l700
  3609  00229A  D000               	goto	l2330
  3610  00229C                     l2330:
  3611  00229C  90D8               	bcf	status,0,c
  3612  00229E  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3613  0022A0  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3614  0022A2  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3615  0022A4  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3616  0022A6  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3617  0022A8  D7F9               	goto	l2330
  3618  0022AA  D017               	goto	l709
  3619  0022AC                     l2334:
  3620  0022AC  0E17               	movlw	23
  3621  0022AE  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3622  0022B0  D011               	goto	l2342
  3623  0022B2                     l2336:
  3624  0022B2  0E00               	movlw	0
  3625  0022B4  6E01               	movwf	?__tdiv_to_l_,c
  3626  0022B6  0E00               	movlw	0
  3627  0022B8  6E02               	movwf	?__tdiv_to_l_+1,c
  3628  0022BA  0E00               	movlw	0
  3629  0022BC  6E03               	movwf	?__tdiv_to_l_+2,c
  3630  0022BE  0E00               	movlw	0
  3631  0022C0  6E04               	movwf	?__tdiv_to_l_+3,c
  3632  0022C2  D013               	goto	l700
  3633  0022C4  D007               	goto	l2342
  3634  0022C6                     l2340:
  3635  0022C6  90D8               	bcf	status,0,c
  3636  0022C8  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3637  0022CA  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3638  0022CC  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3639  0022CE  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3640  0022D0  060F               	decf	__tdiv_to_l_@exp1,f,c
  3641  0022D2  D000               	goto	l2342
  3642  0022D4                     l2342:
  3643  0022D4  500F               	movf	__tdiv_to_l_@exp1,w,c
  3644  0022D6  A4D8               	btfss	status,2,c
  3645  0022D8  D7F6               	goto	l2340
  3646  0022DA                     l709:
  3647  0022DA  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3648  0022DE  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3649  0022E2  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3650  0022E6  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3651  0022EA                     l700:
  3652  0022EA  0012               	return		;funcret
  3653  0022EC                     __end_of__tdiv_to_l_:
  3654                           	opt stack 0
  3655                           tblptru	equ	0xFF8
  3656                           tblptrh	equ	0xFF7
  3657                           tblptrl	equ	0xFF6
  3658                           tablat	equ	0xFF5
  3659                           prodh	equ	0xFF4
  3660                           prodl	equ	0xFF3
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           postdec1	equ	0xFE5
  3664                           fsr1l	equ	0xFE1
  3665                           postinc2	equ	0xFDE
  3666                           postdec2	equ	0xFDD
  3667                           fsr2h	equ	0xFDA
  3668                           fsr2l	equ	0xFD9
  3669                           status	equ	0xFD8
  3670                           
  3671 ;; *************** function __div_to_l_ *****************
  3672 ;; Defined at:
  3673 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3674 ;; Parameters:    Size  Location     Type
  3675 ;;  f1              3    0[COMRAM] unsigned long 
  3676 ;;  f2              3    3[COMRAM] unsigned long 
  3677 ;; Auto vars:     Size  Location     Type
  3678 ;;  quot            4    6[COMRAM] unsigned long 
  3679 ;;  exp1            1   11[COMRAM] unsigned char 
  3680 ;;  cntr            1   10[COMRAM] unsigned char 
  3681 ;; Return value:  Size  Location     Type
  3682 ;;                  4    0[COMRAM] unsigned long 
  3683 ;; Registers used:
  3684 ;;		wreg, status,2, status,0
  3685 ;; Tracked objects:
  3686 ;;		On entry : 0/0
  3687 ;;		On exit  : 0/0
  3688 ;;		Unchanged: 0/0
  3689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3690 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3691 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3693 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;Total ram usage:       12 bytes
  3695 ;; Hardware stack levels used:    1
  3696 ;; This function calls:
  3697 ;;		Nothing
  3698 ;; This function is called by:
  3699 ;;		_printf
  3700 ;; This function uses a non-reentrant model
  3701 ;;
  3702                           
  3703                           	psect	text9
  3704  0022EC                     __ptext9:
  3705                           	opt stack 0
  3706  0022EC                     __div_to_l_:
  3707                           	opt stack 29
  3708                           
  3709                           ;incstack = 0
  3710  0022EC  3403               	rlcf	__div_to_l_@f1+2,w,c
  3711  0022EE  3404               	rlcf	__div_to_l_@f1+3,w,c
  3712  0022F0  6E0C               	movwf	__div_to_l_@exp1,c
  3713  0022F2  500C               	movf	__div_to_l_@exp1,w,c
  3714  0022F4  A4D8               	btfss	status,2,c
  3715  0022F6  D002               	goto	l2350
  3716  0022F8  D061               	goto	l2396
  3717  0022FA  D07C               	goto	l579
  3718  0022FC                     l2350:
  3719  0022FC  3406               	rlcf	__div_to_l_@f2+2,w,c
  3720  0022FE  3407               	rlcf	__div_to_l_@f2+3,w,c
  3721  002300  6E0B               	movwf	__div_to_l_@cntr,c
  3722  002302  500B               	movf	__div_to_l_@cntr,w,c
  3723  002304  A4D8               	btfss	status,2,c
  3724  002306  D002               	goto	l2356
  3725  002308  D059               	goto	l2396
  3726  00230A  D074               	goto	l579
  3727  00230C                     l2356:
  3728  00230C  8E03               	bsf	__div_to_l_@f1+2,7,c
  3729  00230E  0EFF               	movlw	255
  3730  002310  1601               	andwf	__div_to_l_@f1,f,c
  3731  002312  0EFF               	movlw	255
  3732  002314  1602               	andwf	__div_to_l_@f1+1,f,c
  3733  002316  0EFF               	movlw	255
  3734  002318  1603               	andwf	__div_to_l_@f1+2,f,c
  3735  00231A  0E00               	movlw	0
  3736  00231C  1604               	andwf	__div_to_l_@f1+3,f,c
  3737  00231E  8E06               	bsf	__div_to_l_@f2+2,7,c
  3738  002320  0EFF               	movlw	255
  3739  002322  1604               	andwf	__div_to_l_@f2,f,c
  3740  002324  0EFF               	movlw	255
  3741  002326  1605               	andwf	__div_to_l_@f2+1,f,c
  3742  002328  0EFF               	movlw	255
  3743  00232A  1606               	andwf	__div_to_l_@f2+2,f,c
  3744  00232C  0E00               	movlw	0
  3745  00232E  1607               	andwf	__div_to_l_@f2+3,f,c
  3746  002330  0E00               	movlw	0
  3747  002332  6E07               	movwf	__div_to_l_@quot,c
  3748  002334  0E00               	movlw	0
  3749  002336  6E08               	movwf	__div_to_l_@quot+1,c
  3750  002338  0E00               	movlw	0
  3751  00233A  6E09               	movwf	__div_to_l_@quot+2,c
  3752  00233C  0E00               	movlw	0
  3753  00233E  6E0A               	movwf	__div_to_l_@quot+3,c
  3754  002340  0E7F               	movlw	127
  3755  002342  5E0C               	subwf	__div_to_l_@exp1,f,c
  3756  002344  500B               	movf	__div_to_l_@cntr,w,c
  3757  002346  0FA0               	addlw	160
  3758  002348  5E0C               	subwf	__div_to_l_@exp1,f,c
  3759  00234A  0E20               	movlw	32
  3760  00234C  6E0B               	movwf	__div_to_l_@cntr,c
  3761  00234E  D000               	goto	l2370
  3762  002350                     l2370:
  3763  002350  90D8               	bcf	status,0,c
  3764  002352  3607               	rlcf	__div_to_l_@quot,f,c
  3765  002354  3608               	rlcf	__div_to_l_@quot+1,f,c
  3766  002356  3609               	rlcf	__div_to_l_@quot+2,f,c
  3767  002358  360A               	rlcf	__div_to_l_@quot+3,f,c
  3768  00235A  5004               	movf	__div_to_l_@f2,w,c
  3769  00235C  5C01               	subwf	__div_to_l_@f1,w,c
  3770  00235E  5005               	movf	__div_to_l_@f2+1,w,c
  3771  002360  5802               	subwfb	__div_to_l_@f1+1,w,c
  3772  002362  5006               	movf	__div_to_l_@f2+2,w,c
  3773  002364  5803               	subwfb	__div_to_l_@f1+2,w,c
  3774  002366  5007               	movf	__div_to_l_@f2+3,w,c
  3775  002368  5804               	subwfb	__div_to_l_@f1+3,w,c
  3776  00236A  A0D8               	btfss	status,0,c
  3777  00236C  D00A               	goto	l2378
  3778  00236E  5004               	movf	__div_to_l_@f2,w,c
  3779  002370  5E01               	subwf	__div_to_l_@f1,f,c
  3780  002372  5005               	movf	__div_to_l_@f2+1,w,c
  3781  002374  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3782  002376  5006               	movf	__div_to_l_@f2+2,w,c
  3783  002378  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3784  00237A  5007               	movf	__div_to_l_@f2+3,w,c
  3785  00237C  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3786  00237E  8007               	bsf	__div_to_l_@quot,0,c
  3787  002380  D000               	goto	l2378
  3788  002382                     l2378:
  3789  002382  90D8               	bcf	status,0,c
  3790  002384  3601               	rlcf	__div_to_l_@f1,f,c
  3791  002386  3602               	rlcf	__div_to_l_@f1+1,f,c
  3792  002388  3603               	rlcf	__div_to_l_@f1+2,f,c
  3793  00238A  3604               	rlcf	__div_to_l_@f1+3,f,c
  3794  00238C  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3795  00238E  D7E0               	goto	l2370
  3796  002390  D000               	goto	l2382
  3797  002392                     l2382:
  3798  002392  AE0C               	btfss	__div_to_l_@exp1,7,c
  3799  002394  D010               	goto	l2394
  3800  002396  500C               	movf	__div_to_l_@exp1,w,c
  3801  002398  0A80               	xorlw	128
  3802  00239A  0F9F               	addlw	159
  3803  00239C  B0D8               	btfsc	status,0,c
  3804  00239E  D003               	goto	l2390
  3805  0023A0  D00D               	goto	l2396
  3806  0023A2  D028               	goto	l579
  3807  0023A4  D000               	goto	l2390
  3808  0023A6                     l2390:
  3809  0023A6  90D8               	bcf	status,0,c
  3810  0023A8  320A               	rrcf	__div_to_l_@quot+3,f,c
  3811  0023AA  3209               	rrcf	__div_to_l_@quot+2,f,c
  3812  0023AC  3208               	rrcf	__div_to_l_@quot+1,f,c
  3813  0023AE  3207               	rrcf	__div_to_l_@quot,f,c
  3814  0023B0  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3815  0023B2  D7F9               	goto	l2390
  3816  0023B4  D017               	goto	l588
  3817  0023B6                     l2394:
  3818  0023B6  0E1F               	movlw	31
  3819  0023B8  640C               	cpfsgt	__div_to_l_@exp1,c
  3820  0023BA  D011               	goto	l2402
  3821  0023BC                     l2396:
  3822  0023BC  0E00               	movlw	0
  3823  0023BE  6E01               	movwf	?__div_to_l_,c
  3824  0023C0  0E00               	movlw	0
  3825  0023C2  6E02               	movwf	?__div_to_l_+1,c
  3826  0023C4  0E00               	movlw	0
  3827  0023C6  6E03               	movwf	?__div_to_l_+2,c
  3828  0023C8  0E00               	movlw	0
  3829  0023CA  6E04               	movwf	?__div_to_l_+3,c
  3830  0023CC  D013               	goto	l579
  3831  0023CE  D007               	goto	l2402
  3832  0023D0                     l2400:
  3833  0023D0  90D8               	bcf	status,0,c
  3834  0023D2  3607               	rlcf	__div_to_l_@quot,f,c
  3835  0023D4  3608               	rlcf	__div_to_l_@quot+1,f,c
  3836  0023D6  3609               	rlcf	__div_to_l_@quot+2,f,c
  3837  0023D8  360A               	rlcf	__div_to_l_@quot+3,f,c
  3838  0023DA  060C               	decf	__div_to_l_@exp1,f,c
  3839  0023DC  D000               	goto	l2402
  3840  0023DE                     l2402:
  3841  0023DE  500C               	movf	__div_to_l_@exp1,w,c
  3842  0023E0  A4D8               	btfss	status,2,c
  3843  0023E2  D7F6               	goto	l2400
  3844  0023E4                     l588:
  3845  0023E4  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3846  0023E8  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3847  0023EC  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3848  0023F0  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3849  0023F4                     l579:
  3850  0023F4  0012               	return		;funcret
  3851  0023F6                     __end_of__div_to_l_:
  3852                           	opt stack 0
  3853                           tblptru	equ	0xFF8
  3854                           tblptrh	equ	0xFF7
  3855                           tblptrl	equ	0xFF6
  3856                           tablat	equ	0xFF5
  3857                           prodh	equ	0xFF4
  3858                           prodl	equ	0xFF3
  3859                           postinc0	equ	0xFEE
  3860                           wreg	equ	0xFE8
  3861                           postdec1	equ	0xFE5
  3862                           fsr1l	equ	0xFE1
  3863                           postinc2	equ	0xFDE
  3864                           postdec2	equ	0xFDD
  3865                           fsr2h	equ	0xFDA
  3866                           fsr2l	equ	0xFD9
  3867                           status	equ	0xFD8
  3868                           
  3869 ;; *************** function ___lltoft *****************
  3870 ;; Defined at:
  3871 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  3872 ;; Parameters:    Size  Location     Type
  3873 ;;  c               4    8[COMRAM] unsigned long 
  3874 ;; Auto vars:     Size  Location     Type
  3875 ;;  exp             1   16[COMRAM] unsigned char 
  3876 ;; Return value:  Size  Location     Type
  3877 ;;                  3    8[COMRAM] float 
  3878 ;; Registers used:
  3879 ;;		wreg, status,2, status,0, cstack
  3880 ;; Tracked objects:
  3881 ;;		On entry : 0/0
  3882 ;;		On exit  : 0/0
  3883 ;;		Unchanged: 0/0
  3884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3887 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3888 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3889 ;;Total ram usage:        9 bytes
  3890 ;; Hardware stack levels used:    1
  3891 ;; Hardware stack levels required when called:    1
  3892 ;; This function calls:
  3893 ;;		___ftpack
  3894 ;; This function is called by:
  3895 ;;		_printf
  3896 ;; This function uses a non-reentrant model
  3897 ;;
  3898                           
  3899                           	psect	text10
  3900  002BA2                     __ptext10:
  3901                           	opt stack 0
  3902  002BA2                     ___lltoft:
  3903                           	opt stack 28
  3904                           
  3905                           ;incstack = 0
  3906  002BA2  0E8E               	movlw	142
  3907  002BA4  6E11               	movwf	___lltoft@exp,c
  3908  002BA6  D007               	goto	l2522
  3909  002BA8                     l2520:
  3910  002BA8  90D8               	bcf	status,0,c
  3911  002BAA  320C               	rrcf	___lltoft@c+3,f,c
  3912  002BAC  320B               	rrcf	___lltoft@c+2,f,c
  3913  002BAE  320A               	rrcf	___lltoft@c+1,f,c
  3914  002BB0  3209               	rrcf	___lltoft@c,f,c
  3915  002BB2  2A11               	incf	___lltoft@exp,f,c
  3916  002BB4  D000               	goto	l2522
  3917  002BB6                     l2522:
  3918  002BB6  0E00               	movlw	0
  3919  002BB8  1409               	andwf	___lltoft@c,w,c
  3920  002BBA  6E0D               	movwf	??___lltoft& (0+255),c
  3921  002BBC  0E00               	movlw	0
  3922  002BBE  140A               	andwf	___lltoft@c+1,w,c
  3923  002BC0  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3924  002BC2  0E00               	movlw	0
  3925  002BC4  140B               	andwf	___lltoft@c+2,w,c
  3926  002BC6  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3927  002BC8  0EFF               	movlw	255
  3928  002BCA  140C               	andwf	___lltoft@c+3,w,c
  3929  002BCC  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3930  002BCE  500D               	movf	??___lltoft,w,c
  3931  002BD0  100E               	iorwf	??___lltoft+1,w,c
  3932  002BD2  100F               	iorwf	??___lltoft+2,w,c
  3933  002BD4  1010               	iorwf	??___lltoft+3,w,c
  3934  002BD6  A4D8               	btfss	status,2,c
  3935  002BD8  D7E7               	goto	l2520
  3936  002BDA  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3937  002BDE  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3938  002BE2  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3939  002BE6  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3940  002BEA  0E00               	movlw	0
  3941  002BEC  6E05               	movwf	___ftpack@sign,c
  3942  002BEE  EC5B  F013         	call	___ftpack	;wreg free
  3943  002BF2  C001  F009         	movff	?___ftpack,?___lltoft
  3944  002BF6  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3945  002BFA  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3946  002BFE  D000               	goto	l814
  3947  002C00                     l814:
  3948  002C00  0012               	return		;funcret
  3949  002C02                     __end_of___lltoft:
  3950                           	opt stack 0
  3951                           tblptru	equ	0xFF8
  3952                           tblptrh	equ	0xFF7
  3953                           tblptrl	equ	0xFF6
  3954                           tablat	equ	0xFF5
  3955                           prodh	equ	0xFF4
  3956                           prodl	equ	0xFF3
  3957                           postinc0	equ	0xFEE
  3958                           wreg	equ	0xFE8
  3959                           postdec1	equ	0xFE5
  3960                           fsr1l	equ	0xFE1
  3961                           postinc2	equ	0xFDE
  3962                           postdec2	equ	0xFDD
  3963                           fsr2h	equ	0xFDA
  3964                           fsr2l	equ	0xFD9
  3965                           status	equ	0xFD8
  3966                           
  3967 ;; *************** function ___llmod *****************
  3968 ;; Defined at:
  3969 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3970 ;; Parameters:    Size  Location     Type
  3971 ;;  dividend        4   13[COMRAM] unsigned long 
  3972 ;;  divisor         4   17[COMRAM] unsigned long 
  3973 ;; Auto vars:     Size  Location     Type
  3974 ;;  counter         1   21[COMRAM] unsigned char 
  3975 ;; Return value:  Size  Location     Type
  3976 ;;                  4   13[COMRAM] unsigned long 
  3977 ;; Registers used:
  3978 ;;		wreg, status,2, status,0
  3979 ;; Tracked objects:
  3980 ;;		On entry : 0/0
  3981 ;;		On exit  : 0/0
  3982 ;;		Unchanged: 0/0
  3983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3984 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3987 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3988 ;;Total ram usage:        9 bytes
  3989 ;; Hardware stack levels used:    1
  3990 ;; This function calls:
  3991 ;;		Nothing
  3992 ;; This function is called by:
  3993 ;;		_printf
  3994 ;; This function uses a non-reentrant model
  3995 ;;
  3996                           
  3997                           	psect	text11
  3998  002A56                     __ptext11:
  3999                           	opt stack 0
  4000  002A56                     ___llmod:
  4001                           	opt stack 29
  4002                           
  4003                           ;incstack = 0
  4004  002A56  5012               	movf	___llmod@divisor,w,c
  4005  002A58  1013               	iorwf	___llmod@divisor+1,w,c
  4006  002A5A  1014               	iorwf	___llmod@divisor+2,w,c
  4007  002A5C  1015               	iorwf	___llmod@divisor+3,w,c
  4008  002A5E  B4D8               	btfsc	status,2,c
  4009  002A60  D029               	goto	l794
  4010  002A62  0E01               	movlw	1
  4011  002A64  6E16               	movwf	___llmod@counter,c
  4012  002A66  D007               	goto	l2508
  4013  002A68                     l2506:
  4014  002A68  90D8               	bcf	status,0,c
  4015  002A6A  3612               	rlcf	___llmod@divisor,f,c
  4016  002A6C  3613               	rlcf	___llmod@divisor+1,f,c
  4017  002A6E  3614               	rlcf	___llmod@divisor+2,f,c
  4018  002A70  3615               	rlcf	___llmod@divisor+3,f,c
  4019  002A72  2A16               	incf	___llmod@counter,f,c
  4020  002A74  D000               	goto	l2508
  4021  002A76                     l2508:
  4022  002A76  BE15               	btfsc	___llmod@divisor+3,7,c
  4023  002A78  D002               	goto	l2510
  4024  002A7A  D7F6               	goto	l2506
  4025  002A7C  D000               	goto	l2510
  4026  002A7E                     l2510:
  4027  002A7E  5012               	movf	___llmod@divisor,w,c
  4028  002A80  5C0E               	subwf	___llmod@dividend,w,c
  4029  002A82  5013               	movf	___llmod@divisor+1,w,c
  4030  002A84  580F               	subwfb	___llmod@dividend+1,w,c
  4031  002A86  5014               	movf	___llmod@divisor+2,w,c
  4032  002A88  5810               	subwfb	___llmod@dividend+2,w,c
  4033  002A8A  5015               	movf	___llmod@divisor+3,w,c
  4034  002A8C  5811               	subwfb	___llmod@dividend+3,w,c
  4035  002A8E  A0D8               	btfss	status,0,c
  4036  002A90  D009               	goto	l2514
  4037  002A92  5012               	movf	___llmod@divisor,w,c
  4038  002A94  5E0E               	subwf	___llmod@dividend,f,c
  4039  002A96  5013               	movf	___llmod@divisor+1,w,c
  4040  002A98  5A0F               	subwfb	___llmod@dividend+1,f,c
  4041  002A9A  5014               	movf	___llmod@divisor+2,w,c
  4042  002A9C  5A10               	subwfb	___llmod@dividend+2,f,c
  4043  002A9E  5015               	movf	___llmod@divisor+3,w,c
  4044  002AA0  5A11               	subwfb	___llmod@dividend+3,f,c
  4045  002AA2  D000               	goto	l2514
  4046  002AA4                     l2514:
  4047  002AA4  90D8               	bcf	status,0,c
  4048  002AA6  3215               	rrcf	___llmod@divisor+3,f,c
  4049  002AA8  3214               	rrcf	___llmod@divisor+2,f,c
  4050  002AAA  3213               	rrcf	___llmod@divisor+1,f,c
  4051  002AAC  3212               	rrcf	___llmod@divisor,f,c
  4052  002AAE  2E16               	decfsz	___llmod@counter,f,c
  4053  002AB0  D7E6               	goto	l2510
  4054  002AB2  D000               	goto	l794
  4055  002AB4                     l794:
  4056  002AB4  C00E  F00E         	movff	___llmod@dividend,?___llmod
  4057  002AB8  C00F  F00F         	movff	___llmod@dividend+1,?___llmod+1
  4058  002ABC  C010  F010         	movff	___llmod@dividend+2,?___llmod+2
  4059  002AC0  C011  F011         	movff	___llmod@dividend+3,?___llmod+3
  4060  002AC4  0012               	return		;funcret
  4061  002AC6                     __end_of___llmod:
  4062                           	opt stack 0
  4063                           tblptru	equ	0xFF8
  4064                           tblptrh	equ	0xFF7
  4065                           tblptrl	equ	0xFF6
  4066                           tablat	equ	0xFF5
  4067                           prodh	equ	0xFF4
  4068                           prodl	equ	0xFF3
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           postdec1	equ	0xFE5
  4072                           fsr1l	equ	0xFE1
  4073                           postinc2	equ	0xFDE
  4074                           postdec2	equ	0xFDD
  4075                           fsr2h	equ	0xFDA
  4076                           fsr2l	equ	0xFD9
  4077                           status	equ	0xFD8
  4078                           
  4079 ;; *************** function ___lldiv *****************
  4080 ;; Defined at:
  4081 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4082 ;; Parameters:    Size  Location     Type
  4083 ;;  dividend        4    0[COMRAM] unsigned long 
  4084 ;;  divisor         4    4[COMRAM] unsigned long 
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;  quotient        4    8[COMRAM] unsigned long 
  4087 ;;  counter         1   12[COMRAM] unsigned char 
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  4    0[COMRAM] unsigned long 
  4090 ;; Registers used:
  4091 ;;		wreg, status,2, status,0
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4097 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4098 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4100 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4101 ;;Total ram usage:       13 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; This function calls:
  4104 ;;		Nothing
  4105 ;; This function is called by:
  4106 ;;		_printf
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text12
  4111  002948                     __ptext12:
  4112                           	opt stack 0
  4113  002948                     ___lldiv:
  4114                           	opt stack 29
  4115                           
  4116                           ;incstack = 0
  4117  002948  0E00               	movlw	0
  4118  00294A  6E09               	movwf	___lldiv@quotient,c
  4119  00294C  0E00               	movlw	0
  4120  00294E  6E0A               	movwf	___lldiv@quotient+1,c
  4121  002950  0E00               	movlw	0
  4122  002952  6E0B               	movwf	___lldiv@quotient+2,c
  4123  002954  0E00               	movlw	0
  4124  002956  6E0C               	movwf	___lldiv@quotient+3,c
  4125  002958  5005               	movf	___lldiv@divisor,w,c
  4126  00295A  1006               	iorwf	___lldiv@divisor+1,w,c
  4127  00295C  1007               	iorwf	___lldiv@divisor+2,w,c
  4128  00295E  1008               	iorwf	___lldiv@divisor+3,w,c
  4129  002960  B4D8               	btfsc	status,2,c
  4130  002962  D02F               	goto	l784
  4131  002964  0E01               	movlw	1
  4132  002966  6E0D               	movwf	___lldiv@counter,c
  4133  002968  D007               	goto	l2488
  4134  00296A                     l2486:
  4135  00296A  90D8               	bcf	status,0,c
  4136  00296C  3605               	rlcf	___lldiv@divisor,f,c
  4137  00296E  3606               	rlcf	___lldiv@divisor+1,f,c
  4138  002970  3607               	rlcf	___lldiv@divisor+2,f,c
  4139  002972  3608               	rlcf	___lldiv@divisor+3,f,c
  4140  002974  2A0D               	incf	___lldiv@counter,f,c
  4141  002976  D000               	goto	l2488
  4142  002978                     l2488:
  4143  002978  BE08               	btfsc	___lldiv@divisor+3,7,c
  4144  00297A  D002               	goto	l2490
  4145  00297C  D7F6               	goto	l2486
  4146  00297E  D000               	goto	l2490
  4147  002980                     l2490:
  4148  002980  90D8               	bcf	status,0,c
  4149  002982  3609               	rlcf	___lldiv@quotient,f,c
  4150  002984  360A               	rlcf	___lldiv@quotient+1,f,c
  4151  002986  360B               	rlcf	___lldiv@quotient+2,f,c
  4152  002988  360C               	rlcf	___lldiv@quotient+3,f,c
  4153  00298A  5005               	movf	___lldiv@divisor,w,c
  4154  00298C  5C01               	subwf	___lldiv@dividend,w,c
  4155  00298E  5006               	movf	___lldiv@divisor+1,w,c
  4156  002990  5802               	subwfb	___lldiv@dividend+1,w,c
  4157  002992  5007               	movf	___lldiv@divisor+2,w,c
  4158  002994  5803               	subwfb	___lldiv@dividend+2,w,c
  4159  002996  5008               	movf	___lldiv@divisor+3,w,c
  4160  002998  5804               	subwfb	___lldiv@dividend+3,w,c
  4161  00299A  A0D8               	btfss	status,0,c
  4162  00299C  D00A               	goto	l2498
  4163  00299E  5005               	movf	___lldiv@divisor,w,c
  4164  0029A0  5E01               	subwf	___lldiv@dividend,f,c
  4165  0029A2  5006               	movf	___lldiv@divisor+1,w,c
  4166  0029A4  5A02               	subwfb	___lldiv@dividend+1,f,c
  4167  0029A6  5007               	movf	___lldiv@divisor+2,w,c
  4168  0029A8  5A03               	subwfb	___lldiv@dividend+2,f,c
  4169  0029AA  5008               	movf	___lldiv@divisor+3,w,c
  4170  0029AC  5A04               	subwfb	___lldiv@dividend+3,f,c
  4171  0029AE  8009               	bsf	___lldiv@quotient,0,c
  4172  0029B0  D000               	goto	l2498
  4173  0029B2                     l2498:
  4174  0029B2  90D8               	bcf	status,0,c
  4175  0029B4  3208               	rrcf	___lldiv@divisor+3,f,c
  4176  0029B6  3207               	rrcf	___lldiv@divisor+2,f,c
  4177  0029B8  3206               	rrcf	___lldiv@divisor+1,f,c
  4178  0029BA  3205               	rrcf	___lldiv@divisor,f,c
  4179  0029BC  2E0D               	decfsz	___lldiv@counter,f,c
  4180  0029BE  D7E0               	goto	l2490
  4181  0029C0  D000               	goto	l784
  4182  0029C2                     l784:
  4183  0029C2  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4184  0029C6  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4185  0029CA  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4186  0029CE  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4187  0029D2  0012               	return		;funcret
  4188  0029D4                     __end_of___lldiv:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           postinc0	equ	0xFEE
  4197                           wreg	equ	0xFE8
  4198                           postdec1	equ	0xFE5
  4199                           fsr1l	equ	0xFE1
  4200                           postinc2	equ	0xFDE
  4201                           postdec2	equ	0xFDD
  4202                           fsr2h	equ	0xFDA
  4203                           fsr2l	equ	0xFD9
  4204                           status	equ	0xFD8
  4205                           
  4206 ;; *************** function ___fttol *****************
  4207 ;; Defined at:
  4208 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4209 ;; Parameters:    Size  Location     Type
  4210 ;;  f1              3   42[COMRAM] float 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  lval            4   52[COMRAM] unsigned long 
  4213 ;;  exp1            1   56[COMRAM] unsigned char 
  4214 ;;  sign1           1   51[COMRAM] unsigned char 
  4215 ;; Return value:  Size  Location     Type
  4216 ;;                  4   42[COMRAM] long 
  4217 ;; Registers used:
  4218 ;;		wreg, status,2, status,0
  4219 ;; Tracked objects:
  4220 ;;		On entry : 0/0
  4221 ;;		On exit  : 0/0
  4222 ;;		Unchanged: 0/0
  4223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4224 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4225 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;Total ram usage:       15 bytes
  4229 ;; Hardware stack levels used:    1
  4230 ;; This function calls:
  4231 ;;		Nothing
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;;		_printf
  4235 ;; This function uses a non-reentrant model
  4236 ;;
  4237                           
  4238                           	psect	text13
  4239  0024EE                     __ptext13:
  4240                           	opt stack 0
  4241  0024EE                     ___fttol:
  4242                           	opt stack 29
  4243                           
  4244                           ;incstack = 0
  4245  0024EE  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  4246  0024F2  6A30               	clrf	(??___fttol+1)& (0+255),c
  4247  0024F4  6A31               	clrf	(??___fttol+2)& (0+255),c
  4248  0024F6  342C               	rlcf	___fttol@f1+1,w,c
  4249  0024F8  362F               	rlcf	??___fttol& (0+255),f,c
  4250  0024FA  E301               	bnc	u2451
  4251  0024FC  8030               	bsf	(??___fttol+1)& (0+255),0,c
  4252  0024FE                     u2451:
  4253  0024FE  502F               	movf	??___fttol,w,c
  4254  002500  6E39               	movwf	___fttol@exp1,c
  4255  002502  5039               	movf	___fttol@exp1,w,c
  4256  002504  A4D8               	btfss	status,2,c
  4257  002506  D002               	goto	l2440
  4258  002508  D039               	goto	l2464
  4259  00250A  D063               	goto	l745
  4260  00250C                     l2440:
  4261  00250C  0E17               	movlw	23
  4262  00250E  6E2F               	movwf	??___fttol& (0+255),c
  4263  002510  C02B  F030         	movff	___fttol@f1,??___fttol+1
  4264  002514  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  4265  002518  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  4266  00251C  282F               	incf	??___fttol,w,c
  4267  00251E  6E33               	movwf	(??___fttol+4)& (0+255),c
  4268  002520  D004               	goto	u2470
  4269  002522                     u2475:
  4270  002522  90D8               	bcf	status,0,c
  4271  002524  3232               	rrcf	??___fttol+3,f,c
  4272  002526  3231               	rrcf	??___fttol+2,f,c
  4273  002528  3230               	rrcf	??___fttol+1,f,c
  4274  00252A                     u2470:
  4275  00252A  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  4276  00252C  D7FA               	goto	u2475
  4277  00252E  5030               	movf	??___fttol+1,w,c
  4278  002530  6E34               	movwf	___fttol@sign1,c
  4279  002532  8E2C               	bsf	___fttol@f1+1,7,c
  4280  002534  0EFF               	movlw	255
  4281  002536  162B               	andwf	___fttol@f1,f,c
  4282  002538  0EFF               	movlw	255
  4283  00253A  162C               	andwf	___fttol@f1+1,f,c
  4284  00253C  0E00               	movlw	0
  4285  00253E  162D               	andwf	___fttol@f1+2,f,c
  4286  002540  502B               	movf	___fttol@f1,w,c
  4287  002542  6E35               	movwf	___fttol@lval,c
  4288  002544  502C               	movf	___fttol@f1+1,w,c
  4289  002546  6E36               	movwf	___fttol@lval+1,c
  4290  002548  502D               	movf	___fttol@f1+2,w,c
  4291  00254A  6E37               	movwf	___fttol@lval+2,c
  4292  00254C  6A38               	clrf	___fttol@lval+3,c
  4293  00254E  0E8E               	movlw	142
  4294  002550  5E39               	subwf	___fttol@exp1,f,c
  4295  002552  AE39               	btfss	___fttol@exp1,7,c
  4296  002554  D010               	goto	l2462
  4297  002556  5039               	movf	___fttol@exp1,w,c
  4298  002558  0A80               	xorlw	128
  4299  00255A  0F8F               	addlw	143
  4300  00255C  B0D8               	btfsc	status,0,c
  4301  00255E  D003               	goto	l2458
  4302  002560  D00D               	goto	l2464
  4303  002562  D037               	goto	l745
  4304  002564  D000               	goto	l2458
  4305  002566                     l2458:
  4306  002566  90D8               	bcf	status,0,c
  4307  002568  3238               	rrcf	___fttol@lval+3,f,c
  4308  00256A  3237               	rrcf	___fttol@lval+2,f,c
  4309  00256C  3236               	rrcf	___fttol@lval+1,f,c
  4310  00256E  3235               	rrcf	___fttol@lval,f,c
  4311  002570  3E39               	incfsz	___fttol@exp1,f,c
  4312  002572  D7F9               	goto	l2458
  4313  002574  D019               	goto	l2472
  4314  002576                     l2462:
  4315  002576  0E17               	movlw	23
  4316  002578  6439               	cpfsgt	___fttol@exp1,c
  4317  00257A  D011               	goto	l2470
  4318  00257C                     l2464:
  4319  00257C  0E00               	movlw	0
  4320  00257E  6E2B               	movwf	?___fttol,c
  4321  002580  0E00               	movlw	0
  4322  002582  6E2C               	movwf	?___fttol+1,c
  4323  002584  0E00               	movlw	0
  4324  002586  6E2D               	movwf	?___fttol+2,c
  4325  002588  0E00               	movlw	0
  4326  00258A  6E2E               	movwf	?___fttol+3,c
  4327  00258C  D022               	goto	l745
  4328  00258E  D007               	goto	l2470
  4329  002590                     l2468:
  4330  002590  90D8               	bcf	status,0,c
  4331  002592  3635               	rlcf	___fttol@lval,f,c
  4332  002594  3636               	rlcf	___fttol@lval+1,f,c
  4333  002596  3637               	rlcf	___fttol@lval+2,f,c
  4334  002598  3638               	rlcf	___fttol@lval+3,f,c
  4335  00259A  0639               	decf	___fttol@exp1,f,c
  4336  00259C  D000               	goto	l2470
  4337  00259E                     l2470:
  4338  00259E  5039               	movf	___fttol@exp1,w,c
  4339  0025A0  B4D8               	btfsc	status,2,c
  4340  0025A2  D002               	goto	l2472
  4341  0025A4  D7F5               	goto	l2468
  4342  0025A6  D000               	goto	l2472
  4343  0025A8                     l2472:
  4344  0025A8  5034               	movf	___fttol@sign1,w,c
  4345  0025AA  B4D8               	btfsc	status,2,c
  4346  0025AC  D009               	goto	l2476
  4347  0025AE  1E38               	comf	___fttol@lval+3,f,c
  4348  0025B0  1E37               	comf	___fttol@lval+2,f,c
  4349  0025B2  1E36               	comf	___fttol@lval+1,f,c
  4350  0025B4  6C35               	negf	___fttol@lval,c
  4351  0025B6  0E00               	movlw	0
  4352  0025B8  2236               	addwfc	___fttol@lval+1,f,c
  4353  0025BA  2237               	addwfc	___fttol@lval+2,f,c
  4354  0025BC  2238               	addwfc	___fttol@lval+3,f,c
  4355  0025BE  D000               	goto	l2476
  4356  0025C0                     l2476:
  4357  0025C0  C035  F02B         	movff	___fttol@lval,?___fttol
  4358  0025C4  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  4359  0025C8  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  4360  0025CC  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  4361  0025D0  D000               	goto	l745
  4362  0025D2                     l745:
  4363  0025D2  0012               	return		;funcret
  4364  0025D4                     __end_of___fttol:
  4365                           	opt stack 0
  4366                           tblptru	equ	0xFF8
  4367                           tblptrh	equ	0xFF7
  4368                           tblptrl	equ	0xFF6
  4369                           tablat	equ	0xFF5
  4370                           prodh	equ	0xFF4
  4371                           prodl	equ	0xFF3
  4372                           postinc0	equ	0xFEE
  4373                           wreg	equ	0xFE8
  4374                           postdec1	equ	0xFE5
  4375                           fsr1l	equ	0xFE1
  4376                           postinc2	equ	0xFDE
  4377                           postdec2	equ	0xFDD
  4378                           fsr2h	equ	0xFDA
  4379                           fsr2l	equ	0xFD9
  4380                           status	equ	0xFD8
  4381                           
  4382 ;; *************** function ___ftsub *****************
  4383 ;; Defined at:
  4384 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;  f1              3   57[COMRAM] float 
  4387 ;;  f2              3   60[COMRAM] float 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;		None
  4390 ;; Return value:  Size  Location     Type
  4391 ;;                  3   57[COMRAM] float 
  4392 ;; Registers used:
  4393 ;;		wreg, status,2, status,0, cstack
  4394 ;; Tracked objects:
  4395 ;;		On entry : 0/0
  4396 ;;		On exit  : 0/0
  4397 ;;		Unchanged: 0/0
  4398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4399 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4402 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4403 ;;Total ram usage:        6 bytes
  4404 ;; Hardware stack levels used:    1
  4405 ;; Hardware stack levels required when called:    2
  4406 ;; This function calls:
  4407 ;;		___ftadd
  4408 ;; This function is called by:
  4409 ;;		_printf
  4410 ;; This function uses a non-reentrant model
  4411 ;;
  4412                           
  4413                           	psect	text14
  4414  002C56                     __ptext14:
  4415                           	opt stack 0
  4416  002C56                     ___ftsub:
  4417                           	opt stack 27
  4418                           
  4419                           ;incstack = 0
  4420  002C56  503D               	movf	___ftsub@f2,w,c
  4421  002C58  103E               	iorwf	___ftsub@f2+1,w,c
  4422  002C5A  103F               	iorwf	___ftsub@f2+2,w,c
  4423  002C5C  B4D8               	btfsc	status,2,c
  4424  002C5E  D007               	goto	l2408
  4425  002C60  0E00               	movlw	0
  4426  002C62  1A3D               	xorwf	___ftsub@f2,f,c
  4427  002C64  0E00               	movlw	0
  4428  002C66  1A3E               	xorwf	___ftsub@f2+1,f,c
  4429  002C68  0E80               	movlw	128
  4430  002C6A  1A3F               	xorwf	___ftsub@f2+2,f,c
  4431  002C6C  D000               	goto	l2408
  4432  002C6E                     l2408:
  4433  002C6E  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  4434  002C72  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  4435  002C76  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  4436  002C7A  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  4437  002C7E  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  4438  002C82  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  4439  002C86  EC0C  F010         	call	___ftadd	;wreg free
  4440  002C8A  C02E  F03A         	movff	?___ftadd,?___ftsub
  4441  002C8E  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  4442  002C92  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  4443  002C96  D000               	goto	l741
  4444  002C98                     l741:
  4445  002C98  0012               	return		;funcret
  4446  002C9A                     __end_of___ftsub:
  4447                           	opt stack 0
  4448                           tblptru	equ	0xFF8
  4449                           tblptrh	equ	0xFF7
  4450                           tblptrl	equ	0xFF6
  4451                           tablat	equ	0xFF5
  4452                           prodh	equ	0xFF4
  4453                           prodl	equ	0xFF3
  4454                           postinc0	equ	0xFEE
  4455                           wreg	equ	0xFE8
  4456                           postdec1	equ	0xFE5
  4457                           fsr1l	equ	0xFE1
  4458                           postinc2	equ	0xFDE
  4459                           postdec2	equ	0xFDD
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function ___ftadd *****************
  4465 ;; Defined at:
  4466 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;  f1              3   45[COMRAM] float 
  4469 ;;  f2              3   48[COMRAM] float 
  4470 ;; Auto vars:     Size  Location     Type
  4471 ;;  exp1            1   56[COMRAM] unsigned char 
  4472 ;;  exp2            1   55[COMRAM] unsigned char 
  4473 ;;  sign            1   54[COMRAM] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  3   45[COMRAM] float 
  4476 ;; Registers used:
  4477 ;;		wreg, status,2, status,0, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4483 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;Total ram usage:       12 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    1
  4490 ;; This function calls:
  4491 ;;		___ftpack
  4492 ;; This function is called by:
  4493 ;;		_main
  4494 ;;		_printf
  4495 ;;		___ftsub
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text15
  4500  002018                     __ptext15:
  4501                           	opt stack 0
  4502  002018                     ___ftadd:
  4503                           	opt stack 27
  4504                           
  4505                           ;incstack = 0
  4506  002018  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  4507  00201C  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4508  00201E  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4509  002020  342F               	rlcf	___ftadd@f1+1,w,c
  4510  002022  3634               	rlcf	??___ftadd& (0+255),f,c
  4511  002024  E301               	bnc	u1671
  4512  002026  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4513  002028                     u1671:
  4514  002028  5034               	movf	??___ftadd,w,c
  4515  00202A  6E39               	movwf	___ftadd@exp1,c
  4516  00202C  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  4517  002030  6A35               	clrf	(??___ftadd+1)& (0+255),c
  4518  002032  6A36               	clrf	(??___ftadd+2)& (0+255),c
  4519  002034  3432               	rlcf	___ftadd@f2+1,w,c
  4520  002036  3634               	rlcf	??___ftadd& (0+255),f,c
  4521  002038  E301               	bnc	u1681
  4522  00203A  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  4523  00203C                     u1681:
  4524  00203C  5034               	movf	??___ftadd,w,c
  4525  00203E  6E38               	movwf	___ftadd@exp2,c
  4526  002040  5039               	movf	___ftadd@exp1,w,c
  4527  002042  B4D8               	btfsc	status,2,c
  4528  002044  D00B               	goto	l660
  4529  002046  5038               	movf	___ftadd@exp2,w,c
  4530  002048  5C39               	subwf	___ftadd@exp1,w,c
  4531  00204A  B0D8               	btfsc	status,0,c
  4532  00204C  D00E               	goto	l1984
  4533  00204E  5039               	movf	___ftadd@exp1,w,c
  4534  002050  0800               	sublw	0
  4535  002052  2438               	addwf	___ftadd@exp2,w,c
  4536  002054  6E34               	movwf	??___ftadd& (0+255),c
  4537  002056  0E18               	movlw	24
  4538  002058  6434               	cpfsgt	??___ftadd,c
  4539  00205A  D007               	goto	l1984
  4540  00205C                     l660:
  4541  00205C  C031  F02E         	movff	___ftadd@f2,?___ftadd
  4542  002060  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  4543  002064  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  4544  002068  D0B8               	goto	l661
  4545  00206A                     l1984:
  4546  00206A  5038               	movf	___ftadd@exp2,w,c
  4547  00206C  B4D8               	btfsc	status,2,c
  4548  00206E  D00B               	goto	l664
  4549  002070  5039               	movf	___ftadd@exp1,w,c
  4550  002072  5C38               	subwf	___ftadd@exp2,w,c
  4551  002074  B0D8               	btfsc	status,0,c
  4552  002076  D00E               	goto	l1990
  4553  002078  5038               	movf	___ftadd@exp2,w,c
  4554  00207A  0800               	sublw	0
  4555  00207C  2439               	addwf	___ftadd@exp1,w,c
  4556  00207E  6E34               	movwf	??___ftadd& (0+255),c
  4557  002080  0E18               	movlw	24
  4558  002082  6434               	cpfsgt	??___ftadd,c
  4559  002084  D007               	goto	l1990
  4560  002086                     l664:
  4561  002086  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  4562  00208A  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  4563  00208E  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  4564  002092  D0A3               	goto	l661
  4565  002094                     l1990:
  4566  002094  0E06               	movlw	6
  4567  002096  6E37               	movwf	___ftadd@sign,c
  4568  002098  AE30               	btfss	___ftadd@f1+2,7,c
  4569  00209A  D002               	goto	l1996
  4570  00209C  8E37               	bsf	___ftadd@sign,7,c
  4571  00209E  D000               	goto	l1996
  4572  0020A0                     l1996:
  4573  0020A0  BE33               	btfsc	___ftadd@f2+2,7,c
  4574  0020A2  8C37               	bsf	___ftadd@sign,6,c
  4575  0020A4  8E2F               	bsf	___ftadd@f1+1,7,c
  4576  0020A6  0EFF               	movlw	255
  4577  0020A8  162E               	andwf	___ftadd@f1,f,c
  4578  0020AA  0EFF               	movlw	255
  4579  0020AC  162F               	andwf	___ftadd@f1+1,f,c
  4580  0020AE  0E00               	movlw	0
  4581  0020B0  1630               	andwf	___ftadd@f1+2,f,c
  4582  0020B2  8E32               	bsf	___ftadd@f2+1,7,c
  4583  0020B4  0EFF               	movlw	255
  4584  0020B6  1631               	andwf	___ftadd@f2,f,c
  4585  0020B8  0EFF               	movlw	255
  4586  0020BA  1632               	andwf	___ftadd@f2+1,f,c
  4587  0020BC  0E00               	movlw	0
  4588  0020BE  1633               	andwf	___ftadd@f2+2,f,c
  4589  0020C0  5038               	movf	___ftadd@exp2,w,c
  4590  0020C2  5C39               	subwf	___ftadd@exp1,w,c
  4591  0020C4  B0D8               	btfsc	status,0,c
  4592  0020C6  D01E               	goto	l2016
  4593  0020C8                     l2006:
  4594  0020C8  90D8               	bcf	status,0,c
  4595  0020CA  3631               	rlcf	___ftadd@f2,f,c
  4596  0020CC  3632               	rlcf	___ftadd@f2+1,f,c
  4597  0020CE  3633               	rlcf	___ftadd@f2+2,f,c
  4598  0020D0  0638               	decf	___ftadd@exp2,f,c
  4599  0020D2  5039               	movf	___ftadd@exp1,w,c
  4600  0020D4  1838               	xorwf	___ftadd@exp2,w,c
  4601  0020D6  B4D8               	btfsc	status,2,c
  4602  0020D8  D00F               	goto	l2014
  4603  0020DA  0637               	decf	___ftadd@sign,f,c
  4604  0020DC  C037  F034         	movff	___ftadd@sign,??___ftadd
  4605  0020E0  0E07               	movlw	7
  4606  0020E2  1634               	andwf	??___ftadd,f,c
  4607  0020E4  B4D8               	btfsc	status,2,c
  4608  0020E6  D008               	goto	l2014
  4609  0020E8  D7EF               	goto	l2006
  4610  0020EA  D006               	goto	l2014
  4611  0020EC                     l2012:
  4612  0020EC  90D8               	bcf	status,0,c
  4613  0020EE  3230               	rrcf	___ftadd@f1+2,f,c
  4614  0020F0  322F               	rrcf	___ftadd@f1+1,f,c
  4615  0020F2  322E               	rrcf	___ftadd@f1,f,c
  4616  0020F4  2A39               	incf	___ftadd@exp1,f,c
  4617  0020F6  D000               	goto	l2014
  4618  0020F8                     l2014:
  4619  0020F8  5038               	movf	___ftadd@exp2,w,c
  4620  0020FA  1839               	xorwf	___ftadd@exp1,w,c
  4621  0020FC  B4D8               	btfsc	status,2,c
  4622  0020FE  D024               	goto	l675
  4623  002100  D7F5               	goto	l2012
  4624  002102  D022               	goto	l675
  4625  002104                     l2016:
  4626  002104  5039               	movf	___ftadd@exp1,w,c
  4627  002106  5C38               	subwf	___ftadd@exp2,w,c
  4628  002108  B0D8               	btfsc	status,0,c
  4629  00210A  D01E               	goto	l675
  4630  00210C                     l2018:
  4631  00210C  90D8               	bcf	status,0,c
  4632  00210E  362E               	rlcf	___ftadd@f1,f,c
  4633  002110  362F               	rlcf	___ftadd@f1+1,f,c
  4634  002112  3630               	rlcf	___ftadd@f1+2,f,c
  4635  002114  0639               	decf	___ftadd@exp1,f,c
  4636  002116  5039               	movf	___ftadd@exp1,w,c
  4637  002118  1838               	xorwf	___ftadd@exp2,w,c
  4638  00211A  B4D8               	btfsc	status,2,c
  4639  00211C  D00F               	goto	l2026
  4640  00211E  0637               	decf	___ftadd@sign,f,c
  4641  002120  C037  F034         	movff	___ftadd@sign,??___ftadd
  4642  002124  0E07               	movlw	7
  4643  002126  1634               	andwf	??___ftadd,f,c
  4644  002128  B4D8               	btfsc	status,2,c
  4645  00212A  D008               	goto	l2026
  4646  00212C  D7EF               	goto	l2018
  4647  00212E  D006               	goto	l2026
  4648  002130                     l2024:
  4649  002130  90D8               	bcf	status,0,c
  4650  002132  3233               	rrcf	___ftadd@f2+2,f,c
  4651  002134  3232               	rrcf	___ftadd@f2+1,f,c
  4652  002136  3231               	rrcf	___ftadd@f2,f,c
  4653  002138  2A38               	incf	___ftadd@exp2,f,c
  4654  00213A  D000               	goto	l2026
  4655  00213C                     l2026:
  4656  00213C  5038               	movf	___ftadd@exp2,w,c
  4657  00213E  1839               	xorwf	___ftadd@exp1,w,c
  4658  002140  B4D8               	btfsc	status,2,c
  4659  002142  D002               	goto	l675
  4660  002144  D7F5               	goto	l2024
  4661  002146  D000               	goto	l675
  4662  002148                     l675:
  4663  002148  AE37               	btfss	___ftadd@sign,7,c
  4664  00214A  D00C               	goto	l684
  4665  00214C  0EFF               	movlw	255
  4666  00214E  1A2E               	xorwf	___ftadd@f1,f,c
  4667  002150  0EFF               	movlw	255
  4668  002152  1A2F               	xorwf	___ftadd@f1+1,f,c
  4669  002154  0EFF               	movlw	255
  4670  002156  1A30               	xorwf	___ftadd@f1+2,f,c
  4671  002158  0E01               	movlw	1
  4672  00215A  262E               	addwf	___ftadd@f1,f,c
  4673  00215C  0E00               	movlw	0
  4674  00215E  222F               	addwfc	___ftadd@f1+1,f,c
  4675  002160  0E00               	movlw	0
  4676  002162  2230               	addwfc	___ftadd@f1+2,f,c
  4677  002164                     l684:
  4678  002164  AC37               	btfss	___ftadd@sign,6,c
  4679  002166  D00D               	goto	l2032
  4680  002168  0EFF               	movlw	255
  4681  00216A  1A31               	xorwf	___ftadd@f2,f,c
  4682  00216C  0EFF               	movlw	255
  4683  00216E  1A32               	xorwf	___ftadd@f2+1,f,c
  4684  002170  0EFF               	movlw	255
  4685  002172  1A33               	xorwf	___ftadd@f2+2,f,c
  4686  002174  0E01               	movlw	1
  4687  002176  2631               	addwf	___ftadd@f2,f,c
  4688  002178  0E00               	movlw	0
  4689  00217A  2232               	addwfc	___ftadd@f2+1,f,c
  4690  00217C  0E00               	movlw	0
  4691  00217E  2233               	addwfc	___ftadd@f2+2,f,c
  4692  002180  D000               	goto	l2032
  4693  002182                     l2032:
  4694  002182  0E00               	movlw	0
  4695  002184  6E37               	movwf	___ftadd@sign,c
  4696  002186  502E               	movf	___ftadd@f1,w,c
  4697  002188  2631               	addwf	___ftadd@f2,f,c
  4698  00218A  502F               	movf	___ftadd@f1+1,w,c
  4699  00218C  2232               	addwfc	___ftadd@f2+1,f,c
  4700  00218E  5030               	movf	___ftadd@f1+2,w,c
  4701  002190  2233               	addwfc	___ftadd@f2+2,f,c
  4702  002192  AE33               	btfss	___ftadd@f2+2,7,c
  4703  002194  D00F               	goto	l2042
  4704  002196  0EFF               	movlw	255
  4705  002198  1A31               	xorwf	___ftadd@f2,f,c
  4706  00219A  0EFF               	movlw	255
  4707  00219C  1A32               	xorwf	___ftadd@f2+1,f,c
  4708  00219E  0EFF               	movlw	255
  4709  0021A0  1A33               	xorwf	___ftadd@f2+2,f,c
  4710  0021A2  0E01               	movlw	1
  4711  0021A4  2631               	addwf	___ftadd@f2,f,c
  4712  0021A6  0E00               	movlw	0
  4713  0021A8  2232               	addwfc	___ftadd@f2+1,f,c
  4714  0021AA  0E00               	movlw	0
  4715  0021AC  2233               	addwfc	___ftadd@f2+2,f,c
  4716  0021AE  0E01               	movlw	1
  4717  0021B0  6E37               	movwf	___ftadd@sign,c
  4718  0021B2  D000               	goto	l2042
  4719  0021B4                     l2042:
  4720  0021B4  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  4721  0021B8  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4722  0021BC  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4723  0021C0  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  4724  0021C4  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  4725  0021C8  EC5B  F013         	call	___ftpack	;wreg free
  4726  0021CC  C001  F02E         	movff	?___ftpack,?___ftadd
  4727  0021D0  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  4728  0021D4  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  4729  0021D8  D000               	goto	l661
  4730  0021DA                     l661:
  4731  0021DA  0012               	return		;funcret
  4732  0021DC                     __end_of___ftadd:
  4733                           	opt stack 0
  4734                           tblptru	equ	0xFF8
  4735                           tblptrh	equ	0xFF7
  4736                           tblptrl	equ	0xFF6
  4737                           tablat	equ	0xFF5
  4738                           prodh	equ	0xFF4
  4739                           prodl	equ	0xFF3
  4740                           postinc0	equ	0xFEE
  4741                           wreg	equ	0xFE8
  4742                           postdec1	equ	0xFE5
  4743                           fsr1l	equ	0xFE1
  4744                           postinc2	equ	0xFDE
  4745                           postdec2	equ	0xFDD
  4746                           fsr2h	equ	0xFDA
  4747                           fsr2l	equ	0xFD9
  4748                           status	equ	0xFD8
  4749                           
  4750 ;; *************** function ___ftneg *****************
  4751 ;; Defined at:
  4752 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  f1              3    0[COMRAM] float 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  3    0[COMRAM] float 
  4759 ;; Registers used:
  4760 ;;		wreg, status,2, status,0
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4766 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;Total ram usage:        3 bytes
  4771 ;; Hardware stack levels used:    1
  4772 ;; This function calls:
  4773 ;;		Nothing
  4774 ;; This function is called by:
  4775 ;;		_main
  4776 ;;		_printf
  4777 ;; This function uses a non-reentrant model
  4778 ;;
  4779                           
  4780                           	psect	text16
  4781  002D8E                     __ptext16:
  4782                           	opt stack 0
  4783  002D8E                     ___ftneg:
  4784                           	opt stack 29
  4785                           
  4786                           ;incstack = 0
  4787  002D8E  5001               	movf	___ftneg@f1,w,c
  4788  002D90  1002               	iorwf	___ftneg@f1+1,w,c
  4789  002D92  1003               	iorwf	___ftneg@f1+2,w,c
  4790  002D94  B4D8               	btfsc	status,2,c
  4791  002D96  D006               	goto	l734
  4792  002D98  0E00               	movlw	0
  4793  002D9A  1A01               	xorwf	___ftneg@f1,f,c
  4794  002D9C  0E00               	movlw	0
  4795  002D9E  1A02               	xorwf	___ftneg@f1+1,f,c
  4796  002DA0  0E80               	movlw	128
  4797  002DA2  1A03               	xorwf	___ftneg@f1+2,f,c
  4798  002DA4                     l734:
  4799  002DA4  C001  F001         	movff	___ftneg@f1,?___ftneg
  4800  002DA8  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  4801  002DAC  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  4802  002DB0  0012               	return		;funcret
  4803  002DB2                     __end_of___ftneg:
  4804                           	opt stack 0
  4805                           tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           prodh	equ	0xFF4
  4810                           prodl	equ	0xFF3
  4811                           postinc0	equ	0xFEE
  4812                           wreg	equ	0xFE8
  4813                           postdec1	equ	0xFE5
  4814                           fsr1l	equ	0xFE1
  4815                           postinc2	equ	0xFDE
  4816                           postdec2	equ	0xFDD
  4817                           fsr2h	equ	0xFDA
  4818                           fsr2l	equ	0xFD9
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function ___ftge *****************
  4822 ;; Defined at:
  4823 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;  ff1             3    0[COMRAM] float 
  4826 ;;  ff2             3    3[COMRAM] float 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;		None
  4829 ;; Return value:  Size  Location     Type
  4830 ;;		None               void
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4838 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;Total ram usage:        9 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_printf
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           	psect	text17
  4852  00281C                     __ptext17:
  4853                           	opt stack 0
  4854  00281C                     ___ftge:
  4855                           	opt stack 29
  4856                           
  4857                           ;incstack = 0
  4858  00281C  AE03               	btfss	___ftge@ff1+2,7,c
  4859  00281E  D017               	goto	l2416
  4860  002820  C001  F007         	movff	___ftge@ff1,??___ftge
  4861  002824  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4862  002828  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4863  00282C  1E07               	comf	??___ftge,f,c
  4864  00282E  1E08               	comf	??___ftge+1,f,c
  4865  002830  1E09               	comf	??___ftge+2,f,c
  4866  002832  2A07               	incf	??___ftge,f,c
  4867  002834  0E00               	movlw	0
  4868  002836  2208               	addwfc	??___ftge+1,f,c
  4869  002838  2209               	addwfc	??___ftge+2,f,c
  4870  00283A  0E00               	movlw	0
  4871  00283C  2407               	addwf	??___ftge,w,c
  4872  00283E  6E01               	movwf	___ftge@ff1,c
  4873  002840  0E00               	movlw	0
  4874  002842  2008               	addwfc	??___ftge+1,w,c
  4875  002844  6E02               	movwf	___ftge@ff1+1,c
  4876  002846  0E80               	movlw	128
  4877  002848  2009               	addwfc	??___ftge+2,w,c
  4878  00284A  6E03               	movwf	___ftge@ff1+2,c
  4879  00284C  D000               	goto	l2416
  4880  00284E                     l2416:
  4881  00284E  AE06               	btfss	___ftge@ff2+2,7,c
  4882  002850  D017               	goto	l2420
  4883  002852  C004  F007         	movff	___ftge@ff2,??___ftge
  4884  002856  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4885  00285A  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4886  00285E  1E07               	comf	??___ftge,f,c
  4887  002860  1E08               	comf	??___ftge+1,f,c
  4888  002862  1E09               	comf	??___ftge+2,f,c
  4889  002864  2A07               	incf	??___ftge,f,c
  4890  002866  0E00               	movlw	0
  4891  002868  2208               	addwfc	??___ftge+1,f,c
  4892  00286A  2209               	addwfc	??___ftge+2,f,c
  4893  00286C  0E00               	movlw	0
  4894  00286E  2407               	addwf	??___ftge,w,c
  4895  002870  6E04               	movwf	___ftge@ff2,c
  4896  002872  0E00               	movlw	0
  4897  002874  2008               	addwfc	??___ftge+1,w,c
  4898  002876  6E05               	movwf	___ftge@ff2+1,c
  4899  002878  0E80               	movlw	128
  4900  00287A  2009               	addwfc	??___ftge+2,w,c
  4901  00287C  6E06               	movwf	___ftge@ff2+2,c
  4902  00287E  D000               	goto	l2420
  4903  002880                     l2420:
  4904  002880  0E00               	movlw	0
  4905  002882  1A01               	xorwf	___ftge@ff1,f,c
  4906  002884  0E00               	movlw	0
  4907  002886  1A02               	xorwf	___ftge@ff1+1,f,c
  4908  002888  0E80               	movlw	128
  4909  00288A  1A03               	xorwf	___ftge@ff1+2,f,c
  4910  00288C  0E00               	movlw	0
  4911  00288E  1A04               	xorwf	___ftge@ff2,f,c
  4912  002890  0E00               	movlw	0
  4913  002892  1A05               	xorwf	___ftge@ff2+1,f,c
  4914  002894  0E80               	movlw	128
  4915  002896  1A06               	xorwf	___ftge@ff2+2,f,c
  4916  002898  5004               	movf	___ftge@ff2,w,c
  4917  00289A  5C01               	subwf	___ftge@ff1,w,c
  4918  00289C  5005               	movf	___ftge@ff2+1,w,c
  4919  00289E  5802               	subwfb	___ftge@ff1+1,w,c
  4920  0028A0  5006               	movf	___ftge@ff2+2,w,c
  4921  0028A2  5803               	subwfb	___ftge@ff1+2,w,c
  4922  0028A4  B0D8               	btfsc	status,0,c
  4923  0028A6  D002               	goto	l2426
  4924  0028A8  90D8               	bcf	status,0,c
  4925  0028AA  D002               	goto	l718
  4926  0028AC                     l2426:
  4927  0028AC  80D8               	bsf	status,0,c
  4928  0028AE  D000               	goto	l718
  4929  0028B0                     l718:
  4930  0028B0  0012               	return		;funcret
  4931  0028B2                     __end_of___ftge:
  4932                           	opt stack 0
  4933                           tblptru	equ	0xFF8
  4934                           tblptrh	equ	0xFF7
  4935                           tblptrl	equ	0xFF6
  4936                           tablat	equ	0xFF5
  4937                           prodh	equ	0xFF4
  4938                           prodl	equ	0xFF3
  4939                           postinc0	equ	0xFEE
  4940                           wreg	equ	0xFE8
  4941                           postdec1	equ	0xFE5
  4942                           fsr1l	equ	0xFE1
  4943                           postinc2	equ	0xFDE
  4944                           postdec2	equ	0xFDD
  4945                           fsr2h	equ	0xFDA
  4946                           fsr2l	equ	0xFD9
  4947                           status	equ	0xFD8
  4948                           
  4949 ;; *************** function ___ftdiv *****************
  4950 ;; Defined at:
  4951 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  4952 ;; Parameters:    Size  Location     Type
  4953 ;;  f1              3   57[COMRAM] float 
  4954 ;;  f2              3   60[COMRAM] float 
  4955 ;; Auto vars:     Size  Location     Type
  4956 ;;  f3              3   67[COMRAM] float 
  4957 ;;  sign            1   71[COMRAM] unsigned char 
  4958 ;;  exp             1   70[COMRAM] unsigned char 
  4959 ;;  cntr            1   66[COMRAM] unsigned char 
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  3   57[COMRAM] float 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4969 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4973 ;;Total ram usage:       15 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    1
  4976 ;; This function calls:
  4977 ;;		___ftpack
  4978 ;; This function is called by:
  4979 ;;		_main
  4980 ;; This function uses a non-reentrant model
  4981 ;;
  4982                           
  4983                           	psect	text18
  4984  0025D4                     __ptext18:
  4985                           	opt stack 0
  4986  0025D4                     ___ftdiv:
  4987                           	opt stack 29
  4988                           
  4989                           ;incstack = 0
  4990  0025D4  C03C  F040         	movff	___ftdiv@f1+2,??___ftdiv
  4991  0025D8  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  4992  0025DA  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  4993  0025DC  343B               	rlcf	___ftdiv@f1+1,w,c
  4994  0025DE  3640               	rlcf	??___ftdiv& (0+255),f,c
  4995  0025E0  E301               	bnc	u3081
  4996  0025E2  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  4997  0025E4                     u3081:
  4998  0025E4  5040               	movf	??___ftdiv,w,c
  4999  0025E6  6E47               	movwf	___ftdiv@exp,c
  5000  0025E8  5047               	movf	___ftdiv@exp,w,c
  5001  0025EA  A4D8               	btfss	status,2,c
  5002  0025EC  D002               	goto	l2786
  5003  0025EE  D00E               	goto	l2788
  5004  0025F0  D061               	goto	l692
  5005  0025F2                     l2786:
  5006  0025F2  C03F  F040         	movff	___ftdiv@f2+2,??___ftdiv
  5007  0025F6  6A41               	clrf	(??___ftdiv+1)& (0+255),c
  5008  0025F8  6A42               	clrf	(??___ftdiv+2)& (0+255),c
  5009  0025FA  343E               	rlcf	___ftdiv@f2+1,w,c
  5010  0025FC  3640               	rlcf	??___ftdiv& (0+255),f,c
  5011  0025FE  E301               	bnc	u3101
  5012  002600  8041               	bsf	(??___ftdiv+1)& (0+255),0,c
  5013  002602                     u3101:
  5014  002602  5040               	movf	??___ftdiv,w,c
  5015  002604  6E48               	movwf	___ftdiv@sign,c
  5016  002606  5048               	movf	___ftdiv@sign,w,c
  5017  002608  A4D8               	btfss	status,2,c
  5018  00260A  D007               	goto	l2792
  5019  00260C                     l2788:
  5020  00260C  0E00               	movlw	0
  5021  00260E  6E3A               	movwf	?___ftdiv,c
  5022  002610  0E00               	movlw	0
  5023  002612  6E3B               	movwf	?___ftdiv+1,c
  5024  002614  0E00               	movlw	0
  5025  002616  6E3C               	movwf	?___ftdiv+2,c
  5026  002618  D04D               	goto	l692
  5027  00261A                     l2792:
  5028  00261A  0E00               	movlw	0
  5029  00261C  6E44               	movwf	___ftdiv@f3,c
  5030  00261E  0E00               	movlw	0
  5031  002620  6E45               	movwf	___ftdiv@f3+1,c
  5032  002622  0E00               	movlw	0
  5033  002624  6E46               	movwf	___ftdiv@f3+2,c
  5034  002626  5048               	movf	___ftdiv@sign,w,c
  5035  002628  0F89               	addlw	137
  5036  00262A  5E47               	subwf	___ftdiv@exp,f,c
  5037  00262C  C03C  F048         	movff	___ftdiv@f1+2,___ftdiv@sign
  5038  002630  503F               	movf	___ftdiv@f2+2,w,c
  5039  002632  1A48               	xorwf	___ftdiv@sign,f,c
  5040  002634  0E80               	movlw	128
  5041  002636  1648               	andwf	___ftdiv@sign,f,c
  5042  002638  8E3B               	bsf	___ftdiv@f1+1,7,c
  5043  00263A  0EFF               	movlw	255
  5044  00263C  163A               	andwf	___ftdiv@f1,f,c
  5045  00263E  0EFF               	movlw	255
  5046  002640  163B               	andwf	___ftdiv@f1+1,f,c
  5047  002642  0E00               	movlw	0
  5048  002644  163C               	andwf	___ftdiv@f1+2,f,c
  5049  002646  8E3E               	bsf	___ftdiv@f2+1,7,c
  5050  002648  0EFF               	movlw	255
  5051  00264A  163D               	andwf	___ftdiv@f2,f,c
  5052  00264C  0EFF               	movlw	255
  5053  00264E  163E               	andwf	___ftdiv@f2+1,f,c
  5054  002650  0E00               	movlw	0
  5055  002652  163F               	andwf	___ftdiv@f2+2,f,c
  5056  002654  0E18               	movlw	24
  5057  002656  6E43               	movwf	___ftdiv@cntr,c
  5058  002658  D000               	goto	l2812
  5059  00265A                     l2812:
  5060  00265A  90D8               	bcf	status,0,c
  5061  00265C  3644               	rlcf	___ftdiv@f3,f,c
  5062  00265E  3645               	rlcf	___ftdiv@f3+1,f,c
  5063  002660  3646               	rlcf	___ftdiv@f3+2,f,c
  5064  002662  503D               	movf	___ftdiv@f2,w,c
  5065  002664  5C3A               	subwf	___ftdiv@f1,w,c
  5066  002666  503E               	movf	___ftdiv@f2+1,w,c
  5067  002668  583B               	subwfb	___ftdiv@f1+1,w,c
  5068  00266A  503F               	movf	___ftdiv@f2+2,w,c
  5069  00266C  583C               	subwfb	___ftdiv@f1+2,w,c
  5070  00266E  A0D8               	btfss	status,0,c
  5071  002670  D007               	goto	l695
  5072  002672  503D               	movf	___ftdiv@f2,w,c
  5073  002674  5E3A               	subwf	___ftdiv@f1,f,c
  5074  002676  503E               	movf	___ftdiv@f2+1,w,c
  5075  002678  5A3B               	subwfb	___ftdiv@f1+1,f,c
  5076  00267A  503F               	movf	___ftdiv@f2+2,w,c
  5077  00267C  5A3C               	subwfb	___ftdiv@f1+2,f,c
  5078  00267E  8044               	bsf	___ftdiv@f3,0,c
  5079  002680                     l695:
  5080  002680  90D8               	bcf	status,0,c
  5081  002682  363A               	rlcf	___ftdiv@f1,f,c
  5082  002684  363B               	rlcf	___ftdiv@f1+1,f,c
  5083  002686  363C               	rlcf	___ftdiv@f1+2,f,c
  5084  002688  2E43               	decfsz	___ftdiv@cntr,f,c
  5085  00268A  D7E7               	goto	l2812
  5086  00268C  D000               	goto	l2822
  5087  00268E                     l2822:
  5088  00268E  C044  F001         	movff	___ftdiv@f3,___ftpack@arg
  5089  002692  C045  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5090  002696  C046  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5091  00269A  C047  F004         	movff	___ftdiv@exp,___ftpack@exp
  5092  00269E  C048  F005         	movff	___ftdiv@sign,___ftpack@sign
  5093  0026A2  EC5B  F013         	call	___ftpack	;wreg free
  5094  0026A6  C001  F03A         	movff	?___ftpack,?___ftdiv
  5095  0026AA  C002  F03B         	movff	?___ftpack+1,?___ftdiv+1
  5096  0026AE  C003  F03C         	movff	?___ftpack+2,?___ftdiv+2
  5097  0026B2  D000               	goto	l692
  5098  0026B4                     l692:
  5099  0026B4  0012               	return		;funcret
  5100  0026B6                     __end_of___ftdiv:
  5101                           	opt stack 0
  5102                           tblptru	equ	0xFF8
  5103                           tblptrh	equ	0xFF7
  5104                           tblptrl	equ	0xFF6
  5105                           tablat	equ	0xFF5
  5106                           prodh	equ	0xFF4
  5107                           prodl	equ	0xFF3
  5108                           postinc0	equ	0xFEE
  5109                           wreg	equ	0xFE8
  5110                           postdec1	equ	0xFE5
  5111                           fsr1l	equ	0xFE1
  5112                           postinc2	equ	0xFDE
  5113                           postdec2	equ	0xFDD
  5114                           fsr2h	equ	0xFDA
  5115                           fsr2l	equ	0xFD9
  5116                           status	equ	0xFD8
  5117                           
  5118 ;; *************** function ___awtoft *****************
  5119 ;; Defined at:
  5120 ;;		line 32 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awtoft.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  c               2    8[COMRAM] int 
  5123 ;; Auto vars:     Size  Location     Type
  5124 ;;  sign            1   11[COMRAM] unsigned char 
  5125 ;; Return value:  Size  Location     Type
  5126 ;;                  3    8[COMRAM] float 
  5127 ;; Registers used:
  5128 ;;		wreg, status,2, status,0, cstack
  5129 ;; Tracked objects:
  5130 ;;		On entry : 0/0
  5131 ;;		On exit  : 0/0
  5132 ;;		Unchanged: 0/0
  5133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5134 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5137 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5138 ;;Total ram usage:        4 bytes
  5139 ;; Hardware stack levels used:    1
  5140 ;; Hardware stack levels required when called:    1
  5141 ;; This function calls:
  5142 ;;		___ftpack
  5143 ;; This function is called by:
  5144 ;;		_main
  5145 ;; This function uses a non-reentrant model
  5146 ;;
  5147                           
  5148                           	psect	text19
  5149  002CDA                     __ptext19:
  5150                           	opt stack 0
  5151  002CDA                     ___awtoft:
  5152                           	opt stack 29
  5153                           
  5154                           ;incstack = 0
  5155  002CDA  0E00               	movlw	0
  5156  002CDC  6E0C               	movwf	___awtoft@sign,c
  5157  002CDE  AE0A               	btfss	___awtoft@c+1,7,c
  5158  002CE0  D007               	goto	l2834
  5159  002CE2  6C09               	negf	___awtoft@c,c
  5160  002CE4  1E0A               	comf	___awtoft@c+1,f,c
  5161  002CE6  B0D8               	btfsc	status,0,c
  5162  002CE8  2A0A               	incf	___awtoft@c+1,f,c
  5163  002CEA  0E01               	movlw	1
  5164  002CEC  6E0C               	movwf	___awtoft@sign,c
  5165  002CEE  D000               	goto	l2834
  5166  002CF0                     l2834:
  5167  002CF0  C009  F001         	movff	___awtoft@c,___ftpack@arg
  5168  002CF4  C00A  F002         	movff	___awtoft@c+1,___ftpack@arg+1
  5169  002CF8  6A03               	clrf	___ftpack@arg+2,c
  5170  002CFA  0E8E               	movlw	142
  5171  002CFC  6E04               	movwf	___ftpack@exp,c
  5172  002CFE  C00C  F005         	movff	___awtoft@sign,___ftpack@sign
  5173  002D02  EC5B  F013         	call	___ftpack	;wreg free
  5174  002D06  C001  F009         	movff	?___ftpack,?___awtoft
  5175  002D0A  C002  F00A         	movff	?___ftpack+1,?___awtoft+1
  5176  002D0E  C003  F00B         	movff	?___ftpack+2,?___awtoft+2
  5177  002D12  D000               	goto	l513
  5178  002D14                     l513:
  5179  002D14  0012               	return		;funcret
  5180  002D16                     __end_of___awtoft:
  5181                           	opt stack 0
  5182                           tblptru	equ	0xFF8
  5183                           tblptrh	equ	0xFF7
  5184                           tblptrl	equ	0xFF6
  5185                           tablat	equ	0xFF5
  5186                           prodh	equ	0xFF4
  5187                           prodl	equ	0xFF3
  5188                           postinc0	equ	0xFEE
  5189                           wreg	equ	0xFE8
  5190                           postdec1	equ	0xFE5
  5191                           fsr1l	equ	0xFE1
  5192                           postinc2	equ	0xFDE
  5193                           postdec2	equ	0xFDD
  5194                           fsr2h	equ	0xFDA
  5195                           fsr2l	equ	0xFD9
  5196                           status	equ	0xFD8
  5197                           
  5198 ;; *************** function ___ftpack *****************
  5199 ;; Defined at:
  5200 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;  arg             3    0[COMRAM] unsigned um
  5203 ;;  exp             1    3[COMRAM] unsigned char 
  5204 ;;  sign            1    4[COMRAM] unsigned char 
  5205 ;; Auto vars:     Size  Location     Type
  5206 ;;		None
  5207 ;; Return value:  Size  Location     Type
  5208 ;;                  3    0[COMRAM] float 
  5209 ;; Registers used:
  5210 ;;		wreg, status,2, status,0
  5211 ;; Tracked objects:
  5212 ;;		On entry : 0/0
  5213 ;;		On exit  : 0/0
  5214 ;;		Unchanged: 0/0
  5215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5216 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5219 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5220 ;;Total ram usage:        8 bytes
  5221 ;; Hardware stack levels used:    1
  5222 ;; This function calls:
  5223 ;;		Nothing
  5224 ;; This function is called by:
  5225 ;;		___awtoft
  5226 ;;		___ftadd
  5227 ;;		___ftdiv
  5228 ;;		___ftmul
  5229 ;;		___lltoft
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           
  5233                           	psect	text20
  5234  0026B6                     __ptext20:
  5235                           	opt stack 0
  5236  0026B6                     ___ftpack:
  5237                           	opt stack 27
  5238                           
  5239                           ;incstack = 0
  5240  0026B6  5004               	movf	___ftpack@exp,w,c
  5241  0026B8  B4D8               	btfsc	status,2,c
  5242  0026BA  D005               	goto	l1938
  5243  0026BC  5001               	movf	___ftpack@arg,w,c
  5244  0026BE  1002               	iorwf	___ftpack@arg+1,w,c
  5245  0026C0  1003               	iorwf	___ftpack@arg+2,w,c
  5246  0026C2  A4D8               	btfss	status,2,c
  5247  0026C4  D00E               	goto	l1944
  5248  0026C6                     l1938:
  5249  0026C6  0E00               	movlw	0
  5250  0026C8  6E01               	movwf	?___ftpack,c
  5251  0026CA  0E00               	movlw	0
  5252  0026CC  6E02               	movwf	?___ftpack+1,c
  5253  0026CE  0E00               	movlw	0
  5254  0026D0  6E03               	movwf	?___ftpack+2,c
  5255  0026D2  D053               	goto	l620
  5256  0026D4  D006               	goto	l1944
  5257  0026D6                     l1942:
  5258  0026D6  2A04               	incf	___ftpack@exp,f,c
  5259  0026D8  90D8               	bcf	status,0,c
  5260  0026DA  3203               	rrcf	___ftpack@arg+2,f,c
  5261  0026DC  3202               	rrcf	___ftpack@arg+1,f,c
  5262  0026DE  3201               	rrcf	___ftpack@arg,f,c
  5263  0026E0  D000               	goto	l1944
  5264  0026E2                     l1944:
  5265  0026E2  0E00               	movlw	0
  5266  0026E4  1401               	andwf	___ftpack@arg,w,c
  5267  0026E6  6E06               	movwf	??___ftpack& (0+255),c
  5268  0026E8  0E00               	movlw	0
  5269  0026EA  1402               	andwf	___ftpack@arg+1,w,c
  5270  0026EC  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5271  0026EE  0EFE               	movlw	254
  5272  0026F0  1403               	andwf	___ftpack@arg+2,w,c
  5273  0026F2  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5274  0026F4  5006               	movf	??___ftpack,w,c
  5275  0026F6  1007               	iorwf	??___ftpack+1,w,c
  5276  0026F8  1008               	iorwf	??___ftpack+2,w,c
  5277  0026FA  B4D8               	btfsc	status,2,c
  5278  0026FC  D00E               	goto	l1950
  5279  0026FE  D7EB               	goto	l1942
  5280  002700  D00C               	goto	l1950
  5281  002702                     l1946:
  5282  002702  2A04               	incf	___ftpack@exp,f,c
  5283  002704  0E01               	movlw	1
  5284  002706  2601               	addwf	___ftpack@arg,f,c
  5285  002708  0E00               	movlw	0
  5286  00270A  2202               	addwfc	___ftpack@arg+1,f,c
  5287  00270C  0E00               	movlw	0
  5288  00270E  2203               	addwfc	___ftpack@arg+2,f,c
  5289  002710  90D8               	bcf	status,0,c
  5290  002712  3203               	rrcf	___ftpack@arg+2,f,c
  5291  002714  3202               	rrcf	___ftpack@arg+1,f,c
  5292  002716  3201               	rrcf	___ftpack@arg,f,c
  5293  002718  D000               	goto	l1950
  5294  00271A                     l1950:
  5295  00271A  0E00               	movlw	0
  5296  00271C  1401               	andwf	___ftpack@arg,w,c
  5297  00271E  6E06               	movwf	??___ftpack& (0+255),c
  5298  002720  0E00               	movlw	0
  5299  002722  1402               	andwf	___ftpack@arg+1,w,c
  5300  002724  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5301  002726  0EFF               	movlw	255
  5302  002728  1403               	andwf	___ftpack@arg+2,w,c
  5303  00272A  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5304  00272C  5006               	movf	??___ftpack,w,c
  5305  00272E  1007               	iorwf	??___ftpack+1,w,c
  5306  002730  1008               	iorwf	??___ftpack+2,w,c
  5307  002732  B4D8               	btfsc	status,2,c
  5308  002734  D008               	goto	l1954
  5309  002736  D7E5               	goto	l1946
  5310  002738  D006               	goto	l1954
  5311  00273A                     l1952:
  5312  00273A  0604               	decf	___ftpack@exp,f,c
  5313  00273C  90D8               	bcf	status,0,c
  5314  00273E  3601               	rlcf	___ftpack@arg,f,c
  5315  002740  3602               	rlcf	___ftpack@arg+1,f,c
  5316  002742  3603               	rlcf	___ftpack@arg+2,f,c
  5317  002744  D000               	goto	l1954
  5318  002746                     l1954:
  5319  002746  BE02               	btfsc	___ftpack@arg+1,7,c
  5320  002748  D004               	goto	l631
  5321  00274A  0E02               	movlw	2
  5322  00274C  6004               	cpfslt	___ftpack@exp,c
  5323  00274E  D7F5               	goto	l1952
  5324  002750  D000               	goto	l631
  5325  002752                     l631:
  5326  002752  B004               	btfsc	___ftpack@exp,0,c
  5327  002754  D002               	goto	l1960
  5328  002756  9E02               	bcf	___ftpack@arg+1,7,c
  5329  002758  D000               	goto	l1960
  5330  00275A                     l1960:
  5331  00275A  90D8               	bcf	status,0,c
  5332  00275C  3204               	rrcf	___ftpack@exp,f,c
  5333  00275E  5004               	movf	___ftpack@exp,w,c
  5334  002760  1203               	iorwf	___ftpack@arg+2,f,c
  5335  002762  5005               	movf	___ftpack@sign,w,c
  5336  002764  B4D8               	btfsc	status,2,c
  5337  002766  D002               	goto	l1966
  5338  002768  8E03               	bsf	___ftpack@arg+2,7,c
  5339  00276A  D000               	goto	l1966
  5340  00276C                     l1966:
  5341  00276C  C001  F001         	movff	___ftpack@arg,?___ftpack
  5342  002770  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5343  002774  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5344  002778  D000               	goto	l620
  5345  00277A                     l620:
  5346  00277A  0012               	return		;funcret
  5347  00277C                     __end_of___ftpack:
  5348                           	opt stack 0
  5349                           tblptru	equ	0xFF8
  5350                           tblptrh	equ	0xFF7
  5351                           tblptrl	equ	0xFF6
  5352                           tablat	equ	0xFF5
  5353                           prodh	equ	0xFF4
  5354                           prodl	equ	0xFF3
  5355                           postinc0	equ	0xFEE
  5356                           wreg	equ	0xFE8
  5357                           postdec1	equ	0xFE5
  5358                           fsr1l	equ	0xFE1
  5359                           postinc2	equ	0xFDE
  5360                           postdec2	equ	0xFDD
  5361                           fsr2h	equ	0xFDA
  5362                           fsr2l	equ	0xFD9
  5363                           status	equ	0xFD8
  5364                           
  5365 ;; *************** function _WAIT_1_SEC *****************
  5366 ;; Defined at:
  5367 ;;		line 60 in file "Lab5p6_1.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;		None
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  j               2    0[COMRAM] int 
  5372 ;; Return value:  Size  Location     Type
  5373 ;;		None               void
  5374 ;; Registers used:
  5375 ;;		wreg, status,2, status,0
  5376 ;; Tracked objects:
  5377 ;;		On entry : 0/0
  5378 ;;		On exit  : 0/0
  5379 ;;		Unchanged: 0/0
  5380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;Total ram usage:        2 bytes
  5386 ;; Hardware stack levels used:    1
  5387 ;; This function calls:
  5388 ;;		Nothing
  5389 ;; This function is called by:
  5390 ;;		_main
  5391 ;; This function uses a non-reentrant model
  5392 ;;
  5393                           
  5394                           	psect	text21
  5395  002DB2                     __ptext21:
  5396                           	opt stack 0
  5397  002DB2                     _WAIT_1_SEC:
  5398                           	opt stack 30
  5399                           
  5400                           ;Lab5p6_1.c: 62: for (int j=0; j<17000; j++);
  5401                           
  5402                           ;incstack = 0
  5403  002DB2  0E00               	movlw	0
  5404  002DB4  6E02               	movwf	WAIT_1_SEC@j+1,c
  5405  002DB6  0E00               	movlw	0
  5406  002DB8  6E01               	movwf	WAIT_1_SEC@j,c
  5407  002DBA                     l1550:
  5408  002DBA  BE02               	btfsc	WAIT_1_SEC@j+1,7,c
  5409  002DBC  D008               	goto	l1554
  5410  002DBE  0E68               	movlw	104
  5411  002DC0  5C01               	subwf	WAIT_1_SEC@j,w,c
  5412  002DC2  0E42               	movlw	66
  5413  002DC4  5802               	subwfb	WAIT_1_SEC@j+1,w,c
  5414  002DC6  B0D8               	btfsc	status,0,c
  5415  002DC8  D005               	goto	l95
  5416  002DCA  D001               	goto	l1554
  5417  002DCC  D003               	goto	l95
  5418  002DCE                     l1554:
  5419  002DCE  4A01               	infsnz	WAIT_1_SEC@j,f,c
  5420  002DD0  2A02               	incf	WAIT_1_SEC@j+1,f,c
  5421  002DD2  D7F3               	goto	l1550
  5422  002DD4                     l95:
  5423  002DD4  0012               	return		;funcret
  5424  002DD6                     __end_of_WAIT_1_SEC:
  5425                           	opt stack 0
  5426                           tblptru	equ	0xFF8
  5427                           tblptrh	equ	0xFF7
  5428                           tblptrl	equ	0xFF6
  5429                           tablat	equ	0xFF5
  5430                           prodh	equ	0xFF4
  5431                           prodl	equ	0xFF3
  5432                           postinc0	equ	0xFEE
  5433                           wreg	equ	0xFE8
  5434                           postdec1	equ	0xFE5
  5435                           fsr1l	equ	0xFE1
  5436                           postinc2	equ	0xFDE
  5437                           postdec2	equ	0xFDD
  5438                           fsr2h	equ	0xFDA
  5439                           fsr2l	equ	0xFD9
  5440                           status	equ	0xFD8
  5441                           
  5442 ;; *************** function _Select_ADC_Channel *****************
  5443 ;; Defined at:
  5444 ;;		line 41 in file "Lab5p6_1.c"
  5445 ;; Parameters:    Size  Location     Type
  5446 ;;  channel         1    wreg     unsigned char 
  5447 ;; Auto vars:     Size  Location     Type
  5448 ;;  channel         1    0[COMRAM] unsigned char 
  5449 ;; Return value:  Size  Location     Type
  5450 ;;		None               void
  5451 ;; Registers used:
  5452 ;;		wreg, status,2, status,0, prodl, prodh
  5453 ;; Tracked objects:
  5454 ;;		On entry : 0/0
  5455 ;;		On exit  : 0/0
  5456 ;;		Unchanged: 0/0
  5457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5459 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;Total ram usage:        1 bytes
  5463 ;; Hardware stack levels used:    1
  5464 ;; This function calls:
  5465 ;;		Nothing
  5466 ;; This function is called by:
  5467 ;;		_main
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text22
  5472  002E34                     __ptext22:
  5473                           	opt stack 0
  5474  002E34                     _Select_ADC_Channel:
  5475                           	opt stack 30
  5476                           
  5477                           ;incstack = 0
  5478                           ;Select_ADC_Channel@channel stored from wreg
  5479  002E34  6E01               	movwf	Select_ADC_Channel@channel,c
  5480                           
  5481                           ;Lab5p6_1.c: 43: ADCON0 = channel * 4 + 1;
  5482  002E36  5001               	movf	Select_ADC_Channel@channel,w,c
  5483  002E38  0D04               	mullw	4
  5484  002E3A  28F3               	incf	prodl,w,c
  5485  002E3C  6EC2               	movwf	4034,c	;volatile
  5486  002E3E  0012               	return		;funcret
  5487  002E40                     __end_of_Select_ADC_Channel:
  5488                           	opt stack 0
  5489                           tblptru	equ	0xFF8
  5490                           tblptrh	equ	0xFF7
  5491                           tblptrl	equ	0xFF6
  5492                           tablat	equ	0xFF5
  5493                           prodh	equ	0xFF4
  5494                           prodl	equ	0xFF3
  5495                           postinc0	equ	0xFEE
  5496                           wreg	equ	0xFE8
  5497                           postdec1	equ	0xFE5
  5498                           fsr1l	equ	0xFE1
  5499                           postinc2	equ	0xFDE
  5500                           postdec2	equ	0xFDD
  5501                           fsr2h	equ	0xFDA
  5502                           fsr2l	equ	0xFD9
  5503                           status	equ	0xFD8
  5504                           
  5505 ;; *************** function _Init_UART *****************
  5506 ;; Defined at:
  5507 ;;		line 52 in file "Lab5p6_1.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;		None
  5510 ;; Auto vars:     Size  Location     Type
  5511 ;;		None
  5512 ;; Return value:  Size  Location     Type
  5513 ;;		None               void
  5514 ;; Registers used:
  5515 ;;		wreg, status,2, cstack
  5516 ;; Tracked objects:
  5517 ;;		On entry : 0/0
  5518 ;;		On exit  : 0/0
  5519 ;;		Unchanged: 0/0
  5520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5525 ;;Total ram usage:        0 bytes
  5526 ;; Hardware stack levels used:    1
  5527 ;; Hardware stack levels required when called:    1
  5528 ;; This function calls:
  5529 ;;		_OpenUSART
  5530 ;; This function is called by:
  5531 ;;		_main
  5532 ;; This function uses a non-reentrant model
  5533 ;;
  5534                           
  5535                           	psect	text23
  5536  002E04                     __ptext23:
  5537                           	opt stack 0
  5538  002E04                     _Init_UART:
  5539                           	opt stack 29
  5540                           
  5541                           ;Lab5p6_1.c: 54: OpenUSART (0b01111111 & 0b10111111 &
  5542                           ;Lab5p6_1.c: 55: 0b11111110 & 0b11111101 & 0b11111111 &
  5543                           ;Lab5p6_1.c: 56: 0b11111111, 25);
  5544                           
  5545                           ;incstack = 0
  5546  002E04  0E00               	movlw	0
  5547  002E06  6E02               	movwf	OpenUSART@spbrg+1,c
  5548  002E08  0E19               	movlw	25
  5549  002E0A  6E01               	movwf	OpenUSART@spbrg,c
  5550  002E0C  0E3C               	movlw	60
  5551  002E0E  EC63  F015         	call	_OpenUSART
  5552                           
  5553                           ;Lab5p6_1.c: 57: OSCCON = 0x60;
  5554  002E12  0E60               	movlw	96
  5555  002E14  6ED3               	movwf	4051,c	;volatile
  5556  002E16  0012               	return		;funcret
  5557  002E18                     __end_of_Init_UART:
  5558                           	opt stack 0
  5559                           tblptru	equ	0xFF8
  5560                           tblptrh	equ	0xFF7
  5561                           tblptrl	equ	0xFF6
  5562                           tablat	equ	0xFF5
  5563                           prodh	equ	0xFF4
  5564                           prodl	equ	0xFF3
  5565                           postinc0	equ	0xFEE
  5566                           wreg	equ	0xFE8
  5567                           postdec1	equ	0xFE5
  5568                           fsr1l	equ	0xFE1
  5569                           postinc2	equ	0xFDE
  5570                           postdec2	equ	0xFDD
  5571                           fsr2h	equ	0xFDA
  5572                           fsr2l	equ	0xFD9
  5573                           status	equ	0xFD8
  5574                           
  5575 ;; *************** function _OpenUSART *****************
  5576 ;; Defined at:
  5577 ;;		line 73 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  5578 ;; Parameters:    Size  Location     Type
  5579 ;;  config          1    wreg     unsigned char 
  5580 ;;  spbrg           2    0[COMRAM] unsigned int 
  5581 ;; Auto vars:     Size  Location     Type
  5582 ;;  config          1    2[COMRAM] unsigned char 
  5583 ;; Return value:  Size  Location     Type
  5584 ;;		None               void
  5585 ;; Registers used:
  5586 ;;		wreg, status,2
  5587 ;; Tracked objects:
  5588 ;;		On entry : 0/0
  5589 ;;		On exit  : 0/0
  5590 ;;		Unchanged: 0/0
  5591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5592 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5595 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5596 ;;Total ram usage:        3 bytes
  5597 ;; Hardware stack levels used:    1
  5598 ;; This function calls:
  5599 ;;		Nothing
  5600 ;; This function is called by:
  5601 ;;		_Init_UART
  5602 ;; This function uses a non-reentrant model
  5603 ;;
  5604                           
  5605                           	psect	text24
  5606  002AC6                     __ptext24:
  5607                           	opt stack 0
  5608  002AC6                     _OpenUSART:
  5609                           	opt stack 29
  5610                           
  5611                           ;incstack = 0
  5612                           ;OpenUSART@config stored from wreg
  5613  002AC6  6E03               	movwf	OpenUSART@config,c
  5614  002AC8  0E00               	movlw	0
  5615  002ACA  6EAC               	movwf	4012,c	;volatile
  5616  002ACC  0E00               	movlw	0
  5617  002ACE  6EAB               	movwf	4011,c	;volatile
  5618  002AD0  A003               	btfss	OpenUSART@config,0,c
  5619  002AD2  D002               	goto	l2184
  5620  002AD4  88AC               	bsf	4012,4,c	;volatile
  5621  002AD6  D000               	goto	l2184
  5622  002AD8                     l2184:
  5623  002AD8  A203               	btfss	OpenUSART@config,1,c
  5624  002ADA  D003               	goto	l2188
  5625  002ADC  8CAC               	bsf	4012,6,c	;volatile
  5626  002ADE  8CAB               	bsf	4011,6,c	;volatile
  5627  002AE0  D000               	goto	l2188
  5628  002AE2                     l2188:
  5629  002AE2  A403               	btfss	OpenUSART@config,2,c
  5630  002AE4  D002               	goto	l2192
  5631  002AE6  8EAC               	bsf	4012,7,c	;volatile
  5632  002AE8  D000               	goto	l2192
  5633  002AEA                     l2192:
  5634  002AEA  A603               	btfss	OpenUSART@config,3,c
  5635  002AEC  D002               	goto	l283
  5636  002AEE  88AB               	bsf	4011,4,c	;volatile
  5637  002AF0  D002               	goto	l2196
  5638  002AF2                     l283:
  5639  002AF2  8AAB               	bsf	4011,5,c	;volatile
  5640  002AF4  D000               	goto	l2196
  5641  002AF6                     l2196:
  5642  002AF6  B803               	btfsc	OpenUSART@config,4,c
  5643  002AF8  84AC               	bsf	4012,2,c	;volatile
  5644  002AFA  989E               	bcf	3998,4,c	;volatile
  5645  002AFC  AA03               	btfss	OpenUSART@config,5,c
  5646  002AFE  D002               	goto	l2204
  5647  002B00  86AB               	bsf	4011,3,c	;volatile
  5648  002B02  D000               	goto	l2204
  5649  002B04                     l2204:
  5650  002B04  AC03               	btfss	OpenUSART@config,6,c
  5651  002B06  D002               	goto	l287
  5652  002B08  8A9D               	bsf	3997,5,c	;volatile
  5653  002B0A  D001               	goto	l288
  5654  002B0C                     l287:
  5655  002B0C  9A9D               	bcf	3997,5,c	;volatile
  5656  002B0E                     l288:
  5657  002B0E  9A9E               	bcf	3998,5,c	;volatile
  5658  002B10  AE03               	btfss	OpenUSART@config,7,c
  5659  002B12  D002               	goto	l289
  5660  002B14  889D               	bsf	3997,4,c	;volatile
  5661  002B16  D001               	goto	l290
  5662  002B18                     l289:
  5663  002B18  989D               	bcf	3997,4,c	;volatile
  5664  002B1A                     l290:
  5665  002B1A  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5666  002B1E  5002               	movf	OpenUSART@spbrg+1,w,c
  5667  002B20  6EB0               	movwf	4016,c	;volatile
  5668  002B22  8AAC               	bsf	4012,5,c	;volatile
  5669  002B24  8EAB               	bsf	4011,7,c	;volatile
  5670  002B26  9C94               	bcf	3988,6,c	;volatile
  5671  002B28  8E94               	bsf	3988,7,c	;volatile
  5672  002B2A  B8AC               	btfsc	4012,4,c	;volatile
  5673  002B2C  BEAC               	btfsc	4012,7,c	;volatile
  5674  002B2E  D002               	goto	l292
  5675  002B30  8C94               	bsf	3988,6,c	;volatile
  5676  002B32  D000               	goto	l292
  5677  002B34                     l292:
  5678  002B34  0012               	return		;funcret
  5679  002B36                     __end_of_OpenUSART:
  5680                           	opt stack 0
  5681                           tblptru	equ	0xFF8
  5682                           tblptrh	equ	0xFF7
  5683                           tblptrl	equ	0xFF6
  5684                           tablat	equ	0xFF5
  5685                           prodh	equ	0xFF4
  5686                           prodl	equ	0xFF3
  5687                           postinc0	equ	0xFEE
  5688                           wreg	equ	0xFE8
  5689                           postdec1	equ	0xFE5
  5690                           fsr1l	equ	0xFE1
  5691                           postinc2	equ	0xFDE
  5692                           postdec2	equ	0xFDD
  5693                           fsr2h	equ	0xFDA
  5694                           fsr2l	equ	0xFD9
  5695                           status	equ	0xFD8
  5696                           
  5697 ;; *************** function _Init_TRIS *****************
  5698 ;; Defined at:
  5699 ;;		line 104 in file "Lab5p6_1.c"
  5700 ;; Parameters:    Size  Location     Type
  5701 ;;		None
  5702 ;; Auto vars:     Size  Location     Type
  5703 ;;		None
  5704 ;; Return value:  Size  Location     Type
  5705 ;;		None               void
  5706 ;; Registers used:
  5707 ;;		wreg, status,2
  5708 ;; Tracked objects:
  5709 ;;		On entry : 0/0
  5710 ;;		On exit  : 0/0
  5711 ;;		Unchanged: 0/0
  5712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;Total ram usage:        0 bytes
  5718 ;; Hardware stack levels used:    1
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		_main
  5723 ;; This function uses a non-reentrant model
  5724 ;;
  5725                           
  5726                           	psect	text25
  5727  002DEE                     __ptext25:
  5728                           	opt stack 0
  5729  002DEE                     _Init_TRIS:
  5730                           	opt stack 30
  5731                           
  5732                           ;Lab5p6_1.c: 106: TRISA = 0x0F;
  5733                           
  5734                           ;incstack = 0
  5735  002DEE  0E0F               	movlw	15
  5736  002DF0  6E92               	movwf	3986,c	;volatile
  5737                           
  5738                           ;Lab5p6_1.c: 107: TRISB = 0x00;
  5739  002DF2  0E00               	movlw	0
  5740  002DF4  6E93               	movwf	3987,c	;volatile
  5741                           
  5742                           ;Lab5p6_1.c: 108: TRISC = 0x00;
  5743  002DF6  0E00               	movlw	0
  5744  002DF8  6E94               	movwf	3988,c	;volatile
  5745                           
  5746                           ;Lab5p6_1.c: 109: TRISD = 0x00;
  5747  002DFA  0E00               	movlw	0
  5748  002DFC  6E95               	movwf	3989,c	;volatile
  5749                           
  5750                           ;Lab5p6_1.c: 110: TRISE = 0x00;
  5751  002DFE  0E00               	movlw	0
  5752  002E00  6E96               	movwf	3990,c	;volatile
  5753  002E02  0012               	return		;funcret
  5754  002E04                     __end_of_Init_TRIS:
  5755                           	opt stack 0
  5756                           tblptru	equ	0xFF8
  5757                           tblptrh	equ	0xFF7
  5758                           tblptrl	equ	0xFF6
  5759                           tablat	equ	0xFF5
  5760                           prodh	equ	0xFF4
  5761                           prodl	equ	0xFF3
  5762                           postinc0	equ	0xFEE
  5763                           wreg	equ	0xFE8
  5764                           postdec1	equ	0xFE5
  5765                           fsr1l	equ	0xFE1
  5766                           postinc2	equ	0xFDE
  5767                           postdec2	equ	0xFDD
  5768                           fsr2h	equ	0xFDA
  5769                           fsr2l	equ	0xFD9
  5770                           status	equ	0xFD8
  5771                           
  5772 ;; *************** function _Init_ADC *****************
  5773 ;; Defined at:
  5774 ;;		line 112 in file "Lab5p6_1.c"
  5775 ;; Parameters:    Size  Location     Type
  5776 ;;		None
  5777 ;; Auto vars:     Size  Location     Type
  5778 ;;		None
  5779 ;; Return value:  Size  Location     Type
  5780 ;;		None               void
  5781 ;; Registers used:
  5782 ;;		wreg, status,2
  5783 ;; Tracked objects:
  5784 ;;		On entry : 0/0
  5785 ;;		On exit  : 0/0
  5786 ;;		Unchanged: 0/0
  5787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;Total ram usage:        0 bytes
  5793 ;; Hardware stack levels used:    1
  5794 ;; This function calls:
  5795 ;;		Nothing
  5796 ;; This function is called by:
  5797 ;;		_main
  5798 ;; This function uses a non-reentrant model
  5799 ;;
  5800                           
  5801                           	psect	text26
  5802  002E26                     __ptext26:
  5803                           	opt stack 0
  5804  002E26                     _Init_ADC:
  5805                           	opt stack 30
  5806                           
  5807                           ;Lab5p6_1.c: 114: ADCON0 = 0x01;
  5808                           
  5809                           ;incstack = 0
  5810  002E26  0E01               	movlw	1
  5811  002E28  6EC2               	movwf	4034,c	;volatile
  5812                           
  5813                           ;Lab5p6_1.c: 115: ADCON1 = 0x1B;
  5814  002E2A  0E1B               	movlw	27
  5815  002E2C  6EC1               	movwf	4033,c	;volatile
  5816                           
  5817                           ;Lab5p6_1.c: 116: ADCON2 = 0xA9;
  5818  002E2E  0EA9               	movlw	169
  5819  002E30  6EC0               	movwf	4032,c	;volatile
  5820  002E32  0012               	return		;funcret
  5821  002E34                     __end_of_Init_ADC:
  5822                           	opt stack 0
  5823                           tblptru	equ	0xFF8
  5824                           tblptrh	equ	0xFF7
  5825                           tblptrl	equ	0xFF6
  5826                           tablat	equ	0xFF5
  5827                           prodh	equ	0xFF4
  5828                           prodl	equ	0xFF3
  5829                           postinc0	equ	0xFEE
  5830                           wreg	equ	0xFE8
  5831                           postdec1	equ	0xFE5
  5832                           fsr1l	equ	0xFE1
  5833                           postinc2	equ	0xFDE
  5834                           postdec2	equ	0xFDD
  5835                           fsr2h	equ	0xFDA
  5836                           fsr2l	equ	0xFD9
  5837                           status	equ	0xFD8
  5838                           
  5839 ;; *************** function _Get_Full_ADC *****************
  5840 ;; Defined at:
  5841 ;;		line 119 in file "Lab5p6_1.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;		None
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  result          2    4[COMRAM] int 
  5846 ;; Return value:  Size  Location     Type
  5847 ;;                  2    0[COMRAM] unsigned int 
  5848 ;; Registers used:
  5849 ;;		wreg, status,2, status,0
  5850 ;; Tracked objects:
  5851 ;;		On entry : 0/0
  5852 ;;		On exit  : 0/0
  5853 ;;		Unchanged: 0/0
  5854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5855 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5857 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5858 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;Total ram usage:        6 bytes
  5860 ;; Hardware stack levels used:    1
  5861 ;; This function calls:
  5862 ;;		Nothing
  5863 ;; This function is called by:
  5864 ;;		_main
  5865 ;; This function uses a non-reentrant model
  5866 ;;
  5867                           
  5868                           	psect	text27
  5869  002D68                     __ptext27:
  5870                           	opt stack 0
  5871  002D68                     _Get_Full_ADC:
  5872                           	opt stack 30
  5873                           
  5874                           ;Lab5p6_1.c: 121: int result;
  5875                           ;Lab5p6_1.c: 122: ADCON0bits.GO=1;
  5876                           
  5877                           ;incstack = 0
  5878  002D68  82C2               	bsf	4034,1,c	;volatile
  5879                           
  5880                           ;Lab5p6_1.c: 123: while(ADCON0bits.DONE==1);
  5881  002D6A  D000               	goto	l112
  5882  002D6C                     l112:
  5883  002D6C  B2C2               	btfsc	4034,1,c	;volatile
  5884  002D6E  D7FE               	goto	l112
  5885                           
  5886                           ;Lab5p6_1.c: 124: result = (ADRESH * 0x100) + ADRESL;
  5887  002D70  50C4               	movf	4036,w,c	;volatile
  5888  002D72  6E04               	movwf	(??_Get_Full_ADC+1)& (0+255),c
  5889  002D74  6A03               	clrf	??_Get_Full_ADC& (0+255),c
  5890  002D76  50C3               	movf	4035,w,c	;volatile
  5891  002D78  2403               	addwf	??_Get_Full_ADC,w,c
  5892  002D7A  6E05               	movwf	Get_Full_ADC@result,c
  5893  002D7C  0E00               	movlw	0
  5894  002D7E  2004               	addwfc	??_Get_Full_ADC+1,w,c
  5895  002D80  6E06               	movwf	Get_Full_ADC@result+1,c
  5896                           
  5897                           ;Lab5p6_1.c: 126: return result;
  5898  002D82  C005  F001         	movff	Get_Full_ADC@result,?_Get_Full_ADC
  5899  002D86  C006  F002         	movff	Get_Full_ADC@result+1,?_Get_Full_ADC+1
  5900  002D8A  D000               	goto	l115
  5901  002D8C                     l115:
  5902  002D8C  0012               	return		;funcret
  5903  002D8E                     __end_of_Get_Full_ADC:
  5904                           	opt stack 0
  5905                           tblptru	equ	0xFF8
  5906                           tblptrh	equ	0xFF7
  5907                           tblptrl	equ	0xFF6
  5908                           tablat	equ	0xFF5
  5909                           prodh	equ	0xFF4
  5910                           prodl	equ	0xFF3
  5911                           postinc0	equ	0xFEE
  5912                           wreg	equ	0xFE8
  5913                           postdec1	equ	0xFE5
  5914                           fsr1l	equ	0xFE1
  5915                           postinc2	equ	0xFDE
  5916                           postdec2	equ	0xFDD
  5917                           fsr2h	equ	0xFDA
  5918                           fsr2l	equ	0xFD9
  5919                           status	equ	0xFD8
  5920                           
  5921 ;; *************** function _Display_Upper_Digit *****************
  5922 ;; Defined at:
  5923 ;;		line 129 in file "Lab5p6_1.c"
  5924 ;; Parameters:    Size  Location     Type
  5925 ;;  digit           1    wreg     unsigned char 
  5926 ;; Auto vars:     Size  Location     Type
  5927 ;;  digit           1    1[COMRAM] unsigned char 
  5928 ;;  PE              1    0[COMRAM] unsigned char 
  5929 ;; Return value:  Size  Location     Type
  5930 ;;		None               void
  5931 ;; Registers used:
  5932 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  5933 ;; Tracked objects:
  5934 ;;		On entry : 0/0
  5935 ;;		On exit  : 0/0
  5936 ;;		Unchanged: 0/0
  5937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5939 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;Total ram usage:        2 bytes
  5943 ;; Hardware stack levels used:    1
  5944 ;; This function calls:
  5945 ;;		Nothing
  5946 ;; This function is called by:
  5947 ;;		_main
  5948 ;; This function uses a non-reentrant model
  5949 ;;
  5950                           
  5951                           	psect	text28
  5952  002C9A                     __ptext28:
  5953                           	opt stack 0
  5954  002C9A                     _Display_Upper_Digit:
  5955                           	opt stack 30
  5956                           
  5957                           ;incstack = 0
  5958                           ;Display_Upper_Digit@digit stored from wreg
  5959  002C9A  6E02               	movwf	Display_Upper_Digit@digit,c
  5960                           
  5961                           ;Lab5p6_1.c: 131: PORTC = array[digit] & 0x3F;
  5962  002C9C  5002               	movf	Display_Upper_Digit@digit,w,c
  5963  002C9E  0D01               	mullw	1
  5964  002CA0  0E75               	movlw	low _array
  5965  002CA2  24F3               	addwf	prodl,w,c
  5966  002CA4  6ED9               	movwf	fsr2l,c
  5967  002CA6  0E00               	movlw	high _array
  5968  002CA8  20F4               	addwfc	prodh,w,c
  5969  002CAA  6EDA               	movwf	fsr2h,c
  5970  002CAC  50DF               	movf	indf2,w,c
  5971  002CAE  0B3F               	andlw	63
  5972  002CB0  6E82               	movwf	3970,c	;volatile
  5973                           
  5974                           ;Lab5p6_1.c: 132: char PE = array[digit] & 0x40;
  5975  002CB2  5002               	movf	Display_Upper_Digit@digit,w,c
  5976  002CB4  0D01               	mullw	1
  5977  002CB6  0E75               	movlw	low _array
  5978  002CB8  24F3               	addwf	prodl,w,c
  5979  002CBA  6ED9               	movwf	fsr2l,c
  5980  002CBC  0E00               	movlw	high _array
  5981  002CBE  20F4               	addwfc	prodh,w,c
  5982  002CC0  6EDA               	movwf	fsr2h,c
  5983  002CC2  50DF               	movf	indf2,w,c
  5984  002CC4  0B40               	andlw	64
  5985  002CC6  6E01               	movwf	Display_Upper_Digit@PE,c
  5986                           
  5987                           ;Lab5p6_1.c: 133: if (PE == 0) PORTE = 0x00;
  5988  002CC8  5001               	movf	Display_Upper_Digit@PE,w,c
  5989  002CCA  A4D8               	btfss	status,2,c
  5990  002CCC  D002               	goto	l1576
  5991  002CCE  0E00               	movlw	0
  5992  002CD0  D001               	goto	L8
  5993  002CD2                     l1576:
  5994                           
  5995                           ;Lab5p6_1.c: 134: else PORTE = 0x03;
  5996  002CD2  0E03               	movlw	3
  5997  002CD4                     L8:
  5998  002CD4  6E84               	movwf	3972,c	;volatile
  5999  002CD6  D000               	goto	l120
  6000  002CD8                     l120:
  6001  002CD8  0012               	return		;funcret
  6002  002CDA                     __end_of_Display_Upper_Digit:
  6003                           	opt stack 0
  6004                           tblptru	equ	0xFF8
  6005                           tblptrh	equ	0xFF7
  6006                           tblptrl	equ	0xFF6
  6007                           tablat	equ	0xFF5
  6008                           prodh	equ	0xFF4
  6009                           prodl	equ	0xFF3
  6010                           postinc0	equ	0xFEE
  6011                           wreg	equ	0xFE8
  6012                           postdec1	equ	0xFE5
  6013                           fsr1l	equ	0xFE1
  6014                           indf2	equ	0xFDF
  6015                           postinc2	equ	0xFDE
  6016                           postdec2	equ	0xFDD
  6017                           fsr2h	equ	0xFDA
  6018                           fsr2l	equ	0xFD9
  6019                           status	equ	0xFD8
  6020                           
  6021 ;; *************** function _Display_Lower_Digit *****************
  6022 ;; Defined at:
  6023 ;;		line 137 in file "Lab5p6_1.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  digit           1    wreg     unsigned char 
  6026 ;; Auto vars:     Size  Location     Type
  6027 ;;  digit           1    0[COMRAM] unsigned char 
  6028 ;; Return value:  Size  Location     Type
  6029 ;;		None               void
  6030 ;; Registers used:
  6031 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  6032 ;; Tracked objects:
  6033 ;;		On entry : 0/0
  6034 ;;		On exit  : 0/0
  6035 ;;		Unchanged: 0/0
  6036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6038 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6040 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6041 ;;Total ram usage:        1 bytes
  6042 ;; Hardware stack levels used:    1
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_main
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           	psect	text29
  6051  002DD6                     __ptext29:
  6052                           	opt stack 0
  6053  002DD6                     _Display_Lower_Digit:
  6054                           	opt stack 30
  6055                           
  6056                           ;incstack = 0
  6057                           ;Display_Lower_Digit@digit stored from wreg
  6058  002DD6  6E01               	movwf	Display_Lower_Digit@digit,c
  6059                           
  6060                           ;Lab5p6_1.c: 139: PORTD = array[digit];
  6061  002DD8  5001               	movf	Display_Lower_Digit@digit,w,c
  6062  002DDA  0D01               	mullw	1
  6063  002DDC  0E75               	movlw	low _array
  6064  002DDE  24F3               	addwf	prodl,w,c
  6065  002DE0  6ED9               	movwf	fsr2l,c
  6066  002DE2  0E00               	movlw	high _array
  6067  002DE4  20F4               	addwfc	prodh,w,c
  6068  002DE6  6EDA               	movwf	fsr2h,c
  6069  002DE8  50DF               	movf	indf2,w,c
  6070  002DEA  6E83               	movwf	3971,c	;volatile
  6071  002DEC  0012               	return		;funcret
  6072  002DEE                     __end_of_Display_Lower_Digit:
  6073                           	opt stack 0
  6074                           tblptru	equ	0xFF8
  6075                           tblptrh	equ	0xFF7
  6076                           tblptrl	equ	0xFF6
  6077                           tablat	equ	0xFF5
  6078                           prodh	equ	0xFF4
  6079                           prodl	equ	0xFF3
  6080                           postinc0	equ	0xFEE
  6081                           wreg	equ	0xFE8
  6082                           postdec1	equ	0xFE5
  6083                           fsr1l	equ	0xFE1
  6084                           indf2	equ	0xFDF
  6085                           postinc2	equ	0xFDE
  6086                           postdec2	equ	0xFDD
  6087                           fsr2h	equ	0xFDA
  6088                           fsr2l	equ	0xFD9
  6089                           status	equ	0xFD8
  6090                           
  6091 ;; *************** function _DO_DISPLAY_D3 *****************
  6092 ;; Defined at:
  6093 ;;		line 184 in file "Lab5p6_1.c"
  6094 ;; Parameters:    Size  Location     Type
  6095 ;;  voltage         2    0[COMRAM] int 
  6096 ;; Auto vars:     Size  Location     Type
  6097 ;;		None
  6098 ;; Return value:  Size  Location     Type
  6099 ;;		None               void
  6100 ;; Registers used:
  6101 ;;		wreg, status,2, status,0, cstack
  6102 ;; Tracked objects:
  6103 ;;		On entry : 0/0
  6104 ;;		On exit  : 0/0
  6105 ;;		Unchanged: 0/0
  6106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6107 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6111 ;;Total ram usage:        2 bytes
  6112 ;; Hardware stack levels used:    1
  6113 ;; Hardware stack levels required when called:    1
  6114 ;; This function calls:
  6115 ;;		_SET_D3_GREEN
  6116 ;;		_SET_D3_RED
  6117 ;;		_SET_D3_YELLOW
  6118 ;; This function is called by:
  6119 ;;		_main
  6120 ;; This function uses a non-reentrant model
  6121 ;;
  6122                           
  6123                           	psect	text30
  6124  002C02                     __ptext30:
  6125                           	opt stack 0
  6126  002C02                     _DO_DISPLAY_D3:
  6127                           	opt stack 29
  6128                           
  6129                           ;Lab5p6_1.c: 186: if (voltage < 2500)
  6130                           
  6131                           ;incstack = 0
  6132  002C02  BE02               	btfsc	DO_DISPLAY_D3@voltage+1,7,c
  6133  002C04  D006               	goto	l2768
  6134  002C06  0EC4               	movlw	196
  6135  002C08  5C01               	subwf	DO_DISPLAY_D3@voltage,w,c
  6136  002C0A  0E09               	movlw	9
  6137  002C0C  5802               	subwfb	DO_DISPLAY_D3@voltage+1,w,c
  6138  002C0E  B0D8               	btfsc	status,0,c
  6139  002C10  D003               	goto	l2770
  6140  002C12                     l2768:
  6141                           
  6142                           ;Lab5p6_1.c: 187: {
  6143                           ;Lab5p6_1.c: 188: SET_D3_RED();
  6144  002C12  EC3C  F017         	call	_SET_D3_RED	;wreg free
  6145  002C16  D000               	goto	l2770
  6146  002C18                     l2770:
  6147                           
  6148                           ;Lab5p6_1.c: 189: }
  6149                           ;Lab5p6_1.c: 190: if (voltage >= 2500 && voltage < 3500)
  6150  002C18  BE02               	btfsc	DO_DISPLAY_D3@voltage+1,7,c
  6151  002C1A  D011               	goto	l2776
  6152  002C1C  0EC4               	movlw	196
  6153  002C1E  5C01               	subwf	DO_DISPLAY_D3@voltage,w,c
  6154  002C20  0E09               	movlw	9
  6155  002C22  5802               	subwfb	DO_DISPLAY_D3@voltage+1,w,c
  6156  002C24  A0D8               	btfss	status,0,c
  6157  002C26  D00B               	goto	l2776
  6158  002C28  BE02               	btfsc	DO_DISPLAY_D3@voltage+1,7,c
  6159  002C2A  D006               	goto	l2774
  6160  002C2C  0EAC               	movlw	172
  6161  002C2E  5C01               	subwf	DO_DISPLAY_D3@voltage,w,c
  6162  002C30  0E0D               	movlw	13
  6163  002C32  5802               	subwfb	DO_DISPLAY_D3@voltage+1,w,c
  6164  002C34  B0D8               	btfsc	status,0,c
  6165  002C36  D003               	goto	l2776
  6166  002C38                     l2774:
  6167                           
  6168                           ;Lab5p6_1.c: 191: {
  6169                           ;Lab5p6_1.c: 192: SET_D3_GREEN();
  6170  002C38  EC3F  F017         	call	_SET_D3_GREEN	;wreg free
  6171  002C3C  D000               	goto	l2776
  6172  002C3E                     l2776:
  6173                           
  6174                           ;Lab5p6_1.c: 193: }
  6175                           ;Lab5p6_1.c: 194: if (voltage >= 3500)
  6176  002C3E  BE02               	btfsc	DO_DISPLAY_D3@voltage+1,7,c
  6177  002C40  D009               	goto	l143
  6178  002C42  0EAC               	movlw	172
  6179  002C44  5C01               	subwf	DO_DISPLAY_D3@voltage,w,c
  6180  002C46  0E0D               	movlw	13
  6181  002C48  5802               	subwfb	DO_DISPLAY_D3@voltage+1,w,c
  6182  002C4A  A0D8               	btfss	status,0,c
  6183  002C4C  D003               	goto	l143
  6184                           
  6185                           ;Lab5p6_1.c: 195: {
  6186                           ;Lab5p6_1.c: 196: SET_D3_YELLOW();
  6187  002C4E  EC39  F017         	call	_SET_D3_YELLOW	;wreg free
  6188  002C52  D000               	goto	l143
  6189  002C54                     l143:
  6190  002C54  0012               	return		;funcret
  6191  002C56                     __end_of_DO_DISPLAY_D3:
  6192                           	opt stack 0
  6193                           tblptru	equ	0xFF8
  6194                           tblptrh	equ	0xFF7
  6195                           tblptrl	equ	0xFF6
  6196                           tablat	equ	0xFF5
  6197                           prodh	equ	0xFF4
  6198                           prodl	equ	0xFF3
  6199                           postinc0	equ	0xFEE
  6200                           wreg	equ	0xFE8
  6201                           postdec1	equ	0xFE5
  6202                           fsr1l	equ	0xFE1
  6203                           indf2	equ	0xFDF
  6204                           postinc2	equ	0xFDE
  6205                           postdec2	equ	0xFDD
  6206                           fsr2h	equ	0xFDA
  6207                           fsr2l	equ	0xFD9
  6208                           status	equ	0xFD8
  6209                           
  6210 ;; *************** function _SET_D3_YELLOW *****************
  6211 ;; Defined at:
  6212 ;;		line 247 in file "Lab5p6_1.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;		None               void
  6219 ;; Registers used:
  6220 ;;		None
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used:    1
  6232 ;; This function calls:
  6233 ;;		Nothing
  6234 ;; This function is called by:
  6235 ;;		_DO_DISPLAY_D3
  6236 ;; This function uses a non-reentrant model
  6237 ;;
  6238                           
  6239                           	psect	text31
  6240  002E72                     __ptext31:
  6241                           	opt stack 0
  6242  002E72                     _SET_D3_YELLOW:
  6243                           	opt stack 29
  6244                           
  6245                           ;Lab5p6_1.c: 249: PORTAbits.RA4 = 1;
  6246                           
  6247                           ;incstack = 0
  6248  002E72  8880               	bsf	3968,4,c	;volatile
  6249                           
  6250                           ;Lab5p6_1.c: 250: PORTAbits.RA5 = 1;
  6251  002E74  8A80               	bsf	3968,5,c	;volatile
  6252  002E76  0012               	return		;funcret
  6253  002E78                     __end_of_SET_D3_YELLOW:
  6254                           	opt stack 0
  6255                           tblptru	equ	0xFF8
  6256                           tblptrh	equ	0xFF7
  6257                           tblptrl	equ	0xFF6
  6258                           tablat	equ	0xFF5
  6259                           prodh	equ	0xFF4
  6260                           prodl	equ	0xFF3
  6261                           postinc0	equ	0xFEE
  6262                           wreg	equ	0xFE8
  6263                           postdec1	equ	0xFE5
  6264                           fsr1l	equ	0xFE1
  6265                           indf2	equ	0xFDF
  6266                           postinc2	equ	0xFDE
  6267                           postdec2	equ	0xFDD
  6268                           fsr2h	equ	0xFDA
  6269                           fsr2l	equ	0xFD9
  6270                           status	equ	0xFD8
  6271                           
  6272 ;; *************** function _SET_D3_RED *****************
  6273 ;; Defined at:
  6274 ;;		line 235 in file "Lab5p6_1.c"
  6275 ;; Parameters:    Size  Location     Type
  6276 ;;		None
  6277 ;; Auto vars:     Size  Location     Type
  6278 ;;		None
  6279 ;; Return value:  Size  Location     Type
  6280 ;;		None               void
  6281 ;; Registers used:
  6282 ;;		None
  6283 ;; Tracked objects:
  6284 ;;		On entry : 0/0
  6285 ;;		On exit  : 0/0
  6286 ;;		Unchanged: 0/0
  6287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;Total ram usage:        0 bytes
  6293 ;; Hardware stack levels used:    1
  6294 ;; This function calls:
  6295 ;;		Nothing
  6296 ;; This function is called by:
  6297 ;;		_DO_DISPLAY_D3
  6298 ;; This function uses a non-reentrant model
  6299 ;;
  6300                           
  6301                           	psect	text32
  6302  002E78                     __ptext32:
  6303                           	opt stack 0
  6304  002E78                     _SET_D3_RED:
  6305                           	opt stack 29
  6306                           
  6307                           ;Lab5p6_1.c: 237: PORTAbits.RA4 = 1;
  6308                           
  6309                           ;incstack = 0
  6310  002E78  8880               	bsf	3968,4,c	;volatile
  6311                           
  6312                           ;Lab5p6_1.c: 238: PORTAbits.RA5 = 0;
  6313  002E7A  9A80               	bcf	3968,5,c	;volatile
  6314  002E7C  0012               	return		;funcret
  6315  002E7E                     __end_of_SET_D3_RED:
  6316                           	opt stack 0
  6317                           tblptru	equ	0xFF8
  6318                           tblptrh	equ	0xFF7
  6319                           tblptrl	equ	0xFF6
  6320                           tablat	equ	0xFF5
  6321                           prodh	equ	0xFF4
  6322                           prodl	equ	0xFF3
  6323                           postinc0	equ	0xFEE
  6324                           wreg	equ	0xFE8
  6325                           postdec1	equ	0xFE5
  6326                           fsr1l	equ	0xFE1
  6327                           indf2	equ	0xFDF
  6328                           postinc2	equ	0xFDE
  6329                           postdec2	equ	0xFDD
  6330                           fsr2h	equ	0xFDA
  6331                           fsr2l	equ	0xFD9
  6332                           status	equ	0xFD8
  6333                           
  6334 ;; *************** function _SET_D3_GREEN *****************
  6335 ;; Defined at:
  6336 ;;		line 241 in file "Lab5p6_1.c"
  6337 ;; Parameters:    Size  Location     Type
  6338 ;;		None
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;		None
  6341 ;; Return value:  Size  Location     Type
  6342 ;;		None               void
  6343 ;; Registers used:
  6344 ;;		None
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6354 ;;Total ram usage:        0 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; This function calls:
  6357 ;;		Nothing
  6358 ;; This function is called by:
  6359 ;;		_DO_DISPLAY_D3
  6360 ;; This function uses a non-reentrant model
  6361 ;;
  6362                           
  6363                           	psect	text33
  6364  002E7E                     __ptext33:
  6365                           	opt stack 0
  6366  002E7E                     _SET_D3_GREEN:
  6367                           	opt stack 29
  6368                           
  6369                           ;Lab5p6_1.c: 243: PORTAbits.RA4 = 0;
  6370                           
  6371                           ;incstack = 0
  6372  002E7E  9880               	bcf	3968,4,c	;volatile
  6373                           
  6374                           ;Lab5p6_1.c: 244: PORTAbits.RA5 = 1;
  6375  002E80  8A80               	bsf	3968,5,c	;volatile
  6376  002E82  0012               	return		;funcret
  6377  002E84                     __end_of_SET_D3_GREEN:
  6378                           	opt stack 0
  6379                           tblptru	equ	0xFF8
  6380                           tblptrh	equ	0xFF7
  6381                           tblptrl	equ	0xFF6
  6382                           tablat	equ	0xFF5
  6383                           prodh	equ	0xFF4
  6384                           prodl	equ	0xFF3
  6385                           postinc0	equ	0xFEE
  6386                           wreg	equ	0xFE8
  6387                           postdec1	equ	0xFE5
  6388                           fsr1l	equ	0xFE1
  6389                           indf2	equ	0xFDF
  6390                           postinc2	equ	0xFDE
  6391                           postdec2	equ	0xFDD
  6392                           fsr2h	equ	0xFDA
  6393                           fsr2l	equ	0xFD9
  6394                           status	equ	0xFD8
  6395                           
  6396 ;; *************** function _DO_DISPLAY_D2 *****************
  6397 ;; Defined at:
  6398 ;;		line 166 in file "Lab5p6_1.c"
  6399 ;; Parameters:    Size  Location     Type
  6400 ;;  temp            2   14[COMRAM] int 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  T               2   16[COMRAM] int 
  6403 ;; Return value:  Size  Location     Type
  6404 ;;		None               void
  6405 ;; Registers used:
  6406 ;;		wreg, status,2, status,0, cstack
  6407 ;; Tracked objects:
  6408 ;;		On entry : 0/0
  6409 ;;		On exit  : 0/0
  6410 ;;		Unchanged: 0/0
  6411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6412 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6413 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6415 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6416 ;;Total ram usage:        4 bytes
  6417 ;; Hardware stack levels used:    1
  6418 ;; Hardware stack levels required when called:    1
  6419 ;; This function calls:
  6420 ;;		___awdiv
  6421 ;; This function is called by:
  6422 ;;		_main
  6423 ;; This function uses a non-reentrant model
  6424 ;;
  6425                           
  6426                           	psect	text34
  6427  002B36                     __ptext34:
  6428                           	opt stack 0
  6429  002B36                     _DO_DISPLAY_D2:
  6430                           	opt stack 29
  6431                           
  6432                           ;Lab5p6_1.c: 168: int T = temp / 10;
  6433                           
  6434                           ;incstack = 0
  6435  002B36  C00F  F007         	movff	DO_DISPLAY_D2@temp,___awdiv@dividend
  6436  002B3A  C010  F008         	movff	DO_DISPLAY_D2@temp+1,___awdiv@dividend+1
  6437  002B3E  0E00               	movlw	0
  6438  002B40  6E0A               	movwf	___awdiv@divisor+1,c
  6439  002B42  0E0A               	movlw	10
  6440  002B44  6E09               	movwf	___awdiv@divisor,c
  6441  002B46  EC59  F014         	call	___awdiv	;wreg free
  6442  002B4A  C007  F011         	movff	?___awdiv,DO_DISPLAY_D2@T
  6443  002B4E  C008  F012         	movff	?___awdiv+1,DO_DISPLAY_D2@T+1
  6444                           
  6445                           ;Lab5p6_1.c: 169: if (T > 0 && T < 8)
  6446  002B52  BE12               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6447  002B54  D010               	goto	l2732
  6448  002B56  5012               	movf	DO_DISPLAY_D2@T+1,w,c
  6449  002B58  E103               	bnz	u2920
  6450  002B5A  0411               	decf	DO_DISPLAY_D2@T,w,c
  6451  002B5C  A0D8               	btfss	status,0,c
  6452  002B5E  D00B               	goto	l2732
  6453  002B60                     u2920:
  6454  002B60  BE12               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6455  002B62  D006               	goto	l2730
  6456  002B64  5012               	movf	DO_DISPLAY_D2@T+1,w,c
  6457  002B66  E107               	bnz	l2732
  6458  002B68  0E08               	movlw	8
  6459  002B6A  5C11               	subwf	DO_DISPLAY_D2@T,w,c
  6460  002B6C  B0D8               	btfsc	status,0,c
  6461  002B6E  D003               	goto	l2732
  6462  002B70                     l2730:
  6463                           
  6464                           ;Lab5p6_1.c: 170: {
  6465                           ;Lab5p6_1.c: 171: PORTB = T;
  6466  002B70  C011  FF81         	movff	DO_DISPLAY_D2@T,3969	;volatile
  6467  002B74  D000               	goto	l2732
  6468  002B76                     l2732:
  6469                           
  6470                           ;Lab5p6_1.c: 172: }
  6471                           ;Lab5p6_1.c: 173: if (T <= 0)
  6472  002B76  BE12               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6473  002B78  D005               	goto	l2734
  6474  002B7A  5012               	movf	DO_DISPLAY_D2@T+1,w,c
  6475  002B7C  E106               	bnz	l2736
  6476  002B7E  0411               	decf	DO_DISPLAY_D2@T,w,c
  6477  002B80  B0D8               	btfsc	status,0,c
  6478  002B82  D003               	goto	l2736
  6479  002B84                     l2734:
  6480                           
  6481                           ;Lab5p6_1.c: 174: {
  6482                           ;Lab5p6_1.c: 175: PORTB = 0x00;
  6483  002B84  0E00               	movlw	0
  6484  002B86  6E81               	movwf	3969,c	;volatile
  6485  002B88  D000               	goto	l2736
  6486  002B8A                     l2736:
  6487                           
  6488                           ;Lab5p6_1.c: 176: }
  6489                           ;Lab5p6_1.c: 177: if (T >= 8)
  6490  002B8A  BE12               	btfsc	DO_DISPLAY_D2@T+1,7,c
  6491  002B8C  D009               	goto	l137
  6492  002B8E  5012               	movf	DO_DISPLAY_D2@T+1,w,c
  6493  002B90  E104               	bnz	u2950
  6494  002B92  0E08               	movlw	8
  6495  002B94  5C11               	subwf	DO_DISPLAY_D2@T,w,c
  6496  002B96  A0D8               	btfss	status,0,c
  6497  002B98  D003               	goto	l137
  6498  002B9A                     u2950:
  6499                           
  6500                           ;Lab5p6_1.c: 178: {
  6501                           ;Lab5p6_1.c: 179: PORTB = 0x07;
  6502  002B9A  0E07               	movlw	7
  6503  002B9C  6E81               	movwf	3969,c	;volatile
  6504  002B9E  D000               	goto	l137
  6505  002BA0                     l137:
  6506  002BA0  0012               	return		;funcret
  6507  002BA2                     __end_of_DO_DISPLAY_D2:
  6508                           	opt stack 0
  6509                           tblptru	equ	0xFF8
  6510                           tblptrh	equ	0xFF7
  6511                           tblptrl	equ	0xFF6
  6512                           tablat	equ	0xFF5
  6513                           prodh	equ	0xFF4
  6514                           prodl	equ	0xFF3
  6515                           postinc0	equ	0xFEE
  6516                           wreg	equ	0xFE8
  6517                           postdec1	equ	0xFE5
  6518                           fsr1l	equ	0xFE1
  6519                           indf2	equ	0xFDF
  6520                           postinc2	equ	0xFDE
  6521                           postdec2	equ	0xFDD
  6522                           fsr2h	equ	0xFDA
  6523                           fsr2l	equ	0xFD9
  6524                           status	equ	0xFD8
  6525                           
  6526 ;; *************** function ___awdiv *****************
  6527 ;; Defined at:
  6528 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  6529 ;; Parameters:    Size  Location     Type
  6530 ;;  dividend        2    6[COMRAM] int 
  6531 ;;  divisor         2    8[COMRAM] int 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  quotient        2   12[COMRAM] int 
  6534 ;;  sign            1   11[COMRAM] unsigned char 
  6535 ;;  counter         1   10[COMRAM] unsigned char 
  6536 ;; Return value:  Size  Location     Type
  6537 ;;                  2    6[COMRAM] int 
  6538 ;; Registers used:
  6539 ;;		wreg, status,2, status,0
  6540 ;; Tracked objects:
  6541 ;;		On entry : 0/0
  6542 ;;		On exit  : 0/0
  6543 ;;		Unchanged: 0/0
  6544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6546 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6548 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6549 ;;Total ram usage:        8 bytes
  6550 ;; Hardware stack levels used:    1
  6551 ;; This function calls:
  6552 ;;		Nothing
  6553 ;; This function is called by:
  6554 ;;		_main
  6555 ;;		_DO_DISPLAY_D2
  6556 ;;		_fround
  6557 ;;		_scale
  6558 ;;		_printf
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           	psect	text35
  6563  0028B2                     __ptext35:
  6564                           	opt stack 0
  6565  0028B2                     ___awdiv:
  6566                           	opt stack 28
  6567                           
  6568                           ;incstack = 0
  6569  0028B2  0E00               	movlw	0
  6570  0028B4  6E0C               	movwf	___awdiv@sign,c
  6571  0028B6  AE0A               	btfss	___awdiv@divisor+1,7,c
  6572  0028B8  D007               	goto	l2102
  6573  0028BA  6C09               	negf	___awdiv@divisor,c
  6574  0028BC  1E0A               	comf	___awdiv@divisor+1,f,c
  6575  0028BE  B0D8               	btfsc	status,0,c
  6576  0028C0  2A0A               	incf	___awdiv@divisor+1,f,c
  6577  0028C2  0E01               	movlw	1
  6578  0028C4  6E0C               	movwf	___awdiv@sign,c
  6579  0028C6  D000               	goto	l2102
  6580  0028C8                     l2102:
  6581  0028C8  AE08               	btfss	___awdiv@dividend+1,7,c
  6582  0028CA  D007               	goto	l2108
  6583  0028CC  6C07               	negf	___awdiv@dividend,c
  6584  0028CE  1E08               	comf	___awdiv@dividend+1,f,c
  6585  0028D0  B0D8               	btfsc	status,0,c
  6586  0028D2  2A08               	incf	___awdiv@dividend+1,f,c
  6587  0028D4  0E01               	movlw	1
  6588  0028D6  1A0C               	xorwf	___awdiv@sign,f,c
  6589  0028D8  D000               	goto	l2108
  6590  0028DA                     l2108:
  6591  0028DA  0E00               	movlw	0
  6592  0028DC  6E0E               	movwf	___awdiv@quotient+1,c
  6593  0028DE  0E00               	movlw	0
  6594  0028E0  6E0D               	movwf	___awdiv@quotient,c
  6595  0028E2  5009               	movf	___awdiv@divisor,w,c
  6596  0028E4  100A               	iorwf	___awdiv@divisor+1,w,c
  6597  0028E6  B4D8               	btfsc	status,2,c
  6598  0028E8  D021               	goto	l2130
  6599  0028EA  0E01               	movlw	1
  6600  0028EC  6E0B               	movwf	___awdiv@counter,c
  6601  0028EE  D005               	goto	l2116
  6602  0028F0                     l2114:
  6603  0028F0  90D8               	bcf	status,0,c
  6604  0028F2  3609               	rlcf	___awdiv@divisor,f,c
  6605  0028F4  360A               	rlcf	___awdiv@divisor+1,f,c
  6606  0028F6  2A0B               	incf	___awdiv@counter,f,c
  6607  0028F8  D000               	goto	l2116
  6608  0028FA                     l2116:
  6609  0028FA  BE0A               	btfsc	___awdiv@divisor+1,7,c
  6610  0028FC  D002               	goto	l2118
  6611  0028FE  D7F8               	goto	l2114
  6612  002900  D000               	goto	l2118
  6613  002902                     l2118:
  6614  002902  90D8               	bcf	status,0,c
  6615  002904  360D               	rlcf	___awdiv@quotient,f,c
  6616  002906  360E               	rlcf	___awdiv@quotient+1,f,c
  6617  002908  5009               	movf	___awdiv@divisor,w,c
  6618  00290A  5C07               	subwf	___awdiv@dividend,w,c
  6619  00290C  500A               	movf	___awdiv@divisor+1,w,c
  6620  00290E  5808               	subwfb	___awdiv@dividend+1,w,c
  6621  002910  A0D8               	btfss	status,0,c
  6622  002912  D006               	goto	l2126
  6623  002914  5009               	movf	___awdiv@divisor,w,c
  6624  002916  5E07               	subwf	___awdiv@dividend,f,c
  6625  002918  500A               	movf	___awdiv@divisor+1,w,c
  6626  00291A  5A08               	subwfb	___awdiv@dividend+1,f,c
  6627  00291C  800D               	bsf	___awdiv@quotient,0,c
  6628  00291E  D000               	goto	l2126
  6629  002920                     l2126:
  6630  002920  90D8               	bcf	status,0,c
  6631  002922  320A               	rrcf	___awdiv@divisor+1,f,c
  6632  002924  3209               	rrcf	___awdiv@divisor,f,c
  6633  002926  2E0B               	decfsz	___awdiv@counter,f,c
  6634  002928  D7EC               	goto	l2118
  6635  00292A  D000               	goto	l2130
  6636  00292C                     l2130:
  6637  00292C  500C               	movf	___awdiv@sign,w,c
  6638  00292E  B4D8               	btfsc	status,2,c
  6639  002930  D005               	goto	l2134
  6640  002932  6C0D               	negf	___awdiv@quotient,c
  6641  002934  1E0E               	comf	___awdiv@quotient+1,f,c
  6642  002936  B0D8               	btfsc	status,0,c
  6643  002938  2A0E               	incf	___awdiv@quotient+1,f,c
  6644  00293A  D000               	goto	l2134
  6645  00293C                     l2134:
  6646  00293C  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  6647  002940  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  6648  002944  D000               	goto	l488
  6649  002946                     l488:
  6650  002946  0012               	return		;funcret
  6651  002948                     __end_of___awdiv:
  6652                           	opt stack 0
  6653                           tblptru	equ	0xFF8
  6654                           tblptrh	equ	0xFF7
  6655                           tblptrl	equ	0xFF6
  6656                           tablat	equ	0xFF5
  6657                           prodh	equ	0xFF4
  6658                           prodl	equ	0xFF3
  6659                           postinc0	equ	0xFEE
  6660                           wreg	equ	0xFE8
  6661                           postdec1	equ	0xFE5
  6662                           fsr1l	equ	0xFE1
  6663                           indf2	equ	0xFDF
  6664                           postinc2	equ	0xFDE
  6665                           postdec2	equ	0xFDD
  6666                           fsr2h	equ	0xFDA
  6667                           fsr2l	equ	0xFD9
  6668                           status	equ	0xFD8
  6669                           
  6670 ;; *************** function _DO_DISPLAY_D1 *****************
  6671 ;; Defined at:
  6672 ;;		line 142 in file "Lab5p6_1.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  temp            2    0[COMRAM] int 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;		None               void
  6679 ;; Registers used:
  6680 ;;		wreg, status,2, status,0, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : 0/0
  6683 ;;		On exit  : 0/0
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;Total ram usage:        2 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:    1
  6693 ;; This function calls:
  6694 ;;		_SET_D1_BLUE
  6695 ;;		_SET_D1_CLEAR
  6696 ;;		_SET_D1_GREEN
  6697 ;;		_SET_D1_RED
  6698 ;;		_SET_D1_WHITE
  6699 ;; This function is called by:
  6700 ;;		_main
  6701 ;; This function uses a non-reentrant model
  6702 ;;
  6703                           
  6704                           	psect	text36
  6705  00277C                     __ptext36:
  6706                           	opt stack 0
  6707  00277C                     _DO_DISPLAY_D1:
  6708                           	opt stack 29
  6709                           
  6710                           ;Lab5p6_1.c: 144: if (temp < 46)
  6711                           
  6712                           ;incstack = 0
  6713  00277C  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6714  00277E  D006               	goto	l2742
  6715  002780  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6716  002782  E107               	bnz	l2744
  6717  002784  0E2E               	movlw	46
  6718  002786  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6719  002788  B0D8               	btfsc	status,0,c
  6720  00278A  D003               	goto	l2744
  6721  00278C                     l2742:
  6722                           
  6723                           ;Lab5p6_1.c: 145: {
  6724                           ;Lab5p6_1.c: 146: SET_D1_CLEAR();
  6725  00278C  EC31  F017         	call	_SET_D1_CLEAR	;wreg free
  6726  002790  D000               	goto	l2744
  6727  002792                     l2744:
  6728                           
  6729                           ;Lab5p6_1.c: 147: }
  6730                           ;Lab5p6_1.c: 148: if (temp >= 46 && temp < 56)
  6731  002792  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6732  002794  D011               	goto	l2750
  6733  002796  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6734  002798  E104               	bnz	u2970
  6735  00279A  0E2E               	movlw	46
  6736  00279C  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6737  00279E  A0D8               	btfss	status,0,c
  6738  0027A0  D00B               	goto	l2750
  6739  0027A2                     u2970:
  6740  0027A2  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6741  0027A4  D006               	goto	l2748
  6742  0027A6  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6743  0027A8  E107               	bnz	l2750
  6744  0027AA  0E38               	movlw	56
  6745  0027AC  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6746  0027AE  B0D8               	btfsc	status,0,c
  6747  0027B0  D003               	goto	l2750
  6748  0027B2                     l2748:
  6749                           
  6750                           ;Lab5p6_1.c: 149: {
  6751                           ;Lab5p6_1.c: 150: SET_D1_RED();
  6752  0027B2  EC29  F017         	call	_SET_D1_RED	;wreg free
  6753  0027B6  D000               	goto	l2750
  6754  0027B8                     l2750:
  6755                           
  6756                           ;Lab5p6_1.c: 151: }
  6757                           ;Lab5p6_1.c: 152: if (temp >= 56 && temp < 66)
  6758  0027B8  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6759  0027BA  D011               	goto	l2756
  6760  0027BC  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6761  0027BE  E104               	bnz	u2990
  6762  0027C0  0E38               	movlw	56
  6763  0027C2  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6764  0027C4  A0D8               	btfss	status,0,c
  6765  0027C6  D00B               	goto	l2756
  6766  0027C8                     u2990:
  6767  0027C8  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6768  0027CA  D006               	goto	l2754
  6769  0027CC  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6770  0027CE  E107               	bnz	l2756
  6771  0027D0  0E42               	movlw	66
  6772  0027D2  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6773  0027D4  B0D8               	btfsc	status,0,c
  6774  0027D6  D003               	goto	l2756
  6775  0027D8                     l2754:
  6776                           
  6777                           ;Lab5p6_1.c: 153: {
  6778                           ;Lab5p6_1.c: 154: SET_D1_GREEN();
  6779  0027D8  EC2D  F017         	call	_SET_D1_GREEN	;wreg free
  6780  0027DC  D000               	goto	l2756
  6781  0027DE                     l2756:
  6782                           
  6783                           ;Lab5p6_1.c: 155: }
  6784                           ;Lab5p6_1.c: 156: if (temp >= 66 && temp < 76)
  6785  0027DE  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6786  0027E0  D011               	goto	l2762
  6787  0027E2  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6788  0027E4  E104               	bnz	u3010
  6789  0027E6  0E42               	movlw	66
  6790  0027E8  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6791  0027EA  A0D8               	btfss	status,0,c
  6792  0027EC  D00B               	goto	l2762
  6793  0027EE                     u3010:
  6794  0027EE  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6795  0027F0  D006               	goto	l2760
  6796  0027F2  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6797  0027F4  E107               	bnz	l2762
  6798  0027F6  0E4C               	movlw	76
  6799  0027F8  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6800  0027FA  B0D8               	btfsc	status,0,c
  6801  0027FC  D003               	goto	l2762
  6802  0027FE                     l2760:
  6803                           
  6804                           ;Lab5p6_1.c: 157: {
  6805                           ;Lab5p6_1.c: 158: SET_D1_BLUE();
  6806  0027FE  EC35  F017         	call	_SET_D1_BLUE	;wreg free
  6807  002802  D000               	goto	l2762
  6808  002804                     l2762:
  6809                           
  6810                           ;Lab5p6_1.c: 159: }
  6811                           ;Lab5p6_1.c: 160: if (temp >= 76)
  6812  002804  BE02               	btfsc	DO_DISPLAY_D1@temp+1,7,c
  6813  002806  D009               	goto	l131
  6814  002808  5002               	movf	DO_DISPLAY_D1@temp+1,w,c
  6815  00280A  E104               	bnz	u3030
  6816  00280C  0E4C               	movlw	76
  6817  00280E  5C01               	subwf	DO_DISPLAY_D1@temp,w,c
  6818  002810  A0D8               	btfss	status,0,c
  6819  002812  D003               	goto	l131
  6820  002814                     u3030:
  6821                           
  6822                           ;Lab5p6_1.c: 161: {
  6823                           ;Lab5p6_1.c: 162: SET_D1_WHITE();
  6824  002814  EC25  F017         	call	_SET_D1_WHITE	;wreg free
  6825  002818  D000               	goto	l131
  6826  00281A                     l131:
  6827  00281A  0012               	return		;funcret
  6828  00281C                     __end_of_DO_DISPLAY_D1:
  6829                           	opt stack 0
  6830                           tblptru	equ	0xFF8
  6831                           tblptrh	equ	0xFF7
  6832                           tblptrl	equ	0xFF6
  6833                           tablat	equ	0xFF5
  6834                           prodh	equ	0xFF4
  6835                           prodl	equ	0xFF3
  6836                           postinc0	equ	0xFEE
  6837                           wreg	equ	0xFE8
  6838                           postdec1	equ	0xFE5
  6839                           fsr1l	equ	0xFE1
  6840                           indf2	equ	0xFDF
  6841                           postinc2	equ	0xFDE
  6842                           postdec2	equ	0xFDD
  6843                           fsr2h	equ	0xFDA
  6844                           fsr2l	equ	0xFD9
  6845                           status	equ	0xFD8
  6846                           
  6847 ;; *************** function _SET_D1_WHITE *****************
  6848 ;; Defined at:
  6849 ;;		line 228 in file "Lab5p6_1.c"
  6850 ;; Parameters:    Size  Location     Type
  6851 ;;		None
  6852 ;; Auto vars:     Size  Location     Type
  6853 ;;		None
  6854 ;; Return value:  Size  Location     Type
  6855 ;;		None               void
  6856 ;; Registers used:
  6857 ;;		None
  6858 ;; Tracked objects:
  6859 ;;		On entry : 0/0
  6860 ;;		On exit  : 0/0
  6861 ;;		Unchanged: 0/0
  6862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6867 ;;Total ram usage:        0 bytes
  6868 ;; Hardware stack levels used:    1
  6869 ;; This function calls:
  6870 ;;		Nothing
  6871 ;; This function is called by:
  6872 ;;		_DO_DISPLAY_D1
  6873 ;; This function uses a non-reentrant model
  6874 ;;
  6875                           
  6876                           	psect	text37
  6877  002E4A                     __ptext37:
  6878                           	opt stack 0
  6879  002E4A                     _SET_D1_WHITE:
  6880                           	opt stack 29
  6881                           
  6882                           ;Lab5p6_1.c: 230: PORTBbits.RB5 = 1;
  6883                           
  6884                           ;incstack = 0
  6885  002E4A  8A81               	bsf	3969,5,c	;volatile
  6886                           
  6887                           ;Lab5p6_1.c: 231: PORTBbits.RB6 = 1;
  6888  002E4C  8C81               	bsf	3969,6,c	;volatile
  6889                           
  6890                           ;Lab5p6_1.c: 232: PORTBbits.RB7 = 1;
  6891  002E4E  8E81               	bsf	3969,7,c	;volatile
  6892  002E50  0012               	return		;funcret
  6893  002E52                     __end_of_SET_D1_WHITE:
  6894                           	opt stack 0
  6895                           tblptru	equ	0xFF8
  6896                           tblptrh	equ	0xFF7
  6897                           tblptrl	equ	0xFF6
  6898                           tablat	equ	0xFF5
  6899                           prodh	equ	0xFF4
  6900                           prodl	equ	0xFF3
  6901                           postinc0	equ	0xFEE
  6902                           wreg	equ	0xFE8
  6903                           postdec1	equ	0xFE5
  6904                           fsr1l	equ	0xFE1
  6905                           indf2	equ	0xFDF
  6906                           postinc2	equ	0xFDE
  6907                           postdec2	equ	0xFDD
  6908                           fsr2h	equ	0xFDA
  6909                           fsr2l	equ	0xFD9
  6910                           status	equ	0xFD8
  6911                           
  6912 ;; *************** function _SET_D1_RED *****************
  6913 ;; Defined at:
  6914 ;;		line 207 in file "Lab5p6_1.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;		None
  6917 ;; Auto vars:     Size  Location     Type
  6918 ;;		None
  6919 ;; Return value:  Size  Location     Type
  6920 ;;		None               void
  6921 ;; Registers used:
  6922 ;;		None
  6923 ;; Tracked objects:
  6924 ;;		On entry : 0/0
  6925 ;;		On exit  : 0/0
  6926 ;;		Unchanged: 0/0
  6927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6932 ;;Total ram usage:        0 bytes
  6933 ;; Hardware stack levels used:    1
  6934 ;; This function calls:
  6935 ;;		Nothing
  6936 ;; This function is called by:
  6937 ;;		_DO_DISPLAY_D1
  6938 ;; This function uses a non-reentrant model
  6939 ;;
  6940                           
  6941                           	psect	text38
  6942  002E52                     __ptext38:
  6943                           	opt stack 0
  6944  002E52                     _SET_D1_RED:
  6945                           	opt stack 29
  6946                           
  6947                           ;Lab5p6_1.c: 209: PORTBbits.RB5 = 1;
  6948                           
  6949                           ;incstack = 0
  6950  002E52  8A81               	bsf	3969,5,c	;volatile
  6951                           
  6952                           ;Lab5p6_1.c: 210: PORTBbits.RB6 = 0;
  6953  002E54  9C81               	bcf	3969,6,c	;volatile
  6954                           
  6955                           ;Lab5p6_1.c: 211: PORTBbits.RB7 = 0;
  6956  002E56  9E81               	bcf	3969,7,c	;volatile
  6957  002E58  0012               	return		;funcret
  6958  002E5A                     __end_of_SET_D1_RED:
  6959                           	opt stack 0
  6960                           tblptru	equ	0xFF8
  6961                           tblptrh	equ	0xFF7
  6962                           tblptrl	equ	0xFF6
  6963                           tablat	equ	0xFF5
  6964                           prodh	equ	0xFF4
  6965                           prodl	equ	0xFF3
  6966                           postinc0	equ	0xFEE
  6967                           wreg	equ	0xFE8
  6968                           postdec1	equ	0xFE5
  6969                           fsr1l	equ	0xFE1
  6970                           indf2	equ	0xFDF
  6971                           postinc2	equ	0xFDE
  6972                           postdec2	equ	0xFDD
  6973                           fsr2h	equ	0xFDA
  6974                           fsr2l	equ	0xFD9
  6975                           status	equ	0xFD8
  6976                           
  6977 ;; *************** function _SET_D1_GREEN *****************
  6978 ;; Defined at:
  6979 ;;		line 214 in file "Lab5p6_1.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;		None               void
  6986 ;; Registers used:
  6987 ;;		None
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;Total ram usage:        0 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_DO_DISPLAY_D1
  7003 ;; This function uses a non-reentrant model
  7004 ;;
  7005                           
  7006                           	psect	text39
  7007  002E5A                     __ptext39:
  7008                           	opt stack 0
  7009  002E5A                     _SET_D1_GREEN:
  7010                           	opt stack 29
  7011                           
  7012                           ;Lab5p6_1.c: 216: PORTBbits.RB5 = 0;
  7013                           
  7014                           ;incstack = 0
  7015  002E5A  9A81               	bcf	3969,5,c	;volatile
  7016                           
  7017                           ;Lab5p6_1.c: 217: PORTBbits.RB6 = 1;
  7018  002E5C  8C81               	bsf	3969,6,c	;volatile
  7019                           
  7020                           ;Lab5p6_1.c: 218: PORTBbits.RB7 = 0;
  7021  002E5E  9E81               	bcf	3969,7,c	;volatile
  7022  002E60  0012               	return		;funcret
  7023  002E62                     __end_of_SET_D1_GREEN:
  7024                           	opt stack 0
  7025                           tblptru	equ	0xFF8
  7026                           tblptrh	equ	0xFF7
  7027                           tblptrl	equ	0xFF6
  7028                           tablat	equ	0xFF5
  7029                           prodh	equ	0xFF4
  7030                           prodl	equ	0xFF3
  7031                           postinc0	equ	0xFEE
  7032                           wreg	equ	0xFE8
  7033                           postdec1	equ	0xFE5
  7034                           fsr1l	equ	0xFE1
  7035                           indf2	equ	0xFDF
  7036                           postinc2	equ	0xFDE
  7037                           postdec2	equ	0xFDD
  7038                           fsr2h	equ	0xFDA
  7039                           fsr2l	equ	0xFD9
  7040                           status	equ	0xFD8
  7041                           
  7042 ;; *************** function _SET_D1_CLEAR *****************
  7043 ;; Defined at:
  7044 ;;		line 200 in file "Lab5p6_1.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;		None
  7047 ;; Auto vars:     Size  Location     Type
  7048 ;;		None
  7049 ;; Return value:  Size  Location     Type
  7050 ;;		None               void
  7051 ;; Registers used:
  7052 ;;		None
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;Total ram usage:        0 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; This function calls:
  7065 ;;		Nothing
  7066 ;; This function is called by:
  7067 ;;		_DO_DISPLAY_D1
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text40
  7072  002E62                     __ptext40:
  7073                           	opt stack 0
  7074  002E62                     _SET_D1_CLEAR:
  7075                           	opt stack 29
  7076                           
  7077                           ;Lab5p6_1.c: 202: PORTBbits.RB5 = 0;
  7078                           
  7079                           ;incstack = 0
  7080  002E62  9A81               	bcf	3969,5,c	;volatile
  7081                           
  7082                           ;Lab5p6_1.c: 203: PORTBbits.RB6 = 0;
  7083  002E64  9C81               	bcf	3969,6,c	;volatile
  7084                           
  7085                           ;Lab5p6_1.c: 204: PORTBbits.RB7 = 0;
  7086  002E66  9E81               	bcf	3969,7,c	;volatile
  7087  002E68  0012               	return		;funcret
  7088  002E6A                     __end_of_SET_D1_CLEAR:
  7089                           	opt stack 0
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           postinc0	equ	0xFEE
  7097                           wreg	equ	0xFE8
  7098                           postdec1	equ	0xFE5
  7099                           fsr1l	equ	0xFE1
  7100                           indf2	equ	0xFDF
  7101                           postinc2	equ	0xFDE
  7102                           postdec2	equ	0xFDD
  7103                           fsr2h	equ	0xFDA
  7104                           fsr2l	equ	0xFD9
  7105                           status	equ	0xFD8
  7106                           
  7107 ;; *************** function _SET_D1_BLUE *****************
  7108 ;; Defined at:
  7109 ;;		line 221 in file "Lab5p6_1.c"
  7110 ;; Parameters:    Size  Location     Type
  7111 ;;		None
  7112 ;; Auto vars:     Size  Location     Type
  7113 ;;		None
  7114 ;; Return value:  Size  Location     Type
  7115 ;;		None               void
  7116 ;; Registers used:
  7117 ;;		None
  7118 ;; Tracked objects:
  7119 ;;		On entry : 0/0
  7120 ;;		On exit  : 0/0
  7121 ;;		Unchanged: 0/0
  7122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7127 ;;Total ram usage:        0 bytes
  7128 ;; Hardware stack levels used:    1
  7129 ;; This function calls:
  7130 ;;		Nothing
  7131 ;; This function is called by:
  7132 ;;		_DO_DISPLAY_D1
  7133 ;; This function uses a non-reentrant model
  7134 ;;
  7135                           
  7136                           	psect	text41
  7137  002E6A                     __ptext41:
  7138                           	opt stack 0
  7139  002E6A                     _SET_D1_BLUE:
  7140                           	opt stack 29
  7141                           
  7142                           ;Lab5p6_1.c: 223: PORTBbits.RB5 = 0;
  7143                           
  7144                           ;incstack = 0
  7145  002E6A  9A81               	bcf	3969,5,c	;volatile
  7146                           
  7147                           ;Lab5p6_1.c: 224: PORTBbits.RB6 = 0;
  7148  002E6C  9C81               	bcf	3969,6,c	;volatile
  7149                           
  7150                           ;Lab5p6_1.c: 225: PORTBbits.RB7 = 1;
  7151  002E6E  8E81               	bsf	3969,7,c	;volatile
  7152  002E70  0012               	return		;funcret
  7153  002E72                     __end_of_SET_D1_BLUE:
  7154                           	opt stack 0
  7155                           tblptru	equ	0xFF8
  7156                           tblptrh	equ	0xFF7
  7157                           tblptrl	equ	0xFF6
  7158                           tablat	equ	0xFF5
  7159                           prodh	equ	0xFF4
  7160                           prodl	equ	0xFF3
  7161                           postinc0	equ	0xFEE
  7162                           wreg	equ	0xFE8
  7163                           postdec1	equ	0xFE5
  7164                           fsr1l	equ	0xFE1
  7165                           indf2	equ	0xFDF
  7166                           postinc2	equ	0xFDE
  7167                           postdec2	equ	0xFDD
  7168                           fsr2h	equ	0xFDA
  7169                           fsr2l	equ	0xFD9
  7170                           status	equ	0xFD8
  7171                           tblptru	equ	0xFF8
  7172                           tblptrh	equ	0xFF7
  7173                           tblptrl	equ	0xFF6
  7174                           tablat	equ	0xFF5
  7175                           prodh	equ	0xFF4
  7176                           prodl	equ	0xFF3
  7177                           postinc0	equ	0xFEE
  7178                           wreg	equ	0xFE8
  7179                           postdec1	equ	0xFE5
  7180                           fsr1l	equ	0xFE1
  7181                           indf2	equ	0xFDF
  7182                           postinc2	equ	0xFDE
  7183                           postdec2	equ	0xFDD
  7184                           fsr2h	equ	0xFDA
  7185                           fsr2l	equ	0xFD9
  7186                           status	equ	0xFD8
  7187                           
  7188                           	psect	rparam
  7189  0000                     tblptru	equ	0xFF8
  7190                           tblptrh	equ	0xFF7
  7191                           tblptrl	equ	0xFF6
  7192                           tablat	equ	0xFF5
  7193                           prodh	equ	0xFF4
  7194                           prodl	equ	0xFF3
  7195                           postinc0	equ	0xFEE
  7196                           wreg	equ	0xFE8
  7197                           postdec1	equ	0xFE5
  7198                           fsr1l	equ	0xFE1
  7199                           indf2	equ	0xFDF
  7200                           postinc2	equ	0xFDE
  7201                           postdec2	equ	0xFDD
  7202                           fsr2h	equ	0xFDA
  7203                           fsr2l	equ	0xFD9
  7204                           status	equ	0xFD8


Data Sizes:
    Strings     67
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    116     126
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 23
		 -> STR_3(CODE[23]), STR_2(CODE[23]), STR_1(CODE[21]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___lltoft->___ftpack
    ___llmod->___lldiv
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround
    ___ftdiv->___ftadd
    ___awtoft->___ftpack
    _Init_UART->_OpenUSART
    _DO_DISPLAY_D2->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0   56002
                                             97 COMRAM    19    19      0
                      _DO_DISPLAY_D1
                      _DO_DISPLAY_D2
                      _DO_DISPLAY_D3
                _Display_Lower_Digit
                _Display_Upper_Digit
                       _Get_Full_ADC
                           _Init_ADC
                          _Init_TRIS
                          _Init_UART
                 _Select_ADC_Channel
                         _WAIT_1_SEC
                            ___awdiv
                            ___awmod
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38551
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    9120
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8922
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3848
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___awtoft (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1356
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     583
                                             13 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     480
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     464
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3343
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3090
                                             45 COMRAM    12     6      6
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             57 COMRAM    15     9      6
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___awtoft                                             4     1      3    1890
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _WAIT_1_SEC                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Select_ADC_Channel                                   1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Get_Full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Display_Upper_Digit                                  2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Display_Lower_Digit                                  1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D3                                        2     0      2     141
                                              0 COMRAM     2     0      2
                       _SET_D3_GREEN
                         _SET_D3_RED
                      _SET_D3_YELLOW
 ---------------------------------------------------------------------------------
 (2) _SET_D3_YELLOW                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D3_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D3_GREEN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D2                                        4     2      2    1758
                                             14 COMRAM     4     2      2
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1572
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _DO_DISPLAY_D1                                        2     0      2     229
                                              0 COMRAM     2     0      2
                        _SET_D1_BLUE
                       _SET_D1_CLEAR
                       _SET_D1_GREEN
                         _SET_D1_RED
                       _SET_D1_WHITE
 ---------------------------------------------------------------------------------
 (2) _SET_D1_WHITE                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D1_RED                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D1_GREEN                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D1_CLEAR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SET_D1_BLUE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DO_DISPLAY_D1
     _SET_D1_BLUE
     _SET_D1_CLEAR
     _SET_D1_GREEN
     _SET_D1_RED
     _SET_D1_WHITE
   _DO_DISPLAY_D2
     ___awdiv
       ___awmod (ARG)
   _DO_DISPLAY_D3
     _SET_D3_GREEN
     _SET_D3_RED
     _SET_D3_YELLOW
   _Display_Lower_Digit
   _Display_Upper_Digit
   _Get_Full_ADC
   _Init_ADC
   _Init_TRIS
   _Init_UART
     _OpenUSART
   _Select_ADC_Channel
   _WAIT_1_SEC
   ___awdiv
     ___awmod (ARG)
   ___awmod
   ___awtoft
     ___ftpack
   ___ftadd
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___ftdiv
     ___ftadd (ARG)
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftneg (ARG)
     ___ftpack (ARG)
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___awtoft (ARG)
       ___ftpack
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
   ___fttol
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
       ___ftpack (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___ftneg (ARG)
         ___ftpack (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     74      7E       1       99.2%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7E      34        0.0%
DATA                 0      0      7E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Mar 10 23:02:50 2022

                          l84 2E1C                            l95 2DD4                  ___awdiv@sign 000C  
         ___wmul@multiplicand 0011                  ___ftadd@exp1 0039                  ___ftadd@exp2 0038  
                ___ftadd@sign 0037                           l120 2CD8                           l112 2D6C  
                         l131 281A                           l115 2D8C                           l143 2C54  
                         l137 2BA0                           l241 1546                           l501 2A54  
                         l513 2D14                           l290 2B1A                           l194 1BE8  
                         l283 2AF2                           l187 1E2C                           l259 1808  
                         l292 2B34                           l620 277A                           l700 22EA  
                         l702 2252                           l287 2B0C                           l631 2752  
                         l703 227A                           l295 2D66                           l288 2B0E  
                         l289 2B18                           l660 205C                           l724 24EC  
                         l661 21DA                           l741 2C98                           l709 22DA  
                         l718 28B0                           l734 2DA4                           l814 2C00  
                         l488 2946                           l664 2086                           l745 25D2  
                         l675 2148                           l579 23F4                           l692 26B4  
                         l684 2164                           l588 23E4                           l695 2680  
                         l784 29C2                           l794 2AB4                  ___awmod@sign 0006  
                         prod 000FF3                           wreg 000FE8                  __CFG_LVP$OFF 000000  
              ?_DO_DISPLAY_D1 0001                ?_DO_DISPLAY_D2 000F                ?_DO_DISPLAY_D3 0001  
                ___ftdiv@cntr 0043                  ___ftdiv@sign 0048                  __CFG_WDT$OFF 000000  
                        l2012 20EC                          l2102 28C8                          l2014 20F8  
                        l2006 20C8                          l2032 2182                          l2024 2130  
                        l2016 2104                          l2114 28F0                          l2130 292C  
                        l2042 21B4                          l2026 213C                          l2018 210C  
                        l2116 28FA                          l2108 28DA                          l2204 2B04  
                        l2300 2218                          l2052 2414                          l2134 293C  
                        l2126 2920                          l2118 2902                          l2150 29F8  
                        l2054 242E                          l2400 23D0                          l2080 2498  
                        l2072 2470                          l2402 23DE                          l2330 229C  
                        l2322 2288                          l2170 2A4A                          l2162 2A2E  
                        l2154 2A06                          l2146 29EA                          l2090 24C6  
                        l2082 249E                          l2058 243C                          l2420 2880  
                        l2340 22C6                          l2156 2A10                          l2076 2482  
                        l2260 1936                          l1550 2DBA                          l2510 2A7E  
                        l2350 22FC                          l2342 22D4                          l2334 22AC  
                        l2158 2A18                          l2166 2A3A                          l2086 24B0  
                        l2246 1DEC                          l2238 1D28                          l2270 19EE  
                        l2192 2AEA                          l2184 2AD8                          l2416 284E  
                        l2408 2C6E                          l2440 250C                          l2520 2BA8  
                        l2336 22B2                          l2600 12C4                          l1554 2DCE  
                        l2426 28AC                          l2514 2AA4                          l2506 2A68  
                        l2522 2BB6                          l2370 2350                          l2266 19DE  
                        l2602 12D4                          l2196 2AF6                          l2188 2AE2  
                        l2508 2A76                          l2356 230C                          l2284 1BC4  
                        l2620 13AA                          l2612 1330                          l2470 259E  
                        l2462 2576                          l2390 23A6                          l2382 2392  
                        l2294 21FA                          l2278 1B12                          l2710 1732  
                        l2702 16FE                          l2614 133A                          l2622 13B8  
                        l2542 10C6                          l1576 2CD2                          l2464 257C  
                        l2472 25A8                          l2720 17D8                          l2640 1462  
                        l2632 142E                          l2608 130C                          l2552 10EA  
                        l2730 2B70                          l2458 2566                          l2490 2980  
                        l2394 23B6                          l2378 2382                          l2714 174E  
                        l2706 172E                          l2650 1508                          l2626 141E  
                        l2618 137C                          l2554 1116                          l2546 10D6  
                        l2722 17EC                          l2732 2B76                          l2812 265A  
                        l2476 25C0                          l2468 2590                          l2396 23BC  
                        l2716 175A                          l2652 1514                          l2644 147E  
                        l2636 145E                          l2628 1422                          l2548 10E2  
                        l2750 27B8                          l2742 278C                          l2734 2B84  
                        l1950 271A                          l1942 26D6                          l2822 268E  
                        l2486 296A                          l2662 154C                          l2760 27FE  
                        l2744 2792                          l2736 2B8A                          l1960 275A  
                        l1952 273A                          l1944 26E2                          l2488 2978  
                        l2680 1698                          l2672 15B6                          l2656 1522  
                        l2592 125E                          l2584 11FA                          l2568 1168  
                        l2762 2804                          l2754 27D8                          l2770 2C18  
                        l1954 2746                          l1946 2702                          l1938 26C6  
                        l2834 2CF0                          l2498 29B2                          l2658 1530  
                        l2850 1E4A                          l2756 27DE                          l2748 27B2  
                        l2684 16A6                          l2668 1566                          l2596 1284  
                        l2774 2C38                          l1966 276C                          l1990 2094  
                        l2678 168C                          l2598 1294                          l2686 16B2  
                        l2776 2C3E                          l2768 2C12                          l2792 261A  
                        l1984 206A                          l2696 16EE                          l2786 25F2  
                        l2698 16F2                          l2788 260C                          l1996 20A0  
                        STR_1 10A5                          STR_2 1077                          STR_3 108E  
                        u3010 27EE                          u3101 2602                          u3030 2814  
                        u2241 21EC                          u2261 220A                          u3081 25E4  
                        u2451 24FE                          u1901 2424                          u2470 252A  
                        u1671 2028                          u1681 203C                          u2810 1540  
                        u2650 11A0                          u2475 2522                  printf@tmpval 005A  
                        u2655 1196                          u2920 2B60                          u1881 2406  
                        u2950 2B9A                          u2970 27A2                          u2990 27C8  
                        _TRMT 007D61                          _main 1E2E                  ___ftpack@arg 0001  
                ___ftpack@exp 0004                          fsr2h 000FDA                          fsr1l 000FE1  
                        indf2 000FDF                          fsr2l 000FD9                          prodh 000FF4  
                        prodl 000FF3                          start 0000                  ___ftmul@cntr 0022  
                ___param_bank 000010                  ___ftmul@sign 0023          __end_of_Get_Full_ADC 2D8E  
                ___fttol@exp1 0039                  ___fttol@lval 0035                   ?_WAIT_1_SEC 0001  
                 ?_SET_D1_RED 0001                         ?_main 0001                   ?_SET_D3_RED 0001  
             __end_of___awdiv 2948               __end_of___ftadd 21DC               __end_of___awmod 2A56  
             __end_of___ftdiv 26B6               __end_of___ftneg 2DB2               __end_of___lldiv 29D4  
             __end_of___ftmul 24EE               ___awdiv@divisor 0009               __end_of___llmod 2AC6  
             __end_of___ftsub 2C9A               __end_of___fttol 25D4               ___awdiv@counter 000B  
                       _RCSTA 000FAB                         _SPBRG 000FAF                         _PORTA 000F80  
                       _PORTB 000F81                         _PORTC 000F82                         _PORTD 000F83  
                       _PORTE 000F84                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                         _TRISD 000F95                         _TRISE 000F96  
                       _TXREG 000FAD                         _TXSTA 000FAC                  ___lltoft@exp 0011  
               ___awtoft@sign 000C               __end_of_dpowers 1029                         _array 0075  
                       _scale 180A                 ___ftpack@sign 0005                         main@L 006B  
                       main@U 006A                         _putch 2E18                  main@num_step 0071  
              __CFG_BOREN$OFF 000000                         tablat 000FF5                         status 000FD8  
             __initialization 2D16                  __end_of_main 2018      Display_Lower_Digit@digit 0001  
            __end_of_Init_ADC 2E34                        ??_main 0062                 ___fttol@sign1 0034  
               __activetblptr 000002         __end_of_SET_D3_YELLOW 2E78          __size_of__tdiv_to_l_ 0110  
 __end_of_Display_Lower_Digit 2DEE               ??_DO_DISPLAY_D1 0003               ??_DO_DISPLAY_D2 0011  
             ??_DO_DISPLAY_D3 0003                  ?_SET_D1_BLUE 0001                        _ADCON0 000FC2  
                      _ADCON1 000FC1                        _ADCON2 000FC0              ___llmod@dividend 000E  
                      ?_scale 0024                        _ADRESH 000FC4                        _ADRESL 000FC3  
            ___awdiv@dividend 0007              __end_of___awtoft 2D16                        ?_putch 0001  
            __end_of___ftpack 277C              __end_of___lltoft 2C02                        _OSCCON 000FD3  
          __size_of_Init_UART 0014            __size_of_Init_TRIS 0016                        _SPBRGH 000FB0  
         __size_of_WAIT_1_SEC 0024            Get_Full_ADC@result 0005           __size_of_SET_D1_RED 0008  
       Display_Upper_Digit@PE 0001           __size_of_SET_D3_RED 0006              __end_of__powers_ 1077  
          __size_of_OpenUSART 0070                        ___ftge 281C                        ___wmul 2D40  
                   ??___awdiv 000B                     ??___ftadd 0034                     ??___awmod 0005  
                   ??___ftdiv 0040                     ??___ftneg 0004                     ??___lldiv 0009  
                   ??___ftmul 001B                     ??___llmod 0016                     ??___ftsub 0040  
                   ??___fttol 002F                        _fround 1BEA              ___awdiv@quotient 000D  
             ___awmod@divisor 0003               ___awmod@counter 0005                        _printf 10BC  
       ___ftmul@f3_as_product 001F                  __pdataCOMRAM 0075                  __mediumconst 0000  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
                      putch@c 0001                    __accesstop 0080       __end_of__initialization 2D36  
                  ___ftadd@f1 002E                    ___ftadd@f2 0031                    ___ftge@ff1 0001  
                  ___ftge@ff2 0004                 ___rparam_used 000001                    ___ftdiv@f1 003A  
                  ___ftdiv@f2 003D                    ___ftdiv@f3 0044         __size_of_Get_Full_ADC 0026  
                  ___ftneg@f1 0001                    ___awtoft@c 0009                    ___ftmul@f1 0015  
                  ___ftmul@f2 0018                    ___ftsub@f1 003A                    ___ftsub@f2 003D  
                  ___fttol@f1 002B                __pcstackCOMRAM 0001                    ___lltoft@c 0009  
               __end_of_scale 1BEA                 __end_of_putch 2E26             __end_of_Init_UART 2E18  
           __end_of_Init_TRIS 2E04                    __div_to_l_ 22EC   __end_of_Display_Upper_Digit 2CDA  
           __end_of_OpenUSART 2B36               __div_to_l_@exp1 000C               __div_to_l_@cntr 000B  
                     ??_scale 0027               __div_to_l_@quot 0007                  _Get_Full_ADC 2D68  
                     ??_putch 0001                     ?_Init_ADC 0001    __end_of_Select_ADC_Channel 2E40  
               __div_to_l_@f1 0001                 __div_to_l_@f2 0004                       ?___ftge 0001  
               ?_SET_D1_CLEAR 0001                       ?___wmul 000F                 ?_SET_D1_GREEN 0001  
               ?_SET_D3_GREEN 0001                 ?_SET_D1_WHITE 0001                       ?_fround 0024  
                ??_WAIT_1_SEC 0001                     ?___awtoft 0009                     ?___ftpack 0001  
                ??_SET_D1_RED 0001                       ?_printf 0040     Select_ADC_Channel@channel 0001  
                ??_SET_D3_RED 0001                     ?___lltoft 0009                   WAIT_1_SEC@j 0001  
        __size_of_SET_D1_BLUE 0008                    ??_Init_ADC 0001            __end_of_WAIT_1_SEC 2DD6  
          __end_of_SET_D1_RED 2E5A            __end_of_SET_D3_RED 2E7E             __end_of__npowers_ 1050  
                     __Hparam 0000                    _scale$1270 0027                       __Lparam 0000  
              ??_SET_D1_CLEAR 0001                ??_SET_D1_GREEN 0001                ??_SET_D3_GREEN 0001  
             __size_of___ftge 0096                ??_SET_D1_WHITE 0001                       ___awdiv 28B2  
                     ___ftadd 2018                       ___awmod 29D4                       ___ftdiv 25D4  
                     ___ftneg 2D8E                       ___lldiv 2948               __size_of___wmul 0028  
                     ___ftmul 23F6                       ___llmod 2A56                       ___ftsub 2C56  
                     ___fttol 24EE                  __psmallconst 1000                       __pcinit 2D16  
                  ??___awtoft 000C                    ??___ftpack 0006               __size_of_fround 0244  
                     __ramtop 1000                    ??___lltoft 000D                       __ptext0 1E2E  
                     __ptext1 10BC                       __ptext2 180A                       __ptext3 2E18  
                     __ptext4 1BEA                       __ptext5 2D40                       __ptext6 23F6  
                     __ptext7 29D4                       __ptext8 21DC                       __ptext9 22EC  
             __size_of_printf 074E                   ?__div_to_l_ 0001                       _dpowers 1001  
            ___awmod@dividend 0001          end_of_initialization 2D36                DO_DISPLAY_D2@T 0011  
               __Lmediumconst 0000               ___lldiv@divisor 0005               ___lldiv@counter 000D  
                   _RCSTAbits 000FAB                       printf@c 0061                       printf@f 0040  
                     postdec1 000FE5                       postdec2 000FDD                       postinc0 000FEE  
                     postinc2 000FDE                __tdiv_to_l_@f1 0001                __tdiv_to_l_@f2 0004  
               ??__tdiv_to_l_ 0007                     _PORTAbits 000F80                     _PORTBbits 000F81  
                   _TRISCbits 000F94                main@voltage_mv 006C         __end_of_DO_DISPLAY_D1 281C  
       __end_of_DO_DISPLAY_D2 2BA2         __end_of_DO_DISPLAY_D3 2C56  __size_of_Display_Lower_Digit 0018  
                 ___ftdiv@exp 0047                     _TXSTAbits 000FAC           __size_of__div_to_l_ 010A  
      __size_of_SET_D3_YELLOW 0006                   ___ftmul@exp 001E      Display_Upper_Digit@digit 0002  
              __end_of___ftge 28B2                __end_of___wmul 2D68                 __pidataCOMRAM 2E40  
              __end_of_fround 1E2E             main@temperature_C 0064             main@temperature_F 0067  
              __end_of_printf 180A           start_initialization 2D16                     _Init_UART 2E04  
                   _Init_TRIS 2DEE           __end_of__tdiv_to_l_ 22EC          __end_of_SET_D1_CLEAR 2E6A  
           DO_DISPLAY_D1@temp 0001             DO_DISPLAY_D2@temp 000F          __end_of_SET_D1_GREEN 2E62  
        __end_of_SET_D3_GREEN 2E84          __end_of_SET_D1_WHITE 2E52                     _OpenUSART 2AC6  
             ___llmod@divisor 0012              __CFG_OSC$INTIO67 000000             __size_of_Init_ADC 000E  
             ___llmod@counter 0016          DO_DISPLAY_D3@voltage 0001                      ??___ftge 0007  
                    ??___wmul 0013            _Select_ADC_Channel 2E34                      ??_fround 0027  
                    ??_printf 0045                    fround@prec 002D             __size_of___awtoft 003C  
           __size_of___ftpack 00C6           ?_Select_ADC_Channel 0001             __size_of___lltoft 0060  
               _SET_D3_YELLOW 2E72                    ?_Init_UART 0001                    ?_Init_TRIS 0001  
__size_of_Display_Upper_Digit 0040                    ?_OpenUSART 0001          ??_Select_ADC_Channel 0001  
                    ?___awdiv 0007                      ?___ftadd 002E                      ?___awmod 0001  
                    ?___ftdiv 003A                      ?___ftneg 0001                      ?___lldiv 0001  
                    ?___ftmul 0015                      ?___llmod 000E                      ?___ftsub 003A  
                   __npowers_ 1029                      ?___fttol 002B                   __tdiv_to_l_ 21DC  
                ??__div_to_l_ 0007                   __smallconst 1000                ?_SET_D3_YELLOW 0001  
               ??_SET_D1_BLUE 0001                __size_of_scale 03E0                __size_of_putch 000E  
              ___wmul@product 0013                      _PIE1bits 000F9D                      _PIR1bits 000F9E  
          __end_of__div_to_l_ 23F6           _Display_Lower_Digit 2DD6                    _ADCON0bits 000FC2  
           ___wmul@multiplier 000F         __size_of_SET_D1_CLEAR 0008                    printf@flag 0050  
                  printf@fval 005E         __size_of_SET_D1_GREEN 0008                    printf@prec 0052  
       __size_of_SET_D3_GREEN 0006         __size_of_SET_D1_WHITE 0008                     main@tempF 0073  
                 ??_Init_UART 0004                   ??_Init_TRIS 0001                     copy_data0 2D2A  
                    _Init_ADC 2E26          ?_Display_Lower_Digit 0001                   ??_OpenUSART 0003  
         __end_of_SET_D1_BLUE 2E72               OpenUSART@config 0003                      __Hrparam 0000  
                    __Lrparam 0000                  _SET_D1_CLEAR 2E62                  _SET_D1_GREEN 2E5A  
                _SET_D3_GREEN 2E7E              __size_of___awdiv 0096              __size_of___ftadd 01C4  
            __size_of___awmod 0082                  _SET_D1_WHITE 2E4A              __size_of___ftdiv 00E2  
            __size_of___ftneg 0024              __size_of___lldiv 008C              __size_of___ftmul 00F8  
            __size_of___llmod 0070              __size_of___ftsub 0044              __size_of___fttol 00E6  
                    ___awtoft 2CDA                      ___ftpack 26B6                   _fround$1268 002A  
                 _fround$1269 0027               ??_SET_D3_YELLOW 0001                      ___lltoft 2BA2  
                    __ptext10 2BA2                      __ptext11 2A56                      __ptext20 26B6  
                    __ptext12 2948                      __ptext21 2DB2                      __ptext13 24EE  
                    __ptext30 2C02                      __ptext22 2E34                      __ptext14 2C56  
                    __ptext31 2E72                      __ptext23 2E04                      __ptext15 2018  
                    __ptext40 2E62                      __ptext32 2E78                      __ptext24 2AC6  
                    __ptext16 2D8E                      __ptext41 2E6A                      __ptext33 2E7E  
                    __ptext25 2DEE                      __ptext17 281C                      __ptext34 2B36  
                    __ptext26 2E26                      __ptext18 25D4                      __ptext35 28B2  
                    __ptext27 2D68                      __ptext19 2CDA                      __ptext36 277C  
                    __ptext28 2C9A                      __ptext37 2E4A                      __ptext29 2DD6  
                    __ptext38 2E52                      __ptext39 2E5A                      __powers_ 1050  
               ?_Get_Full_ADC 0001         ??_Display_Lower_Digit 0001                 __size_of_main 01EA  
      __size_of_DO_DISPLAY_D1 00A0        __size_of_DO_DISPLAY_D2 006C        __size_of_DO_DISPLAY_D3 0054  
                   printf@exp 0058                     printf@val 0054           _Display_Upper_Digit 2C9A  
              OpenUSART@spbrg 0001                ??_Get_Full_ADC 0003                   _SET_D1_BLUE 2E6A  
                    scale@scl 002A              __tdiv_to_l_@exp1 000F              __tdiv_to_l_@cntr 000E  
        ?_Display_Upper_Digit 0001              __tdiv_to_l_@quot 000A              ___lldiv@dividend 0001  
                    printf@ap 004E                    _WAIT_1_SEC 2DB2                  ?__tdiv_to_l_ 0001  
                  _SET_D1_RED 2E52                    _SET_D3_RED 2E78                   _printf$1271 004B  
            ___lldiv@quotient 0009                 _DO_DISPLAY_D1 277C                 _DO_DISPLAY_D2 2B36  
               _DO_DISPLAY_D3 2C02         ??_Display_Upper_Digit 0001   __size_of_Select_ADC_Channel 000C  
             main@voltage_mv1 006F  
