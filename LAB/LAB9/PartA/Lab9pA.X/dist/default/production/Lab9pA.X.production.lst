

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Apr 07 11:22:55 2022

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    23  0000                     _ADCON0	set	4034
    24  0000                     _ADCON1	set	4033
    25  0000                     _ADCON2	set	4032
    26  0000                     _INTCON2bits	set	4081
    27  0000                     _INTCON3bits	set	4080
    28  0000                     _INTCONbits	set	4082
    29  0000                     _OSCCON	set	4051
    30  0000                     _PIE1bits	set	3997
    31  0000                     _PIR1bits	set	3998
    32  0000                     _RCSTA	set	4011
    33  0000                     _RCSTAbits	set	4011
    34  0000                     _SPBRG	set	4015
    35  0000                     _SPBRGH	set	4016
    36  0000                     _TRISB	set	3987
    37  0000                     _TRISCbits	set	3988
    38  0000                     _TXREG	set	4013
    39  0000                     _TXSTA	set	4012
    40  0000                     _TXSTAbits	set	4012
    41  0000                     _RBPU	set	32655
    42  0000                     _TRMT	set	32097
    43                           
    44                           	psect	smallconst
    45  001000                     __psmallconst:
    46                           	opt stack 0
    47  001000  00                 	db	0
    48  001001                     STR_1:
    49  001001  49                 	db	73	;'I'
    50  001002  4E                 	db	78	;'N'
    51  001003  54                 	db	84	;'T'
    52  001004  30                 	db	48	;'0'
    53  001005  20                 	db	32
    54  001006  69                 	db	105	;'i'
    55  001007  6E                 	db	110	;'n'
    56  001008  74                 	db	116	;'t'
    57  001009  65                 	db	101	;'e'
    58  00100A  72                 	db	114	;'r'
    59  00100B  72                 	db	114	;'r'
    60  00100C  75                 	db	117	;'u'
    61  00100D  70                 	db	112	;'p'
    62  00100E  74                 	db	116	;'t'
    63  00100F  20                 	db	32
    64  001010  70                 	db	112	;'p'
    65  001011  69                 	db	105	;'i'
    66  001012  6E                 	db	110	;'n'
    67  001013  20                 	db	32
    68  001014  64                 	db	100	;'d'
    69  001015  65                 	db	101	;'e'
    70  001016  74                 	db	116	;'t'
    71  001017  65                 	db	101	;'e'
    72  001018  63                 	db	99	;'c'
    73  001019  74                 	db	116	;'t'
    74  00101A  65                 	db	101	;'e'
    75  00101B  64                 	db	100	;'d'
    76  00101C  20                 	db	32
    77  00101D  0D                 	db	13
    78  00101E  0A                 	db	10
    79  00101F  00                 	db	0
    80  001020                     STR_2:
    81  001020  49                 	db	73	;'I'
    82  001021  4E                 	db	78	;'N'
    83  001022  54                 	db	84	;'T'
    84  001023  31                 	db	49	;'1'
    85  001024  20                 	db	32
    86  001025  69                 	db	105	;'i'
    87  001026  6E                 	db	110	;'n'
    88  001027  74                 	db	116	;'t'
    89  001028  65                 	db	101	;'e'
    90  001029  72                 	db	114	;'r'
    91  00102A  72                 	db	114	;'r'
    92  00102B  75                 	db	117	;'u'
    93  00102C  70                 	db	112	;'p'
    94  00102D  74                 	db	116	;'t'
    95  00102E  20                 	db	32
    96  00102F  70                 	db	112	;'p'
    97  001030  69                 	db	105	;'i'
    98  001031  6E                 	db	110	;'n'
    99  001032  20                 	db	32
   100  001033  64                 	db	100	;'d'
   101  001034  65                 	db	101	;'e'
   102  001035  74                 	db	116	;'t'
   103  001036  65                 	db	101	;'e'
   104  001037  63                 	db	99	;'c'
   105  001038  74                 	db	116	;'t'
   106  001039  65                 	db	101	;'e'
   107  00103A  64                 	db	100	;'d'
   108  00103B  20                 	db	32
   109  00103C  0D                 	db	13
   110  00103D  0A                 	db	10
   111  00103E  00                 	db	0
   112  00103F                     STR_3:
   113  00103F  49                 	db	73	;'I'
   114  001040  4E                 	db	78	;'N'
   115  001041  54                 	db	84	;'T'
   116  001042  32                 	db	50	;'2'
   117  001043  20                 	db	32
   118  001044  69                 	db	105	;'i'
   119  001045  6E                 	db	110	;'n'
   120  001046  74                 	db	116	;'t'
   121  001047  65                 	db	101	;'e'
   122  001048  72                 	db	114	;'r'
   123  001049  72                 	db	114	;'r'
   124  00104A  75                 	db	117	;'u'
   125  00104B  70                 	db	112	;'p'
   126  00104C  74                 	db	116	;'t'
   127  00104D  20                 	db	32
   128  00104E  70                 	db	112	;'p'
   129  00104F  69                 	db	105	;'i'
   130  001050  6E                 	db	110	;'n'
   131  001051  20                 	db	32
   132  001052  64                 	db	100	;'d'
   133  001053  65                 	db	101	;'e'
   134  001054  74                 	db	116	;'t'
   135  001055  65                 	db	101	;'e'
   136  001056  63                 	db	99	;'c'
   137  001057  74                 	db	116	;'t'
   138  001058  65                 	db	101	;'e'
   139  001059  64                 	db	100	;'d'
   140  00105A  20                 	db	32
   141  00105B  0D                 	db	13
   142  00105C  0A                 	db	10
   143  00105D  00                 	db	0
   144                           
   145                           ; #config settings
   146  00105E  00                 	db	0	; dummy byte at the end
   147  0000                     
   148                           	psect	cinit
   149  00120E                     __pcinit:
   150                           	opt stack 0
   151  00120E                     start_initialization:
   152                           	opt stack 0
   153  00120E                     __initialization:
   154                           	opt stack 0
   155                           
   156                           ; Clear objects allocated to COMRAM (6 bytes)
   157  00120E  6A1A               	clrf	(__pbssCOMRAM+5)& (0+255),c
   158  001210  6A19               	clrf	(__pbssCOMRAM+4)& (0+255),c
   159  001212  6A18               	clrf	(__pbssCOMRAM+3)& (0+255),c
   160  001214  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
   161  001216  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   162  001218  6A15               	clrf	__pbssCOMRAM& (0+255),c
   163  00121A                     end_of_initialization:
   164                           	opt stack 0
   165  00121A                     __end_of__initialization:
   166                           	opt stack 0
   167  00121A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   168  00121C  6EF8               	movwf	tblptru,c
   169  00121E  0E10               	movlw	high __Lsmallconst
   170  001220  6EF7               	movwf	tblptrh,c
   171  001222  0100               	movlb	0
   172  001224  EFAB  F008         	goto	_main	;jump to C main() function
   173                           tblptru	equ	0xFF8
   174                           tblptrh	equ	0xFF7
   175                           
   176                           	psect	bssCOMRAM
   177  000015                     __pbssCOMRAM:
   178                           	opt stack 0
   179  000015                     _INT0_flag:
   180                           	opt stack 0
   181  000015                     	ds	2
   182  000017                     _INT1_flag:
   183                           	opt stack 0
   184  000017                     	ds	2
   185  000019                     _INT2_flag:
   186                           	opt stack 0
   187  000019                     	ds	2
   188                           tblptru	equ	0xFF8
   189                           tblptrh	equ	0xFF7
   190                           
   191                           	psect	cstackCOMRAM
   192  000001                     __pcstackCOMRAM:
   193                           	opt stack 0
   194  000001                     ??_chkisr:
   195  000001                     
   196                           ; 0 bytes @ 0x0
   197  000001                     	ds	14
   198  00000F                     putch@c:
   199                           	opt stack 0
   200  00000F                     OpenUSART@spbrg:
   201                           	opt stack 0
   202                           
   203                           ; 2 bytes @ 0xE
   204  00000F                     	ds	1
   205  000010                     ?_printf:
   206                           	opt stack 0
   207  000010                     printf@f:
   208                           	opt stack 0
   209                           
   210                           ; 2 bytes @ 0xF
   211  000010                     	ds	1
   212  000011                     OpenUSART@config:
   213                           	opt stack 0
   214                           
   215                           ; 1 bytes @ 0x10
   216  000011                     	ds	1
   217  000012                     printf@ap:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x11
   221  000012                     	ds	2
   222  000014                     printf@c:
   223                           	opt stack 0
   224                           
   225                           ; 1 bytes @ 0x13
   226  000014                     	ds	1
   227  000015                     tblptru	equ	0xFF8
   228                           tblptrh	equ	0xFF7
   229                           
   230                           ; 0 bytes @ 0x14
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 112 in file "Lab9pA.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;		None
   241 ;; Return value:  Size  Location     Type
   242 ;;		None               void
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : 0/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   254 ;;Total ram usage:        0 bytes
   255 ;; Hardware stack levels required when called:    5
   256 ;; This function calls:
   257 ;;		_Do_Init
   258 ;;		_printf
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           	psect	text0
   265  001156                     __ptext0:
   266                           	opt stack 0
   267  001156                     _main:
   268                           	opt stack 26
   269                           
   270                           ;Lab9pA.c: 114: RBPU = 0;
   271                           
   272                           ;incstack = 0
   273  001156  9EF1               	bcf	intcon2,7,c	;volatile
   274                           
   275                           ;Lab9pA.c: 115: Do_Init();
   276  001158  ECF4  F008         	call	_Do_Init	;wreg free
   277  00115C  D000               	goto	l932
   278  00115E                     l932:
   279                           
   280                           ;Lab9pA.c: 117: {
   281                           ;Lab9pA.c: 118: if (INT0_flag == 1)
   282  00115E  0415               	decf	_INT0_flag,w,c
   283  001160  1016               	iorwf	_INT0_flag+1,w,c
   284  001162  A4D8               	btfss	status,2,c
   285  001164  D00B               	goto	l938
   286                           
   287                           ;Lab9pA.c: 119: {
   288                           ;Lab9pA.c: 120: INT0_flag = 0;
   289  001166  0E00               	movlw	0
   290  001168  6E16               	movwf	_INT0_flag+1,c
   291  00116A  0E00               	movlw	0
   292  00116C  6E15               	movwf	_INT0_flag,c
   293                           
   294                           ;Lab9pA.c: 121: printf("INT0 interrupt pin detected \r\n");
   295  00116E  0E01               	movlw	low STR_1
   296  001170  6E10               	movwf	printf@f,c
   297  001172  0E10               	movlw	high STR_1
   298  001174  6E11               	movwf	printf@f+1,c
   299  001176  ECDE  F008         	call	_printf	;wreg free
   300  00117A  D000               	goto	l938
   301  00117C                     l938:
   302                           
   303                           ;Lab9pA.c: 122: }
   304                           ;Lab9pA.c: 123: if (INT1_flag == 1)
   305  00117C  0417               	decf	_INT1_flag,w,c
   306  00117E  1018               	iorwf	_INT1_flag+1,w,c
   307  001180  A4D8               	btfss	status,2,c
   308  001182  D00B               	goto	l944
   309                           
   310                           ;Lab9pA.c: 124: {
   311                           ;Lab9pA.c: 125: INT1_flag = 0;
   312  001184  0E00               	movlw	0
   313  001186  6E18               	movwf	_INT1_flag+1,c
   314  001188  0E00               	movlw	0
   315  00118A  6E17               	movwf	_INT1_flag,c
   316                           
   317                           ;Lab9pA.c: 126: printf("INT1 interrupt pin detected \r\n");
   318  00118C  0E20               	movlw	low STR_2
   319  00118E  6E10               	movwf	printf@f,c
   320  001190  0E10               	movlw	high STR_2
   321  001192  6E11               	movwf	printf@f+1,c
   322  001194  ECDE  F008         	call	_printf	;wreg free
   323  001198  D000               	goto	l944
   324  00119A                     l944:
   325                           
   326                           ;Lab9pA.c: 127: }
   327                           ;Lab9pA.c: 128: if (INT2_flag == 1)
   328  00119A  0419               	decf	_INT2_flag,w,c
   329  00119C  101A               	iorwf	_INT2_flag+1,w,c
   330  00119E  A4D8               	btfss	status,2,c
   331  0011A0  D7DE               	goto	l932
   332                           
   333                           ;Lab9pA.c: 129: {
   334                           ;Lab9pA.c: 130: INT2_flag = 0;
   335  0011A2  0E00               	movlw	0
   336  0011A4  6E1A               	movwf	_INT2_flag+1,c
   337  0011A6  0E00               	movlw	0
   338  0011A8  6E19               	movwf	_INT2_flag,c
   339                           
   340                           ;Lab9pA.c: 131: printf("INT2 interrupt pin detected \r\n");
   341  0011AA  0E3F               	movlw	low STR_3
   342  0011AC  6E10               	movwf	printf@f,c
   343  0011AE  0E10               	movlw	high STR_3
   344  0011B0  6E11               	movwf	printf@f+1,c
   345  0011B2  ECDE  F008         	call	_printf	;wreg free
   346  0011B6  D7D3               	goto	l932
   347  0011B8  EF0C  F000         	goto	start
   348  0011BC                     __end_of_main:
   349                           	opt stack 0
   350                           tblptru	equ	0xFF8
   351                           tblptrh	equ	0xFF7
   352                           intcon2	equ	0xFF1
   353                           status	equ	0xFD8
   354                           
   355 ;; *************** function _printf *****************
   356 ;; Defined at:
   357 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;  f               2   15[COMRAM] PTR const unsigned char 
   360 ;;		 -> STR_3(31), STR_2(31), STR_1(31), 
   361 ;; Auto vars:     Size  Location     Type
   362 ;;  tmpval          4    0        struct .
   363 ;;  cp              3    0        PTR const unsigned char 
   364 ;;  ap              2   17[COMRAM] PTR void [1]
   365 ;;		 -> ?_printf(2), 
   366 ;;  len             2    0        unsigned int 
   367 ;;  val             2    0        unsigned int 
   368 ;;  c               1   19[COMRAM] char 
   369 ;;  flag            1    0        unsigned char 
   370 ;;  prec            1    0        char 
   371 ;; Return value:  Size  Location     Type
   372 ;;                  2   15[COMRAM] int 
   373 ;; Registers used:
   374 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   375 ;; Tracked objects:
   376 ;;		On entry : 0/0
   377 ;;		On exit  : 0/0
   378 ;;		Unchanged: 0/0
   379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   381 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;Total ram usage:        5 bytes
   385 ;; Hardware stack levels used:    1
   386 ;; Hardware stack levels required when called:    3
   387 ;; This function calls:
   388 ;;		_putch
   389 ;; This function is called by:
   390 ;;		_main
   391 ;; This function uses a non-reentrant model
   392 ;;
   393                           
   394                           	psect	text1
   395  0011BC                     __ptext1:
   396                           	opt stack 0
   397  0011BC                     _printf:
   398                           	opt stack 27
   399                           
   400                           ;doprnt.c: 466: va_list ap;
   401                           ;doprnt.c: 499: signed char c;
   402                           ;doprnt.c: 506: signed char prec;
   403                           ;doprnt.c: 508: unsigned char flag;
   404                           ;doprnt.c: 523: union {
   405                           ;doprnt.c: 524: unsigned long vd;
   406                           ;doprnt.c: 525: double integ;
   407                           ;doprnt.c: 526: } tmpval;
   408                           ;doprnt.c: 528: unsigned int val;
   409                           ;doprnt.c: 529: unsigned len;
   410                           ;doprnt.c: 530: const char * cp;
   411                           ;doprnt.c: 533: *ap = __va_start();
   412                           
   413                           ;incstack = 0
   414  0011BC  0E12               	movlw	low (?_printf+2)
   415  0011BE  6E12               	movwf	printf@ap,c
   416  0011C0  0E00               	movlw	high (?_printf+2)
   417  0011C2  6E13               	movwf	printf@ap+1,c
   418                           
   419                           ;doprnt.c: 536: while(c = *f++) {
   420  0011C4  D004               	goto	l926
   421  0011C6                     l924:
   422                           
   423                           ;doprnt.c: 540: {
   424                           ;doprnt.c: 541: (putch(c) );
   425  0011C6  5014               	movf	printf@c,w,c
   426  0011C8  EC1E  F009         	call	_putch
   427                           
   428                           ;doprnt.c: 542: continue;
   429  0011CC  D000               	goto	l926
   430  0011CE                     l926:
   431  0011CE  C010  FFF6         	movff	printf@f,tblptrl
   432  0011D2  C011  FFF7         	movff	printf@f+1,tblptrh
   433  0011D6  4A10               	infsnz	printf@f,f,c
   434  0011D8  2A11               	incf	printf@f+1,f,c
   435  0011DA                     	if	0	;tblptru may be non-zero
   436  0011DA                     	endif
   437  0011DA                     	if	0	;tblptru may be non-zero
   438  0011DA                     	endif
   439  0011DA  0008               	tblrd		*
   440  0011DC  CFF5 F014          	movff	tablat,printf@c
   441  0011E0  5014               	movf	printf@c,w,c
   442  0011E2  A4D8               	btfss	status,2,c
   443  0011E4  D7F0               	goto	l924
   444                           
   445                           ;doprnt.c: 1469: }
   446                           ;doprnt.c: 1533: }
   447                           ;doprnt.c: 1540: return 0;
   448                           ;	Return value of _printf is never used
   449  0011E6  0012               	return		;funcret
   450  0011E8                     __end_of_printf:
   451                           	opt stack 0
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           intcon2	equ	0xFF1
   457                           status	equ	0xFD8
   458                           
   459 ;; *************** function _putch *****************
   460 ;; Defined at:
   461 ;;		line 45 in file "Lab9pA.c"
   462 ;; Parameters:    Size  Location     Type
   463 ;;  c               1    wreg     unsigned char 
   464 ;; Auto vars:     Size  Location     Type
   465 ;;  c               1   14[COMRAM] unsigned char 
   466 ;; Return value:  Size  Location     Type
   467 ;;		None               void
   468 ;; Registers used:
   469 ;;		wreg
   470 ;; Tracked objects:
   471 ;;		On entry : 0/0
   472 ;;		On exit  : 0/0
   473 ;;		Unchanged: 0/0
   474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   479 ;;Total ram usage:        1 bytes
   480 ;; Hardware stack levels used:    1
   481 ;; Hardware stack levels required when called:    2
   482 ;; This function calls:
   483 ;;		Nothing
   484 ;; This function is called by:
   485 ;;		_printf
   486 ;; This function uses a non-reentrant model
   487 ;;
   488                           
   489                           	psect	text2
   490  00123C                     __ptext2:
   491                           	opt stack 0
   492  00123C                     _putch:
   493                           	opt stack 27
   494                           
   495                           ;incstack = 0
   496                           ;putch@c stored from wreg
   497  00123C  6E0F               	movwf	putch@c,c
   498                           
   499                           ;Lab9pA.c: 47: while (!TRMT);
   500  00123E  D000               	goto	l32
   501  001240                     l32:
   502  001240  A2AC               	btfss	4012,1,c	;volatile
   503  001242  D7FE               	goto	l32
   504                           
   505                           ;Lab9pA.c: 48: TXREG = c;
   506  001244  C00F  FFAD         	movff	putch@c,4013	;volatile
   507  001248  0012               	return		;funcret
   508  00124A                     __end_of_putch:
   509                           	opt stack 0
   510                           tblptru	equ	0xFF8
   511                           tblptrh	equ	0xFF7
   512                           tblptrl	equ	0xFF6
   513                           tablat	equ	0xFF5
   514                           intcon2	equ	0xFF1
   515                           status	equ	0xFD8
   516                           
   517 ;; *************** function _Do_Init *****************
   518 ;; Defined at:
   519 ;;		line 62 in file "Lab9pA.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;		None
   524 ;; Return value:  Size  Location     Type
   525 ;;		None               void
   526 ;; Registers used:
   527 ;;		wreg, status,2, cstack
   528 ;; Tracked objects:
   529 ;;		On entry : 0/0
   530 ;;		On exit  : 0/0
   531 ;;		Unchanged: 0/0
   532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   537 ;;Total ram usage:        0 bytes
   538 ;; Hardware stack levels used:    1
   539 ;; Hardware stack levels required when called:    4
   540 ;; This function calls:
   541 ;;		_Init_ADC
   542 ;;		_init_UART
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548                           	psect	text3
   549  0011E8                     __ptext3:
   550                           	opt stack 0
   551  0011E8                     _Do_Init:
   552                           	opt stack 26
   553                           
   554                           ;Lab9pA.c: 64: init_UART();
   555                           
   556                           ;incstack = 0
   557  0011E8  EC14  F009         	call	_init_UART	;wreg free
   558                           
   559                           ;Lab9pA.c: 65: Init_ADC();
   560  0011EC  EC25  F009         	call	_Init_ADC	;wreg free
   561                           
   562                           ;Lab9pA.c: 67: OSCCON = 0x70;
   563  0011F0  0E70               	movlw	112
   564  0011F2  6ED3               	movwf	4051,c	;volatile
   565                           
   566                           ;Lab9pA.c: 68: TRISB = 0x07;
   567  0011F4  0E07               	movlw	7
   568  0011F6  6E93               	movwf	3987,c	;volatile
   569                           
   570                           ;Lab9pA.c: 71: INTCONbits.INT0IF = 0;
   571  0011F8  92F2               	bcf	intcon,1,c	;volatile
   572                           
   573                           ;Lab9pA.c: 72: INTCON3bits.INT1IF = 0;
   574  0011FA  90F0               	bcf	intcon3,0,c	;volatile
   575                           
   576                           ;Lab9pA.c: 73: INTCON3bits.INT2IF =0;
   577  0011FC  92F0               	bcf	intcon3,1,c	;volatile
   578                           
   579                           ;Lab9pA.c: 75: INTCON2bits.INTEDG0=0 ;
   580  0011FE  9CF1               	bcf	intcon2,6,c	;volatile
   581                           
   582                           ;Lab9pA.c: 76: INTCON2bits.INTEDG1=0;
   583  001200  9AF1               	bcf	intcon2,5,c	;volatile
   584                           
   585                           ;Lab9pA.c: 77: INTCON2bits.INTEDG2=0;
   586  001202  98F1               	bcf	intcon2,4,c	;volatile
   587                           
   588                           ;Lab9pA.c: 79: INTCONbits.INT0IE =1;
   589  001204  88F2               	bsf	intcon,4,c	;volatile
   590                           
   591                           ;Lab9pA.c: 80: INTCON3bits.INT1IE=1;
   592  001206  86F0               	bsf	intcon3,3,c	;volatile
   593                           
   594                           ;Lab9pA.c: 81: INTCON3bits.INT2IE=1;
   595  001208  88F0               	bsf	intcon3,4,c	;volatile
   596                           
   597                           ;Lab9pA.c: 83: INTCONbits.GIE=1;
   598  00120A  8EF2               	bsf	intcon,7,c	;volatile
   599  00120C  0012               	return		;funcret
   600  00120E                     __end_of_Do_Init:
   601                           	opt stack 0
   602                           tblptru	equ	0xFF8
   603                           tblptrh	equ	0xFF7
   604                           tblptrl	equ	0xFF6
   605                           tablat	equ	0xFF5
   606                           intcon	equ	0xFF2
   607                           intcon2	equ	0xFF1
   608                           intcon3	equ	0xFF0
   609                           status	equ	0xFD8
   610                           
   611 ;; *************** function _init_UART *****************
   612 ;; Defined at:
   613 ;;		line 37 in file "Lab9pA.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;		None
   616 ;; Auto vars:     Size  Location     Type
   617 ;;		None
   618 ;; Return value:  Size  Location     Type
   619 ;;		None               void
   620 ;; Registers used:
   621 ;;		wreg, status,2, cstack
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   631 ;;Total ram usage:        0 bytes
   632 ;; Hardware stack levels used:    1
   633 ;; Hardware stack levels required when called:    3
   634 ;; This function calls:
   635 ;;		_OpenUSART
   636 ;; This function is called by:
   637 ;;		_Do_Init
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641                           	psect	text4
   642  001228                     __ptext4:
   643                           	opt stack 0
   644  001228                     _init_UART:
   645                           	opt stack 26
   646                           
   647                           ;Lab9pA.c: 39: OpenUSART (0b01111111 & 0b10111111 &
   648                           ;Lab9pA.c: 40: 0b11111110 & 0b11111101 & 0b11111111 &
   649                           ;Lab9pA.c: 41: 0b11111111, 25);
   650                           
   651                           ;incstack = 0
   652  001228  0E00               	movlw	0
   653  00122A  6E10               	movwf	OpenUSART@spbrg+1,c
   654  00122C  0E19               	movlw	25
   655  00122E  6E0F               	movwf	OpenUSART@spbrg,c
   656  001230  0E3C               	movlw	60
   657  001232  EC73  F008         	call	_OpenUSART
   658                           
   659                           ;Lab9pA.c: 42: OSCCON = 0x60;
   660  001236  0E60               	movlw	96
   661  001238  6ED3               	movwf	4051,c	;volatile
   662  00123A  0012               	return		;funcret
   663  00123C                     __end_of_init_UART:
   664                           	opt stack 0
   665                           tblptru	equ	0xFF8
   666                           tblptrh	equ	0xFF7
   667                           tblptrl	equ	0xFF6
   668                           tablat	equ	0xFF5
   669                           intcon	equ	0xFF2
   670                           intcon2	equ	0xFF1
   671                           intcon3	equ	0xFF0
   672                           status	equ	0xFD8
   673                           
   674 ;; *************** function _OpenUSART *****************
   675 ;; Defined at:
   676 ;;		line 73 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;  config          1    wreg     unsigned char 
   679 ;;  spbrg           2   14[COMRAM] unsigned int 
   680 ;; Auto vars:     Size  Location     Type
   681 ;;  config          1   16[COMRAM] unsigned char 
   682 ;; Return value:  Size  Location     Type
   683 ;;		None               void
   684 ;; Registers used:
   685 ;;		wreg, status,2
   686 ;; Tracked objects:
   687 ;;		On entry : 0/0
   688 ;;		On exit  : 0/0
   689 ;;		Unchanged: 0/0
   690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   691 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;Total ram usage:        3 bytes
   696 ;; Hardware stack levels used:    1
   697 ;; Hardware stack levels required when called:    2
   698 ;; This function calls:
   699 ;;		Nothing
   700 ;; This function is called by:
   701 ;;		_init_UART
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           	psect	text5
   706  0010E6                     __ptext5:
   707                           	opt stack 0
   708  0010E6                     _OpenUSART:
   709                           	opt stack 26
   710                           
   711                           ;incstack = 0
   712                           ;OpenUSART@config stored from wreg
   713  0010E6  6E11               	movwf	OpenUSART@config,c
   714  0010E8  0E00               	movlw	0
   715  0010EA  6EAC               	movwf	4012,c	;volatile
   716  0010EC  0E00               	movlw	0
   717  0010EE  6EAB               	movwf	4011,c	;volatile
   718  0010F0  A011               	btfss	OpenUSART@config,0,c
   719  0010F2  D002               	goto	l848
   720  0010F4  88AC               	bsf	4012,4,c	;volatile
   721  0010F6  D000               	goto	l848
   722  0010F8                     l848:
   723  0010F8  A211               	btfss	OpenUSART@config,1,c
   724  0010FA  D003               	goto	l852
   725  0010FC  8CAC               	bsf	4012,6,c	;volatile
   726  0010FE  8CAB               	bsf	4011,6,c	;volatile
   727  001100  D000               	goto	l852
   728  001102                     l852:
   729  001102  A411               	btfss	OpenUSART@config,2,c
   730  001104  D002               	goto	l856
   731  001106  8EAC               	bsf	4012,7,c	;volatile
   732  001108  D000               	goto	l856
   733  00110A                     l856:
   734  00110A  A611               	btfss	OpenUSART@config,3,c
   735  00110C  D002               	goto	l105
   736  00110E  88AB               	bsf	4011,4,c	;volatile
   737  001110  D002               	goto	l860
   738  001112                     l105:
   739  001112  8AAB               	bsf	4011,5,c	;volatile
   740  001114  D000               	goto	l860
   741  001116                     l860:
   742  001116  B811               	btfsc	OpenUSART@config,4,c
   743  001118  84AC               	bsf	4012,2,c	;volatile
   744  00111A  989E               	bcf	3998,4,c	;volatile
   745  00111C  AA11               	btfss	OpenUSART@config,5,c
   746  00111E  D002               	goto	l868
   747  001120  86AB               	bsf	4011,3,c	;volatile
   748  001122  D000               	goto	l868
   749  001124                     l868:
   750  001124  AC11               	btfss	OpenUSART@config,6,c
   751  001126  D002               	goto	l109
   752  001128  8A9D               	bsf	3997,5,c	;volatile
   753  00112A  D001               	goto	l110
   754  00112C                     l109:
   755  00112C  9A9D               	bcf	3997,5,c	;volatile
   756  00112E                     l110:
   757  00112E  9A9E               	bcf	3998,5,c	;volatile
   758  001130  AE11               	btfss	OpenUSART@config,7,c
   759  001132  D002               	goto	l111
   760  001134  889D               	bsf	3997,4,c	;volatile
   761  001136  D001               	goto	l112
   762  001138                     l111:
   763  001138  989D               	bcf	3997,4,c	;volatile
   764  00113A                     l112:
   765  00113A  C00F  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
   766  00113E  5010               	movf	OpenUSART@spbrg+1,w,c
   767  001140  6EB0               	movwf	4016,c	;volatile
   768  001142  8AAC               	bsf	4012,5,c	;volatile
   769  001144  8EAB               	bsf	4011,7,c	;volatile
   770  001146  9C94               	bcf	3988,6,c	;volatile
   771  001148  8E94               	bsf	3988,7,c	;volatile
   772  00114A  B8AC               	btfsc	4012,4,c	;volatile
   773  00114C  BEAC               	btfsc	4012,7,c	;volatile
   774  00114E  D002               	goto	l114
   775  001150  8C94               	bsf	3988,6,c	;volatile
   776  001152  D000               	goto	l114
   777  001154                     l114:
   778  001154  0012               	return		;funcret
   779  001156                     __end_of_OpenUSART:
   780                           	opt stack 0
   781                           tblptru	equ	0xFF8
   782                           tblptrh	equ	0xFF7
   783                           tblptrl	equ	0xFF6
   784                           tablat	equ	0xFF5
   785                           intcon	equ	0xFF2
   786                           intcon2	equ	0xFF1
   787                           intcon3	equ	0xFF0
   788                           status	equ	0xFD8
   789                           
   790 ;; *************** function _Init_ADC *****************
   791 ;; Defined at:
   792 ;;		line 51 in file "Lab9pA.c"
   793 ;; Parameters:    Size  Location     Type
   794 ;;		None
   795 ;; Auto vars:     Size  Location     Type
   796 ;;		None
   797 ;; Return value:  Size  Location     Type
   798 ;;		None               void
   799 ;; Registers used:
   800 ;;		wreg, status,2
   801 ;; Tracked objects:
   802 ;;		On entry : 0/0
   803 ;;		On exit  : 0/0
   804 ;;		Unchanged: 0/0
   805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   810 ;;Total ram usage:        0 bytes
   811 ;; Hardware stack levels used:    1
   812 ;; Hardware stack levels required when called:    2
   813 ;; This function calls:
   814 ;;		Nothing
   815 ;; This function is called by:
   816 ;;		_Do_Init
   817 ;; This function uses a non-reentrant model
   818 ;;
   819                           
   820                           	psect	text6
   821  00124A                     __ptext6:
   822                           	opt stack 0
   823  00124A                     _Init_ADC:
   824                           	opt stack 27
   825                           
   826                           ;Lab9pA.c: 53: ADCON0 = 0x01;
   827                           
   828                           ;incstack = 0
   829  00124A  0E01               	movlw	1
   830  00124C  6EC2               	movwf	4034,c	;volatile
   831                           
   832                           ;Lab9pA.c: 54: ADCON1= 0x0E;
   833  00124E  0E0E               	movlw	14
   834  001250  6EC1               	movwf	4033,c	;volatile
   835                           
   836                           ;Lab9pA.c: 55: ADCON2= 0xA9;
   837  001252  0EA9               	movlw	169
   838  001254  6EC0               	movwf	4032,c	;volatile
   839  001256  0012               	return		;funcret
   840  001258                     __end_of_Init_ADC:
   841                           	opt stack 0
   842                           tblptru	equ	0xFF8
   843                           tblptrh	equ	0xFF7
   844                           tblptrl	equ	0xFF6
   845                           tablat	equ	0xFF5
   846                           intcon	equ	0xFF2
   847                           intcon2	equ	0xFF1
   848                           intcon3	equ	0xFF0
   849                           status	equ	0xFD8
   850                           
   851 ;; *************** function _chkisr *****************
   852 ;; Defined at:
   853 ;;		line 104 in file "Lab9pA.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;		None
   856 ;; Auto vars:     Size  Location     Type
   857 ;;		None
   858 ;; Return value:  Size  Location     Type
   859 ;;		None               void
   860 ;; Registers used:
   861 ;;		wreg, status,2, cstack
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   869 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   870 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   871 ;;Total ram usage:       14 bytes
   872 ;; Hardware stack levels used:    1
   873 ;; Hardware stack levels required when called:    1
   874 ;; This function calls:
   875 ;;		_INT0_ISR
   876 ;;		_INT1_ISR
   877 ;;		_INT2_ISR
   878 ;; This function is called by:
   879 ;;		Interrupt level 2
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	intcode
   884  000008                     __pintcode:
   885                           	opt stack 0
   886  000008                     _chkisr:
   887                           	opt stack 26
   888                           
   889                           ;incstack = 0
   890  000008  CFFA F001          	movff	pclath,??_chkisr
   891  00000C  CFFB F002          	movff	pclatu,??_chkisr+1
   892  000010  CFE9 F003          	movff	fsr0l,??_chkisr+2
   893  000014  ED30  F008         	call	int_func,f	;refresh shadow registers
   894                           pclatu	equ	0xFFB
   895                           pclath	equ	0xFFA
   896                           tblptru	equ	0xFF8
   897                           tblptrh	equ	0xFF7
   898                           tblptrl	equ	0xFF6
   899                           tablat	equ	0xFF5
   900                           intcon	equ	0xFF2
   901                           intcon2	equ	0xFF1
   902                           intcon3	equ	0xFF0
   903                           fsr0l	equ	0xFE9
   904                           status	equ	0xFD8
   905                           
   906                           	psect	intcode_body
   907  001060                     __pintcode_body:
   908                           	opt stack 26
   909  001060                     int_func:
   910                           	opt stack 26
   911  001060  0006               	pop		; remove dummy address from shadow register refresh
   912  001062  CFEA F004          	movff	fsr0h,??_chkisr+3
   913  001066  CFE1 F005          	movff	fsr1l,??_chkisr+4
   914  00106A  CFE2 F006          	movff	fsr1h,??_chkisr+5
   915  00106E  CFD9 F007          	movff	fsr2l,??_chkisr+6
   916  001072  CFDA F008          	movff	fsr2h,??_chkisr+7
   917  001076  CFF3 F009          	movff	prodl,??_chkisr+8
   918  00107A  CFF4 F00A          	movff	prodh,??_chkisr+9
   919  00107E  CFF6 F00B          	movff	tblptrl,??_chkisr+10
   920  001082  CFF7 F00C          	movff	tblptrh,??_chkisr+11
   921  001086  CFF8 F00D          	movff	tblptru,??_chkisr+12
   922  00108A  CFF5 F00E          	movff	tablat,??_chkisr+13
   923                           
   924                           ;Lab9pA.c: 106: if (INTCONbits.INT0IF == 1) INT0_ISR();
   925  00108E  A2F2               	btfss	intcon,1,c	;volatile
   926  001090  D003               	goto	i2l812
   927  001092  EC38  F009         	call	_INT0_ISR	;wreg free
   928  001096  D000               	goto	i2l812
   929  001098                     i2l812:
   930                           
   931                           ;Lab9pA.c: 108: if (INTCON3bits.INT1IF == 1) INT1_ISR();
   932  001098  A0F0               	btfss	intcon3,0,c	;volatile
   933  00109A  D003               	goto	i2l816
   934  00109C  EC32  F009         	call	_INT1_ISR	;wreg free
   935  0010A0  D000               	goto	i2l816
   936  0010A2                     i2l816:
   937                           
   938                           ;Lab9pA.c: 109: if (INTCON3bits.INT2IF == 1) INT2_ISR();
   939  0010A2  A2F0               	btfss	intcon3,1,c	;volatile
   940  0010A4  D003               	goto	i2l62
   941  0010A6  EC2C  F009         	call	_INT2_ISR	;wreg free
   942  0010AA  D000               	goto	i2l62
   943  0010AC                     i2l62:
   944  0010AC  C00E  FFF5         	movff	??_chkisr+13,tablat
   945  0010B0  C00D  FFF8         	movff	??_chkisr+12,tblptru
   946  0010B4  C00C  FFF7         	movff	??_chkisr+11,tblptrh
   947  0010B8  C00B  FFF6         	movff	??_chkisr+10,tblptrl
   948  0010BC  C00A  FFF4         	movff	??_chkisr+9,prodh
   949  0010C0  C009  FFF3         	movff	??_chkisr+8,prodl
   950  0010C4  C008  FFDA         	movff	??_chkisr+7,fsr2h
   951  0010C8  C007  FFD9         	movff	??_chkisr+6,fsr2l
   952  0010CC  C006  FFE2         	movff	??_chkisr+5,fsr1h
   953  0010D0  C005  FFE1         	movff	??_chkisr+4,fsr1l
   954  0010D4  C004  FFEA         	movff	??_chkisr+3,fsr0h
   955  0010D8  C003  FFE9         	movff	??_chkisr+2,fsr0l
   956  0010DC  C002  FFFB         	movff	??_chkisr+1,pclatu
   957  0010E0  C001  FFFA         	movff	??_chkisr,pclath
   958  0010E4  0011               	retfie		f
   959  0010E6                     __end_of_chkisr:
   960                           	opt stack 0
   961                           pclatu	equ	0xFFB
   962                           pclath	equ	0xFFA
   963                           tblptru	equ	0xFF8
   964                           tblptrh	equ	0xFF7
   965                           tblptrl	equ	0xFF6
   966                           tablat	equ	0xFF5
   967                           prodh	equ	0xFF4
   968                           prodl	equ	0xFF3
   969                           intcon	equ	0xFF2
   970                           intcon2	equ	0xFF1
   971                           intcon3	equ	0xFF0
   972                           fsr0h	equ	0xFEA
   973                           fsr0l	equ	0xFE9
   974                           fsr1h	equ	0xFE2
   975                           fsr1l	equ	0xFE1
   976                           fsr2h	equ	0xFDA
   977                           fsr2l	equ	0xFD9
   978                           status	equ	0xFD8
   979                           
   980 ;; *************** function _INT2_ISR *****************
   981 ;; Defined at:
   982 ;;		line 98 in file "Lab9pA.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;		None               void
   989 ;; Registers used:
   990 ;;		wreg, status,2
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1000 ;;Total ram usage:        0 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; This function calls:
  1003 ;;		Nothing
  1004 ;; This function is called by:
  1005 ;;		_chkisr
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           	psect	text8
  1010  001258                     __ptext8:
  1011                           	opt stack 0
  1012  001258                     _INT2_ISR:
  1013                           	opt stack 26
  1014                           
  1015                           ;Lab9pA.c: 100: INTCON3bits.INT2IF=0;
  1016                           
  1017                           ;incstack = 0
  1018  001258  92F0               	bcf	intcon3,1,c	;volatile
  1019                           
  1020                           ;Lab9pA.c: 101: INT2_flag = 1;
  1021  00125A  0E00               	movlw	0
  1022  00125C  6E1A               	movwf	_INT2_flag+1,c
  1023  00125E  0E01               	movlw	1
  1024  001260  6E19               	movwf	_INT2_flag,c
  1025  001262  0012               	return		;funcret
  1026  001264                     __end_of_INT2_ISR:
  1027                           	opt stack 0
  1028                           pclatu	equ	0xFFB
  1029                           pclath	equ	0xFFA
  1030                           tblptru	equ	0xFF8
  1031                           tblptrh	equ	0xFF7
  1032                           tblptrl	equ	0xFF6
  1033                           tablat	equ	0xFF5
  1034                           prodh	equ	0xFF4
  1035                           prodl	equ	0xFF3
  1036                           intcon	equ	0xFF2
  1037                           intcon2	equ	0xFF1
  1038                           intcon3	equ	0xFF0
  1039                           fsr0h	equ	0xFEA
  1040                           fsr0l	equ	0xFE9
  1041                           fsr1h	equ	0xFE2
  1042                           fsr1l	equ	0xFE1
  1043                           fsr2h	equ	0xFDA
  1044                           fsr2l	equ	0xFD9
  1045                           status	equ	0xFD8
  1046                           
  1047 ;; *************** function _INT1_ISR *****************
  1048 ;; Defined at:
  1049 ;;		line 92 in file "Lab9pA.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;		None
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;		None
  1054 ;; Return value:  Size  Location     Type
  1055 ;;		None               void
  1056 ;; Registers used:
  1057 ;;		wreg, status,2
  1058 ;; Tracked objects:
  1059 ;;		On entry : 0/0
  1060 ;;		On exit  : 0/0
  1061 ;;		Unchanged: 0/0
  1062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1067 ;;Total ram usage:        0 bytes
  1068 ;; Hardware stack levels used:    1
  1069 ;; This function calls:
  1070 ;;		Nothing
  1071 ;; This function is called by:
  1072 ;;		_chkisr
  1073 ;; This function uses a non-reentrant model
  1074 ;;
  1075                           
  1076                           	psect	text9
  1077  001264                     __ptext9:
  1078                           	opt stack 0
  1079  001264                     _INT1_ISR:
  1080                           	opt stack 26
  1081                           
  1082                           ;Lab9pA.c: 94: INTCON3bits.INT1IF=0;
  1083                           
  1084                           ;incstack = 0
  1085  001264  90F0               	bcf	intcon3,0,c	;volatile
  1086                           
  1087                           ;Lab9pA.c: 95: INT1_flag = 1;
  1088  001266  0E00               	movlw	0
  1089  001268  6E18               	movwf	_INT1_flag+1,c
  1090  00126A  0E01               	movlw	1
  1091  00126C  6E17               	movwf	_INT1_flag,c
  1092  00126E  0012               	return		;funcret
  1093  001270                     __end_of_INT1_ISR:
  1094                           	opt stack 0
  1095                           pclatu	equ	0xFFB
  1096                           pclath	equ	0xFFA
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           prodh	equ	0xFF4
  1102                           prodl	equ	0xFF3
  1103                           intcon	equ	0xFF2
  1104                           intcon2	equ	0xFF1
  1105                           intcon3	equ	0xFF0
  1106                           fsr0h	equ	0xFEA
  1107                           fsr0l	equ	0xFE9
  1108                           fsr1h	equ	0xFE2
  1109                           fsr1l	equ	0xFE1
  1110                           fsr2h	equ	0xFDA
  1111                           fsr2l	equ	0xFD9
  1112                           status	equ	0xFD8
  1113                           
  1114 ;; *************** function _INT0_ISR *****************
  1115 ;; Defined at:
  1116 ;;		line 86 in file "Lab9pA.c"
  1117 ;; Parameters:    Size  Location     Type
  1118 ;;		None
  1119 ;; Auto vars:     Size  Location     Type
  1120 ;;		None
  1121 ;; Return value:  Size  Location     Type
  1122 ;;		None               void
  1123 ;; Registers used:
  1124 ;;		wreg, status,2
  1125 ;; Tracked objects:
  1126 ;;		On entry : 0/0
  1127 ;;		On exit  : 0/0
  1128 ;;		Unchanged: 0/0
  1129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1134 ;;Total ram usage:        0 bytes
  1135 ;; Hardware stack levels used:    1
  1136 ;; This function calls:
  1137 ;;		Nothing
  1138 ;; This function is called by:
  1139 ;;		_chkisr
  1140 ;; This function uses a non-reentrant model
  1141 ;;
  1142                           
  1143                           	psect	text10
  1144  001270                     __ptext10:
  1145                           	opt stack 0
  1146  001270                     _INT0_ISR:
  1147                           	opt stack 26
  1148                           
  1149                           ;Lab9pA.c: 88: INTCONbits.INT0IF=0;
  1150                           
  1151                           ;incstack = 0
  1152  001270  92F2               	bcf	intcon,1,c	;volatile
  1153                           
  1154                           ;Lab9pA.c: 89: INT0_flag = 1;
  1155  001272  0E00               	movlw	0
  1156  001274  6E16               	movwf	_INT0_flag+1,c
  1157  001276  0E01               	movlw	1
  1158  001278  6E15               	movwf	_INT0_flag,c
  1159  00127A  0012               	return		;funcret
  1160  00127C                     __end_of_INT0_ISR:
  1161                           	opt stack 0
  1162                           pclatu	equ	0xFFB
  1163                           pclath	equ	0xFFA
  1164                           tblptru	equ	0xFF8
  1165                           tblptrh	equ	0xFF7
  1166                           tblptrl	equ	0xFF6
  1167                           tablat	equ	0xFF5
  1168                           prodh	equ	0xFF4
  1169                           prodl	equ	0xFF3
  1170                           intcon	equ	0xFF2
  1171                           intcon2	equ	0xFF1
  1172                           intcon3	equ	0xFF0
  1173                           fsr0h	equ	0xFEA
  1174                           fsr0l	equ	0xFE9
  1175                           fsr1h	equ	0xFE2
  1176                           fsr1l	equ	0xFE1
  1177                           fsr2h	equ	0xFDA
  1178                           fsr2l	equ	0xFD9
  1179                           status	equ	0xFD8
  1180                           pclatu	equ	0xFFB
  1181                           pclath	equ	0xFFA
  1182                           tblptru	equ	0xFF8
  1183                           tblptrh	equ	0xFF7
  1184                           tblptrl	equ	0xFF6
  1185                           tablat	equ	0xFF5
  1186                           prodh	equ	0xFF4
  1187                           prodl	equ	0xFF3
  1188                           intcon	equ	0xFF2
  1189                           intcon2	equ	0xFF1
  1190                           intcon3	equ	0xFF0
  1191                           fsr0h	equ	0xFEA
  1192                           fsr0l	equ	0xFE9
  1193                           fsr1h	equ	0xFE2
  1194                           fsr1l	equ	0xFE1
  1195                           fsr2h	equ	0xFDA
  1196                           fsr2l	equ	0xFD9
  1197                           status	equ	0xFD8
  1198                           
  1199                           	psect	rparam
  1200  0000                     pclatu	equ	0xFFB
  1201                           pclath	equ	0xFFA
  1202                           tblptru	equ	0xFF8
  1203                           tblptrh	equ	0xFF7
  1204                           tblptrl	equ	0xFF6
  1205                           tablat	equ	0xFF5
  1206                           prodh	equ	0xFF4
  1207                           prodl	equ	0xFF3
  1208                           intcon	equ	0xFF2
  1209                           intcon2	equ	0xFF1
  1210                           intcon3	equ	0xFF0
  1211                           fsr0h	equ	0xFEA
  1212                           fsr0l	equ	0xFE9
  1213                           fsr1h	equ	0xFE2
  1214                           fsr1l	equ	0xFE1
  1215                           fsr2h	equ	0xFDA
  1216                           fsr2l	equ	0xFD9
  1217                           status	equ	0xFD8


Data Sizes:
    Strings     93
    Constant    0
    Data        0
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     20      26
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 31
		 -> STR_3(CODE[31]), STR_2(CODE[31]), STR_1(CODE[31]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_putch
    _init_UART->_OpenUSART

Critical Paths under _chkisr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _chkisr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _chkisr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _chkisr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _chkisr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _chkisr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _chkisr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _chkisr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _chkisr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _chkisr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _chkisr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _chkisr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _chkisr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _chkisr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _chkisr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _chkisr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _chkisr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     493
                            _Do_Init
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              18    16      2     220
                                             15 COMRAM     5     3      2
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      15
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Do_Init                                              0     0      0     273
                           _Init_ADC
                          _init_UART
 ---------------------------------------------------------------------------------
 (2) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (3) _OpenUSART                                            3     1      2     273
                                             14 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (2) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _chkisr                                              14    14      0       0
                                              0 COMRAM    14    14      0
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (5) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Do_Init
     _Init_ADC
     _init_UART
       _OpenUSART
   _printf
     _putch

 _chkisr (ROOT)
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     14      1A       1       20.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1A      34        0.0%
DATA                 0      0      1A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Apr 07 11:22:55 2022

                     l32 1240                      l110 112E                      l111 1138  
                    l112 113A                      l105 1112                      l114 1154  
                    l109 112C                      l860 1116                      l852 1102  
                    l924 11C6                      l932 115E                      l926 11CE  
                    l856 110A                      l848 10F8                      l944 119A  
                    l938 117C                      l868 1124             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     STR_1 1001                     STR_2 1020  
                   STR_3 103F                     i2l62 10AC                     _RBPU 007F8F  
                   _TRMT 007D61                     _main 1156                     fsr0h 000FEA  
                   fsr1h 000FE2                     fsr0l 000FE9                     fsr2h 000FDA  
                   fsr1l 000FE1                     fsr2l 000FD9                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0018  
        __end_of_Do_Init 120E             ___param_bank 000010         __end_of_INT0_ISR 127C  
       __end_of_INT1_ISR 1270         __end_of_INT2_ISR 1264                    ?_main 0001  
                  i2l812 1098                    i2l816 10A2                    _RCSTA 000FAB  
                  _SPBRG 000FAF                    _TRISB 000F93                    _TXREG 000FAD  
                  _TXSTA 000FAC                    _putch 123C           __CFG_BOREN$OFF 000000  
                  tablat 000FF5                    status 000FD8          __initialization 120E  
           __end_of_main 11BC         __end_of_Init_ADC 1258                   ??_main 0015  
          __activetblptr 000001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_putch 0001                ??_Do_Init 0012  
                 _OSCCON 000FD3                   _SPBRGH 000FB0       __size_of_OpenUSART 0070  
                 _chkisr 0008                   _printf 11BC             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
                 putch@c 000F               __accesstop 0080  __end_of__initialization 121A  
              ?_INT0_ISR 0001                ?_INT1_ISR 0001                ?_INT2_ISR 0001  
          ___rparam_used 000001           __pcstackCOMRAM 0001            __end_of_putch 124A  
      __end_of_OpenUSART 1156                  ??_putch 000F                ?_Init_ADC 0001  
     __size_of_init_UART 0014               ??_INT0_ISR 0001               ??_INT1_ISR 0001  
             ??_INT2_ISR 0001       __CFG_CCP2MX$PORTBE 000000                  ?_chkisr 0001  
                ?_printf 0010               ??_Init_ADC 000F                  _Do_Init 11E8  
                __Hparam 0000                  __Lparam 0000          __size_of_chkisr 10DE  
           __psmallconst 1000                  __pcinit 120E                  __ramtop 1000  
                __ptext0 1156                  __ptext1 11BC                  __ptext2 123C  
                __ptext3 11E8                  __ptext4 1228                  __ptext5 10E6  
                __ptext6 124A                  __ptext8 1258                  __ptext9 1264  
        __size_of_printf 002C        __end_of_init_UART 123C           __pintcode_body 1060  
   end_of_initialization 121A                _INT0_flag 0015                _INT1_flag 0017  
              _INT2_flag 0019                  int_func 1060                _RCSTAbits 000FAB  
                printf@c 0014                  printf@f 0010                _TRISCbits 000F94  
              _TXSTAbits 000FAC        __size_of_INT0_ISR 000C        __size_of_INT1_ISR 000C  
      __size_of_INT2_ISR 000C           __end_of_chkisr 10E6           __end_of_printf 11E8  
    start_initialization 120E                _OpenUSART 10E6         __CFG_OSC$INTIO67 000000  
      __size_of_Init_ADC 000E                 ??_chkisr 0001                 ??_printf 0012  
            __pbssCOMRAM 0015                 ?_Do_Init 0001               ?_OpenUSART 000F  
              __pintcode 0008              __smallconst 1000                _init_UART 1228  
         __size_of_putch 000E                 _INT0_ISR 1270                 _INT1_ISR 1264  
               _INT2_ISR 1258                 _PIE1bits 000F9D                 _PIR1bits 000F9E  
             ?_init_UART 0001              _INTCON2bits 000FF1              _INTCON3bits 000FF0  
               _Init_ADC 124A              ??_OpenUSART 0011         __size_of_Do_Init 0026  
        OpenUSART@config 0011                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 1000                 __ptext10 1270            __size_of_main 0066  
             _INTCONbits 000FF2           OpenUSART@spbrg 000F              ??_init_UART 0012  
               intlevel2 0000                 printf@ap 0012  
